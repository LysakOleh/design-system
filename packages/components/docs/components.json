{
  "timestamp": "2021-11-24T16:25:00",
  "compiler": {
    "name": "@stencil/core",
    "version": "2.11.0",
    "typescriptVersion": "4.3.5"
  },
  "components": [
    {
      "filePath": "./src/components/bal-accordion/bal-accordion.tsx",
      "encapsulation": "scoped",
      "tag": "bal-accordion",
      "readme": "# Accordion\n",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "card",
          "type": "boolean",
          "mutable": false,
          "attr": "card",
          "reflectToAttr": false,
          "docs": "If `true` the accordion is used on the bottom of a card",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "closeIcon",
          "type": "string",
          "mutable": false,
          "attr": "close-icon",
          "reflectToAttr": false,
          "docs": "Bal-Icon of the close trigger button",
          "docsTags": [],
          "default": "'minus'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "closeLabel",
          "type": "string",
          "mutable": false,
          "attr": "close-label",
          "reflectToAttr": false,
          "docs": "Label of the close trigger button",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "color",
          "type": "\"info\" | \"primary\"",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "Type defines the theme of the accordion toggle",
          "docsTags": [],
          "default": "'primary'",
          "values": [
            {
              "value": "info",
              "type": "string"
            },
            {
              "value": "primary",
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "isActive",
          "type": "boolean",
          "mutable": true,
          "attr": "is-active",
          "reflectToAttr": true,
          "docs": "Controls if the accordion is collapsed or not",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "openIcon",
          "type": "string",
          "mutable": false,
          "attr": "open-icon",
          "reflectToAttr": false,
          "docs": "Bal-Icon of the open trigger button",
          "docsTags": [],
          "default": "'plus'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "openLabel",
          "type": "string",
          "mutable": false,
          "attr": "open-label",
          "reflectToAttr": false,
          "docs": "Label of the open trigger button",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [
        {
          "name": "close",
          "returns": {
            "type": "Promise<void>",
            "docs": ""
          },
          "signature": "close() => Promise<void>",
          "parameters": [],
          "docs": "Close the accordion",
          "docsTags": []
        },
        {
          "name": "open",
          "returns": {
            "type": "Promise<void>",
            "docs": ""
          },
          "signature": "open() => Promise<void>",
          "parameters": [],
          "docs": "Open the accordion",
          "docsTags": []
        },
        {
          "name": "toggle",
          "returns": {
            "type": "Promise<void>",
            "docs": ""
          },
          "signature": "toggle() => Promise<void>",
          "parameters": [],
          "docs": "Triggers the accordion",
          "docsTags": []
        }
      ],
      "events": [
        {
          "event": "balCollapse",
          "detail": "boolean",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Emmited when the accordion has changed",
          "docsTags": []
        }
      ],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [
        "bal-button"
      ],
      "dependencyGraph": {
        "bal-accordion": [
          "bal-button"
        ],
        "bal-button": [
          "bal-spinner",
          "bal-icon",
          "bal-text"
        ]
      },
      "parent": null,
      "isChild": false,
      "childComponents": [],
      "examples": "<!DOCTYPE html>\n<html dir=\"ltr\" lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, minimum-scale=1.0, maximum-scale=5.0\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n    <link rel=\"stylesheet\" href=\"/build/design-system-components.css\" />\n    <script type=\"module\" src=\"/build/design-system-components.esm.js\"></script>\n    <script nomodule src=\"/build/design-system-components.js\"></script>\n  </head>\n  <body class=\"bal-app\">\n    <div class=\"container\">\n      <h2 class=\"title is-size-2\">Basic</h2>\n      <section>\n        <bal-accordion class=\"box\" open-label=\"Details einblenden\" close-label=\"Details ausblenden\" data-test-id=\"accordion\">\n          <p class=\"p-4\">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>\n        </bal-accordion>\n      </section>\n\n      <h2 class=\"title is-size-2\">Colors</h2>\n      <p>The accordion has 2 colors of themes `is-info` and `is-primary`.</p>\n      <section>\n        <bal-accordion class=\"box\" color=\"info\" open-label=\"Details einblenden\" close-label=\"Details ausblenden\">\n          <p class=\"p-4\">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>\n        </bal-accordion>\n      </section>\n\n      <h2 class=\"title is-size-2\">Open accordion</h2>\n      <section>\n        <bal-accordion class=\"box\" collapsed=\"false\" open-label=\"Details einblenden\" close-label=\"Details ausblenden\">\n          <p class=\"p-4\">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>\n        </bal-accordion>\n      </section>\n\n      <h2 class=\"title is-size-2\">Trigger label & icon</h2>\n      <p>Use the properties `open-label` & `open-icon` to change the content of the trigger button.</p>\n      <section>\n        <bal-accordion class=\"box\" open-icon=\"edit\" open-label=\"Bearbeiten\" close-label=\"Schliessen\" close-icon=\"close\">\n          <p class=\"p-4\">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>\n        </bal-accordion>\n      </section>\n\n      <h2 class=\"title is-size-2\">With card</h2>\n      <section>\n        <bal-card>\n          <bal-card-title>BaloiseCombi</bal-card-title>\n          <bal-card-subtitle>Police number 70/2.937.458</bal-card-subtitle>\n\n          <bal-accordion card>\n            <p class=\"p-4\">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>\n          </bal-accordion>\n        </bal-card>\n      </section>\n    </div>\n  </body>\n</html>\n"
    },
    {
      "filePath": "./src/components/bal-app/bal-app.tsx",
      "encapsulation": "none",
      "tag": "bal-app",
      "readme": "# App\n",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "background",
          "type": "boolean",
          "mutable": false,
          "attr": "background",
          "reflectToAttr": false,
          "docs": "If `true` it adds a light background to the app",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {},
      "parent": null,
      "isChild": false,
      "childComponents": [],
      "examples": "<!DOCTYPE html>\n<html dir=\"ltr\" lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, minimum-scale=1.0, maximum-scale=5.0\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n    <link rel=\"stylesheet\" href=\"/build/design-system-components.css\" />\n    <script type=\"module\" src=\"/build/design-system-components.esm.js\"></script>\n    <script nomodule src=\"/build/design-system-components.js\"></script>\n  </head>\n  <body class=\"bal-app\">\n    <div class=\"container\">\n      <h2 class=\"title is-size-2\">Basic</h2>\n      <section>\n        <bal-app background>\n          <header class=\"has-background-white\">\n            <bal-navbar no-burger>\n              <bal-navbar-brand>\n                <bal-icon name=\"logo\" inverted size=\"large\"></bal-icon>\n                <bal-text style=\"margin-left: 15px\">Portal</bal-text>\n              </bal-navbar-brand>\n            </bal-navbar>\n          </header>\n          <main>\n            <div class=\"container\">\n              <bal-card class=\"has-margin-top\">\n                <bal-card-title>BaloiseCombi</bal-card-title>\n                <bal-card-subtitle>Police number 70/2.937.458</bal-card-subtitle>\n\n                <bal-card-content> Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. </bal-card-content>\n\n                <bal-card-actions>\n                  <bal-button>Action</bal-button>\n                  <bal-button>Action 2</bal-button>\n                </bal-card-actions>\n              </bal-card>\n            </div>\n          </main>\n\n          <bal-footer has-track-line>\n            <div class=\"container\">\n              <span style=\"margin-right: 16px\">Baloise Group</span>\n              <span style=\"margin-right: 16px\">Legal notice</span>\n              <span style=\"margin-right: 16px\">Cookie policy</span>\n              <span>Data protection</span>\n            </div>\n          </bal-footer>\n        </bal-app>\n      </section>\n    </div>\n  </body>\n</html>\n"
    },
    {
      "filePath": "./src/components/bal-button/bal-button.tsx",
      "encapsulation": "scoped",
      "tag": "bal-button",
      "readme": "# Button\n",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "bottomRounded",
          "type": "boolean",
          "mutable": false,
          "attr": "bottom-rounded",
          "reflectToAttr": false,
          "docs": "If `true` the bottom corners get rounded",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "color",
          "type": "\"danger\" | \"info\" | \"info-light\" | \"link\" | \"primary\" | \"primary-light\" | \"success\" | \"warning\"",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "The color to use from your application's color palette.",
          "docsTags": [],
          "default": "'primary'",
          "values": [
            {
              "value": "danger",
              "type": "string"
            },
            {
              "value": "info",
              "type": "string"
            },
            {
              "value": "info-light",
              "type": "string"
            },
            {
              "value": "link",
              "type": "string"
            },
            {
              "value": "primary",
              "type": "string"
            },
            {
              "value": "primary-light",
              "type": "string"
            },
            {
              "value": "success",
              "type": "string"
            },
            {
              "value": "warning",
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "disabled",
          "type": "boolean",
          "mutable": false,
          "attr": "disabled",
          "reflectToAttr": true,
          "docs": "If `true`, the user cannot interact with the button.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "download",
          "type": "string | undefined",
          "mutable": false,
          "attr": "download",
          "reflectToAttr": false,
          "docs": "This attribute instructs browsers to download a URL instead of navigating to\nit, so the user will be prompted to save it as a local file. If the attribute\nhas a value, it is used as the pre-filled file name in the Save prompt\n(the user can still change the file name if they want).",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            },
            {
              "type": "undefined"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "expanded",
          "type": "boolean",
          "mutable": false,
          "attr": "expanded",
          "reflectToAttr": false,
          "docs": "If `true` the button has a full width",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "href",
          "type": "string | undefined",
          "mutable": false,
          "attr": "href",
          "reflectToAttr": false,
          "docs": "Specifies the URL of the page the link goes to",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            },
            {
              "type": "undefined"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "icon",
          "type": "string",
          "mutable": false,
          "attr": "icon",
          "reflectToAttr": false,
          "docs": "Name of the left button icon",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "iconPosition",
          "type": "\"left\" | \"right\"",
          "mutable": false,
          "attr": "icon-position",
          "reflectToAttr": false,
          "docs": "Size of the button",
          "docsTags": [],
          "default": "'left'",
          "values": [
            {
              "value": "left",
              "type": "string"
            },
            {
              "value": "right",
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "iconRight",
          "type": "string",
          "mutable": false,
          "attr": "icon-right",
          "reflectToAttr": false,
          "docs": "Name of the right button icon",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "inverted",
          "type": "boolean",
          "mutable": false,
          "attr": "inverted",
          "reflectToAttr": false,
          "docs": "If `true` the button is inverted",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "isActive",
          "type": "boolean",
          "mutable": false,
          "attr": "is-active",
          "reflectToAttr": false,
          "docs": "If `true` the button has a active theme",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "link",
          "type": "boolean",
          "mutable": false,
          "attr": "link",
          "reflectToAttr": false,
          "docs": "Turn the button in to a link.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "loading",
          "type": "boolean",
          "mutable": false,
          "attr": "loading",
          "reflectToAttr": false,
          "docs": "If `true` the label is hidden and a loading spinner is shown instead.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "name",
          "type": "string | undefined",
          "mutable": false,
          "attr": "name",
          "reflectToAttr": false,
          "docs": "The name of the button, which is submitted with the form data.",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "string"
            },
            {
              "type": "undefined"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "outlined",
          "type": "boolean",
          "mutable": false,
          "attr": "outlined",
          "reflectToAttr": false,
          "docs": "If `true` the button is outlined",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "rel",
          "type": "string | undefined",
          "mutable": false,
          "attr": "rel",
          "reflectToAttr": false,
          "docs": "Specifies the relationship of the target object to the link object.\nThe value is a space-separated list of [link types](https://developer.mozilla.org/en-US/docs/Web/HTML/Link_types).",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            },
            {
              "type": "undefined"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "size",
          "type": "\"\" | \"small\"",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": true,
          "docs": "Size of the button",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "\"\""
            },
            {
              "value": "small",
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "square",
          "type": "boolean",
          "mutable": false,
          "attr": "square",
          "reflectToAttr": false,
          "docs": "If `true` the width of the buttons is limited",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "target",
          "type": "\" _parent\" | \"_blank\" | \"_self\" | \"_top\"",
          "mutable": false,
          "attr": "target",
          "reflectToAttr": false,
          "docs": "Specifies where to display the linked URL.\nOnly applies when an `href` is provided.",
          "docsTags": [],
          "default": "'_self'",
          "values": [
            {
              "value": " _parent",
              "type": "string"
            },
            {
              "value": "_blank",
              "type": "string"
            },
            {
              "value": "_self",
              "type": "string"
            },
            {
              "value": "_top",
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "topRounded",
          "type": "boolean",
          "mutable": false,
          "attr": "top-rounded",
          "reflectToAttr": false,
          "docs": "If `true` the top corners get rounded",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "type",
          "type": "\"button\" | \"reset\" | \"submit\"",
          "mutable": false,
          "attr": "type",
          "reflectToAttr": false,
          "docs": "The type of button.",
          "docsTags": [],
          "default": "'button'",
          "values": [
            {
              "value": "button",
              "type": "string"
            },
            {
              "value": "reset",
              "type": "string"
            },
            {
              "value": "submit",
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "value",
          "type": "number | string | undefined",
          "mutable": false,
          "attr": "value",
          "reflectToAttr": false,
          "docs": "The value of the button, which is submitted with the form data.",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "number"
            },
            {
              "type": "string"
            },
            {
              "type": "undefined"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [
        {
          "event": "balBlur",
          "detail": "void",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Emitted when the button loses focus.",
          "docsTags": []
        },
        {
          "event": "balDidRender",
          "detail": "void",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Emitted when the button has been  rendered.",
          "docsTags": []
        },
        {
          "event": "balFocus",
          "detail": "void",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Emitted when the button has focus.",
          "docsTags": []
        },
        {
          "event": "balNavigate",
          "detail": "MouseEvent",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Emitted when the link element has clicked.",
          "docsTags": []
        }
      ],
      "listeners": [
        {
          "event": "click",
          "target": "document",
          "capture": true,
          "passive": false
        }
      ],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [
        "bal-accordion",
        "bal-card-button",
        "bal-data-value",
        "bal-hint",
        "bal-snackbar",
        "bal-tabs"
      ],
      "dependencies": [
        "bal-spinner",
        "bal-icon",
        "bal-text"
      ],
      "dependencyGraph": {
        "bal-button": [
          "bal-spinner",
          "bal-icon",
          "bal-text"
        ],
        "bal-accordion": [
          "bal-button"
        ],
        "bal-card-button": [
          "bal-button"
        ],
        "bal-data-value": [
          "bal-button"
        ],
        "bal-hint": [
          "bal-button"
        ],
        "bal-snackbar": [
          "bal-button"
        ],
        "bal-tabs": [
          "bal-button"
        ]
      },
      "parent": null,
      "isChild": false,
      "childComponents": [],
      "examples": "<!DOCTYPE html>\n<html dir=\"ltr\" lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, minimum-scale=1.0, maximum-scale=5.0\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n    <link rel=\"stylesheet\" href=\"/build/design-system-components.css\" />\n    <script type=\"module\" src=\"/build/design-system-components.esm.js\"></script>\n    <script nomodule src=\"/build/design-system-components.js\"></script>\n  </head>\n  <body class=\"bal-app\">\n    <div class=\"container\">\n      <h2 class=\"title is-size-2\">Basic</h2>\n      <section>\n        <div class=\"bal-buttons is-center\">\n          <bal-button color=\"primary\" data-test-id=\"primary-button\">Continue</bal-button>\n          <bal-button color=\"link\">Back</bal-button>\n        </div>\n      </section>\n\n      <h2 class=\"title is-size-2\">Links</h2>\n      <section>\n        <a href=\"https://design.baloise.dev/\" class=\"is-link\">Link</a>\n\n        <div class=\"has-background-info p-2\">\n          <a href=\"https://design.baloise.dev/\" class=\"is-link is-inverted\">Inverted Link</a>\n        </div>\n      </section>\n\n      <h2 class=\"title is-size-2\">Info</h2>\n      <section>\n        <div class=\"bal-buttons\">\n          <bal-button color=\"info\">Info</bal-button>\n          <bal-button color=\"info\" outlined>Info Outlined</bal-button>\n        </div>\n      </section>\n\n      <h2 class=\"title is-size-2\">Inverted</h2>\n      <section>\n        <div class=\"has-background-info p-2\">\n          <div class=\"bal-buttons is-flex\">\n            <bal-button class=\"is-full\" color=\"primary\" inverted>Primary</bal-button>\n            <bal-button color=\"info\" inverted>Info</bal-button>\n            <bal-button color=\"info\" inverted outlined>Info Outlined</bal-button>\n          </div>\n        </div>\n      </section>\n\n      <h2 class=\"title is-size-2\">Other colors</h2>\n      <section>\n        <bal-button color=\"primary-light\" icon=\"edit\">Primary Light</bal-button>\n        <bal-button color=\"info-light\" icon=\"edit\">Info Light</bal-button>\n        <bal-button color=\"success\">Success</bal-button>\n        <bal-button color=\"warning\">Warning</bal-button>\n        <bal-button color=\"danger\">Danger</bal-button>\n      </section>\n\n      <h2 class=\"title is-size-2\">Disabled</h2>\n      <section>\n        <bal-button color=\"primary\" disabled data-test-id=\"primary-button-disabled\">Primary</bal-button>\n        <bal-button color=\"info\" disabled>Info</bal-button>\n        <bal-button color=\"link\" disabled>Link</bal-button>\n      </section>\n\n      <h2 class=\"title is-size-2\">Loading</h2>\n      <section>\n        <bal-button color=\"primary\" loading>Primary</bal-button>\n        <bal-button color=\"info\" loading>Info</bal-button>\n        <bal-button color=\"info\" loading outlined>Info</bal-button>\n      </section>\n\n      <h2 class=\"title is-size-2\">Expanded</h2>\n      <section>\n        <bal-button color=\"primary\" expanded>Primary</bal-button>\n        <br />\n        <bal-button color=\"info\" expanded>Info</bal-button>\n      </section>\n\n      <h2 class=\"title is-size-2\">With icons</h2>\n      <section>\n        <bal-button color=\"info\" outlined icon=\"edit\">Left Icon</bal-button>\n        <bal-button color=\"info\" outlined icon-right=\"edit\">Right Icon</bal-button>\n      </section>\n\n      <h2 class=\"title is-size-2\">Small buttons</h2>\n      <section>\n        <bal-button color=\"primary\" size=\"small\"> Primary </bal-button>\n        <bal-button color=\"info\" size=\"small\"> Info </bal-button>\n      </section>\n\n      <h2 class=\"title is-size-2\">Square buttons</h2>\n      <section>\n        <bal-button color=\"info\" icon=\"edit\" square outlined></bal-button>\n        <bal-button color=\"info\" size=\"small\" icon=\"edit\" square outlined></bal-button>\n      </section>\n\n      <h2 class=\"title is-size-2\">Button Link</h2>\n      <section>\n        <bal-button link href=\"https://github.com/baloise/design-system-components\" target=\"_blank\">GitHub</bal-button>\n      </section>\n\n      <h2 class=\"title is-size-2\">Button Group</h2>\n      <p>\n        The <code>.bal-buttons</code> css class helps to place button groups together. The buttons stretche on mobile devices according to their css class like\n        <code>.is-full</code>, <code>.is-half</code>, <code>.is-one-third</code> or <code>.is-two-thirds</code>.\n      </p>\n      <section>\n        <div class=\"bal-buttons is-center\">\n          <bal-button class=\"is-full\" color=\"primary\">Primary</bal-button>\n          <div class=\"break\"></div>\n          <bal-button class=\"is-full\" color=\"link\">Secondary</bal-button>\n        </div>\n        <div class=\"bal-buttons is-center\">\n          <bal-button class=\"is-full\" color=\"primary\">Full</bal-button>\n          <bal-button class=\"is-full\" color=\"info\">Full</bal-button>\n        </div>\n        <div class=\"bal-buttons is-center\">\n          <bal-button class=\"is-half\" color=\"primary\">Half</bal-button>\n          <bal-button class=\"is-half\" color=\"info\">Half</bal-button>\n        </div>\n        <div class=\"bal-buttons is-center\">\n          <bal-button class=\"is-one-third\" color=\"primary\">Third</bal-button>\n          <bal-button class=\"is-one-third\" color=\"info\">Third</bal-button>\n          <bal-button class=\"is-one-third\" outlined color=\"info\">Third</bal-button>\n        </div>\n      </section>\n    </div>\n  </body>\n</html>\n"
    },
    {
      "filePath": "./src/components/bal-card/bal-card.tsx",
      "encapsulation": "none",
      "tag": "bal-card",
      "readme": "# Card\n",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "border",
          "type": "boolean",
          "mutable": false,
          "attr": "border",
          "reflectToAttr": false,
          "docs": "If `true` a light blue border is added to the card.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "color",
          "type": "\"\" | \"danger\" | \"info\" | \"primary\" | \"success\" | \"warning\"",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "Defines the color of the card.",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "\"\""
            },
            {
              "value": "danger",
              "type": "string"
            },
            {
              "value": "info",
              "type": "string"
            },
            {
              "value": "primary",
              "type": "string"
            },
            {
              "value": "success",
              "type": "string"
            },
            {
              "value": "warning",
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "flat",
          "type": "boolean",
          "mutable": false,
          "attr": "flat",
          "reflectToAttr": false,
          "docs": "If `true` the card loses its shadow.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "flatMobile",
          "type": "boolean",
          "mutable": false,
          "attr": "flat-mobile",
          "reflectToAttr": false,
          "docs": "If `true` a card will not have a shadow on mobile.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "inverted",
          "type": "boolean",
          "mutable": false,
          "attr": "inverted",
          "reflectToAttr": false,
          "docs": "If `true` the card background color becomes blue.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "padded",
          "type": "boolean",
          "mutable": false,
          "attr": "padded",
          "reflectToAttr": false,
          "docs": "",
          "docsTags": [
            {
              "name": "deprecated",
              "text": "If `true` the card has padding."
            }
          ],
          "default": "false",
          "deprecation": "If `true` the card has padding.",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "padding",
          "type": "\"\" | \"form\" | \"pure\"",
          "mutable": false,
          "attr": "padding",
          "reflectToAttr": false,
          "docs": "",
          "docsTags": [
            {
              "name": "deprecated",
              "text": "Defines the size of the padding grid"
            }
          ],
          "default": "''",
          "deprecation": "Defines the size of the padding grid",
          "values": [
            {
              "type": "\"\""
            },
            {
              "value": "form",
              "type": "string"
            },
            {
              "value": "pure",
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "spacing",
          "type": "\"\" | \"large\" | \"medium\" | \"none\" | \"small\"",
          "mutable": false,
          "attr": "spacing",
          "reflectToAttr": false,
          "docs": "Defines the size of the padding grid",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "\"\""
            },
            {
              "value": "large",
              "type": "string"
            },
            {
              "value": "medium",
              "type": "string"
            },
            {
              "value": "none",
              "type": "string"
            },
            {
              "value": "small",
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "square",
          "type": "boolean",
          "mutable": false,
          "attr": "square",
          "reflectToAttr": false,
          "docs": "If `true` the card loses its border radius.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "teaser",
          "type": "boolean",
          "mutable": false,
          "attr": "teaser",
          "reflectToAttr": false,
          "docs": "If `true` the card has a limited width on desktop.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {},
      "parent": null,
      "isChild": false,
      "childComponents": [
        "bal-card-actions",
        "bal-card-button",
        "bal-card-content",
        "bal-card-head",
        "bal-card-heading",
        "bal-card-steps",
        "bal-card-subtitle",
        "bal-card-title"
      ],
      "examples": "<!DOCTYPE html>\n<html dir=\"ltr\" lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, minimum-scale=1.0, maximum-scale=5.0\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n    <link rel=\"stylesheet\" href=\"/build/design-system-components.css\" />\n    <script type=\"module\" src=\"/build/design-system-components.esm.js\"></script>\n    <script nomodule src=\"/build/design-system-components.js\"></script>\n  </head>\n  <body class=\"bal-app\">\n    <div class=\"container\">\n      <h2 class=\"title is-size-2\">Basic</h2>\n      <section>\n        <bal-card spacing=\"medium\">\n          <bal-card-title>BaloiseCombi</bal-card-title>\n          <bal-card-subtitle>Police number 70/2.937.458</bal-card-subtitle>\n\n          <bal-card-content> Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. </bal-card-content>\n\n          <bal-card-actions>\n            <bal-button>Main Action</bal-button>\n            <bal-button color=\"info\" outlined>Secondary Action</bal-button>\n          </bal-card-actions>\n        </bal-card>\n      </section>\n\n      <h2 class=\"title is-size-2\">Inverted style</h2>\n      <section>\n        <bal-card color=\"info\" inverted>\n          <bal-card-title inverted>BaloiseCombi</bal-card-title>\n          <bal-card-subtitle inverted>Police number 70/2.937.458</bal-card-subtitle>\n\n          <bal-card-content inverted>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\n          </bal-card-content>\n\n          <bal-card-actions right>\n            <bal-button inverted color=\"info\" outlined>Secondary Action</bal-button>\n            <bal-button inverted>Main Action</bal-button>\n          </bal-card-actions>\n        </bal-card>\n      </section>\n\n      <h2 class=\"title is-size-2\">With accordion</h2>\n      <section>\n        <bal-card>\n          <bal-card-title>BaloiseCombi</bal-card-title>\n          <bal-card-subtitle>Police number 70/2.937.458</bal-card-subtitle>\n\n          <bal-accordion card>\n            <p class=\"p-5\">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>\n          </bal-accordion>\n        </bal-card>\n      </section>\n\n      <h2 class=\"title is-size-2\">With list</h2>\n      <p>The position the action buttons to the right side just add the attribute `right` to the component `bal-card-actions`.</p>\n      <section>\n        <bal-card>\n          <bal-card-title>News</bal-card-title>\n\n          <bal-card-content>\n            <bal-list border>\n              <bal-list-item>\n                <bal-list-item-content>\n                  <bal-list-item-title>News A</bal-list-item-title>\n                </bal-list-item-content>\n                <bal-list-item-icon right>\n                  <bal-icon name=\"nav-go-large\"></bal-icon>\n                </bal-list-item-icon>\n              </bal-list-item>\n              <bal-list-item>\n                <bal-list-item-content>\n                  <bal-list-item-title>News B</bal-list-item-title>\n                </bal-list-item-content>\n                <bal-list-item-icon right>\n                  <bal-icon name=\"nav-go-large\"></bal-icon>\n                </bal-list-item-icon>\n              </bal-list-item>\n            </bal-list>\n          </bal-card-content>\n\n          <bal-card-actions right>\n            <bal-button type=\"is-link\">More</bal-button>\n          </bal-card-actions>\n        </bal-card>\n      </section>\n\n      <h2 class=\"title is-size-2\">Summary card</h2>\n      <section>\n        <bal-card>\n          <bal-card-heading>Insured vehicle</bal-card-heading>\n          <bal-card-title>Cupra Ateca</bal-card-title>\n          <bal-card-subtitle>Running time: 21.07.2019 - 21.07.2021</bal-card-subtitle>\n\n          <bal-card-content>\n            <bal-data horizontal>\n              <bal-data-item>\n                <bal-data-label>Tony</bal-data-label>\n                <bal-data-value>Stark</bal-data-value>\n              </bal-data-item>\n              <bal-data-item>\n                <bal-data-label>Steve</bal-data-label>\n                <bal-data-value>Rogers</bal-data-value>\n              </bal-data-item>\n              <bal-data-item>\n                <bal-data-label>Stephen</bal-data-label>\n                <bal-data-value>Strange</bal-data-value>\n              </bal-data-item>\n            </bal-data>\n          </bal-card-content>\n\n          <bal-card-button icon=\"edit\">Edit</bal-card-button>\n        </bal-card>\n      </section>\n\n      <h2 class=\"title is-size-2\">Service card</h2>\n      <section>\n        <bal-card>\n          <bal-card-head>\n            <img src=\"https://www.baloise.ch/dam/jcr:3635255e-33e7-4adf-8b3e-99954faf6036/reiseversicherung.svg\" />\n            <div>\n              <h4 class=\"title is-size-4\">Baustein Parkschaden <small class=\"is-hidden-touch\">(+ CHF 11.30)</small></h4>\n              <h5 class=\"subtitle is-size-5 is-hidden-desktop\">+ CHF 11.30</h5>\n              <p class=\"has-text-blue-light-text is-hidden-touch\">Schäden am parkierten Fahrzeug durch unbekannte Dritte.</p>\n            </div>\n            <bal-checkbox checked interface=\"switch\"></bal-checkbox>\n          </bal-card-head>\n\n          <bal-card-content class=\"is-hidden-desktop\">\n            <p class=\"has-text-blue-light-text\">Schäden am parkierten Fahrzeug durch unbekannte Dritte.</p>\n          </bal-card-content>\n\n          <bal-accordion card open-label=\"Details einblenden\" close-label=\"Details ausblenden\">\n            <p class=\"p-4 has-text-blue-light-text\">\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Lorem ipsum dolor sit amet, consectetur\n              adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor\n              incididunt ut labore et dolore magna aliqua.\n            </p>\n          </bal-accordion>\n        </bal-card>\n      </section>\n\n      <h2 class=\"title is-size-2\">Colors</h2>\n      <section>\n        <bal-card>\n          <bal-card-content>Default</bal-card-content>\n        </bal-card>\n        <br />\n        <bal-card color=\"primary\">\n          <bal-card-content>Primary</bal-card-content>\n        </bal-card>\n        <br />\n        <bal-card inverted color=\"info\">\n          <bal-card-content>Info</bal-card-content>\n        </bal-card>\n        <br />\n        <bal-card inverted color=\"success\">\n          <bal-card-content>Success</bal-card-content>\n        </bal-card>\n        <br />\n        <bal-card inverted color=\"warning\">\n          <bal-card-content>Warning</bal-card-content>\n        </bal-card>\n        <br />\n        <bal-card inverted color=\"danger\">\n          <bal-card-content>Danger</bal-card-content>\n        </bal-card>\n      </section>\n    </div>\n  </body>\n</html>\n"
    },
    {
      "filePath": "./src/components/bal-card-actions/bal-card-actions.tsx",
      "encapsulation": "none",
      "tag": "bal-card-actions",
      "readme": "\n# Card Actions\n\n`bal-card-actions` is a child component of `bal-card` that sets the buttons to the right place.\n",
      "docs": "<!-- docs:child of bal-card -->",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "right",
          "type": "boolean",
          "mutable": false,
          "attr": "right",
          "reflectToAttr": false,
          "docs": "If `true` the buttons start form right to left.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {},
      "parent": "bal-card",
      "isChild": true,
      "childComponents": [],
      "examples": null
    },
    {
      "filePath": "./src/components/bal-card-button/bal-card-button.tsx",
      "encapsulation": "none",
      "tag": "bal-card-button",
      "readme": "\n# Card Button\n\n`bal-card-button` is a child component of `bal-card` that sets a block button at the end of the card. Good to use for edit functionality.\n",
      "docs": "<!-- docs:child of bal-card -->",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "disabled",
          "type": "boolean",
          "mutable": false,
          "attr": "disabled",
          "reflectToAttr": true,
          "docs": "If `true`, the user cannot interact with the button.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "href",
          "type": "string | undefined",
          "mutable": false,
          "attr": "href",
          "reflectToAttr": false,
          "docs": "Specifies the URL of the page the link goes to",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            },
            {
              "type": "undefined"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "icon",
          "type": "string",
          "mutable": false,
          "attr": "icon",
          "reflectToAttr": false,
          "docs": "Name of the icon like `edit`.",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "iconRight",
          "type": "string",
          "mutable": false,
          "attr": "icon-right",
          "reflectToAttr": false,
          "docs": "Name of the right button icon",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "loading",
          "type": "boolean",
          "mutable": false,
          "attr": "loading",
          "reflectToAttr": false,
          "docs": "If `true` the label is hidden and a loading spinner is shown instead.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "target",
          "type": "\" _parent\" | \"_blank\" | \"_self\" | \"_top\"",
          "mutable": false,
          "attr": "target",
          "reflectToAttr": false,
          "docs": "Specifies where to display the linked URL.\nOnly applies when an `href` is provided.",
          "docsTags": [],
          "default": "'_self'",
          "values": [
            {
              "value": " _parent",
              "type": "string"
            },
            {
              "value": "_blank",
              "type": "string"
            },
            {
              "value": "_self",
              "type": "string"
            },
            {
              "value": "_top",
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "type",
          "type": "\"button\" | \"reset\" | \"submit\"",
          "mutable": false,
          "attr": "type",
          "reflectToAttr": false,
          "docs": "The type of button.",
          "docsTags": [],
          "default": "'button'",
          "values": [
            {
              "value": "button",
              "type": "string"
            },
            {
              "value": "reset",
              "type": "string"
            },
            {
              "value": "submit",
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [
        "bal-button"
      ],
      "dependencyGraph": {
        "bal-card-button": [
          "bal-button"
        ],
        "bal-button": [
          "bal-spinner",
          "bal-icon",
          "bal-text"
        ]
      },
      "parent": "bal-card",
      "isChild": true,
      "childComponents": [],
      "examples": null
    },
    {
      "filePath": "./src/components/bal-card-content/bal-card-content.tsx",
      "encapsulation": "none",
      "tag": "bal-card-content",
      "readme": "\n# Card Content\n\n`bal-card-content` is a child component of `bal-card`. It is recommended that any text content for a card should be placed in a `bal-card-content`.\n",
      "docs": "<!-- docs:child of bal-card -->",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "inverted",
          "type": "boolean",
          "mutable": false,
          "attr": "inverted",
          "reflectToAttr": false,
          "docs": "If `true` the card text color becomes white.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {},
      "parent": "bal-card",
      "isChild": true,
      "childComponents": [],
      "examples": null
    },
    {
      "filePath": "./src/components/bal-card-head/bal-card-head.tsx",
      "encapsulation": "none",
      "tag": "bal-card-head",
      "readme": "\n# Card Head\n\n`bal-card-head` is a child component of `bal-card` that adds a head element for the service card style.\n",
      "docs": "<!-- docs:child of bal-card -->",
      "docsTags": [],
      "usage": {},
      "props": [],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {},
      "parent": "bal-card",
      "isChild": true,
      "childComponents": [],
      "examples": null
    },
    {
      "filePath": "./src/components/bal-card-heading/bal-card-heading.tsx",
      "encapsulation": "none",
      "tag": "bal-card-heading",
      "readme": "\n# Card Heading\n\n`bal-card-heading` is a child component of `bal-card` that adds a small heading to the card. It is recommended to use this before the `bal-card-title` component.\n",
      "docs": "<!-- docs:child of bal-card -->",
      "docsTags": [],
      "usage": {},
      "props": [],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {},
      "parent": "bal-card",
      "isChild": true,
      "childComponents": [],
      "examples": null
    },
    {
      "filePath": "./src/components/bal-card-steps/bal-card-steps.tsx",
      "encapsulation": "none",
      "tag": "bal-card-steps",
      "readme": "\n# Card Steps\n\n`bal-card-steps` is a child component of `bal-card` that adds a wrapper for the bal-tabs.\n",
      "docs": "<!-- docs:child of bal-card -->",
      "docsTags": [],
      "usage": {},
      "props": [],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {},
      "parent": "bal-card",
      "isChild": true,
      "childComponents": [],
      "examples": null
    },
    {
      "filePath": "./src/components/bal-card-subtitle/bal-card-subtitle.tsx",
      "encapsulation": "none",
      "tag": "bal-card-subtitle",
      "readme": "\n# Card Subtitle\n\n`bal-card-subtitle` is a child component of `bal-card` that adds a small subtile below the title. It is recommended to use this after the `bal-card-title` component.\n",
      "docs": "<!-- docs:child of bal-card -->",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "inverted",
          "type": "boolean",
          "mutable": false,
          "attr": "inverted",
          "reflectToAttr": false,
          "docs": "If `true` the card text color becomes white.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {},
      "parent": "bal-card",
      "isChild": true,
      "childComponents": [],
      "examples": null
    },
    {
      "filePath": "./src/components/bal-card-title/bal-card-title.tsx",
      "encapsulation": "none",
      "tag": "bal-card-title",
      "readme": "\n# Card Title\n\n`bal-card-title` is a child component of `bal-card` that adds a title to card.\n",
      "docs": "<!-- docs:child of bal-card -->",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "inverted",
          "type": "boolean",
          "mutable": false,
          "attr": "inverted",
          "reflectToAttr": false,
          "docs": "If `true` the card text color becomes white.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {},
      "parent": "bal-card",
      "isChild": true,
      "childComponents": [],
      "examples": null
    },
    {
      "filePath": "./src/components/bal-checkbox/bal-checkbox.tsx",
      "encapsulation": "scoped",
      "tag": "bal-checkbox",
      "readme": "# Checkbox <Badge text=\"Two-way binding\"/>\n",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "balTabindex",
          "type": "number",
          "mutable": false,
          "attr": "bal-tabindex",
          "reflectToAttr": false,
          "docs": "The tabindex of the control.",
          "docsTags": [],
          "default": "0",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "checked",
          "type": "boolean",
          "mutable": true,
          "attr": "checked",
          "reflectToAttr": true,
          "docs": "If `true`, the checkbox is selected.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "disabled",
          "type": "boolean",
          "mutable": false,
          "attr": "disabled",
          "reflectToAttr": false,
          "docs": "If `true`, the user cannot interact with the checkbox.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "interface",
          "type": "\"checkbox\" | \"switch\"",
          "mutable": false,
          "attr": "interface",
          "reflectToAttr": false,
          "docs": "Defines the layout of the checkbox button",
          "docsTags": [],
          "default": "'checkbox'",
          "values": [
            {
              "value": "checkbox",
              "type": "string"
            },
            {
              "value": "switch",
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "inverted",
          "type": "boolean",
          "mutable": false,
          "attr": "inverted",
          "reflectToAttr": false,
          "docs": "If `true`, the control works on dark background.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "name",
          "type": "string",
          "mutable": false,
          "attr": "name",
          "reflectToAttr": false,
          "docs": "The name of the control, which is submitted with the form data.",
          "docsTags": [],
          "default": "this.inputId",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "value",
          "type": "string",
          "mutable": false,
          "attr": "value",
          "reflectToAttr": false,
          "docs": "The value of the control.",
          "docsTags": [],
          "default": "'on'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [
        {
          "name": "getInputElement",
          "returns": {
            "type": "Promise<HTMLInputElement>",
            "docs": ""
          },
          "signature": "getInputElement() => Promise<HTMLInputElement>",
          "parameters": [],
          "docs": "Returns the native `<input>` element used under the hood.",
          "docsTags": []
        },
        {
          "name": "setFocus",
          "returns": {
            "type": "Promise<void>",
            "docs": ""
          },
          "signature": "setFocus() => Promise<void>",
          "parameters": [],
          "docs": "Sets the focus on the checkbox input element.",
          "docsTags": []
        }
      ],
      "events": [
        {
          "event": "balBlur",
          "detail": "FocusEvent",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Emitted when the toggle loses focus.",
          "docsTags": []
        },
        {
          "event": "balChange",
          "detail": "boolean",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Emitted when the checked property has changed.",
          "docsTags": []
        },
        {
          "event": "balFocus",
          "detail": "FocusEvent",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Emitted when the toggle has focus.",
          "docsTags": []
        }
      ],
      "listeners": [
        {
          "event": "click",
          "target": "document",
          "capture": true,
          "passive": false
        }
      ],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [
        "bal-select"
      ],
      "dependencies": [
        "bal-text"
      ],
      "dependencyGraph": {
        "bal-checkbox": [
          "bal-text"
        ],
        "bal-select": [
          "bal-checkbox"
        ]
      },
      "parent": null,
      "isChild": false,
      "childComponents": [],
      "examples": "<!DOCTYPE html>\n<html dir=\"ltr\" lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, minimum-scale=1.0, maximum-scale=5.0\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n    <link rel=\"stylesheet\" href=\"/build/design-system-components.css\" />\n    <script type=\"module\" src=\"/build/design-system-components.esm.js\"></script>\n    <script nomodule src=\"/build/design-system-components.js\"></script>\n  </head>\n  <body class=\"bal-app\">\n    <div class=\"container\">\n      <h2 class=\"title is-size-2\">Basic</h2>\n      <p>\n        Checkboxes allow the selection of multiple options from a set of options. They appear as checked (ticked) when activated, or unchecked (unticked) when deactivated.\n        Checkboxes can be selected as checked by setting the property.\n      </p>\n      <section>\n        <bal-checkbox data-test-id=\"checkbox-normal\">Label <b>Bold</b></bal-checkbox>\n        <bal-checkbox checked>Checked</bal-checkbox>\n        <bal-checkbox disabled data-test-id=\"checkbox-disabled\">Disabled</bal-checkbox>\n      </section>\n\n      <h2 class=\"title is-size-2\">Switch</h2>\n      <p>Switches are used to toggle between exactly two states (like on and off).</p>\n      <section>\n        <bal-checkbox interface=\"switch\">Label</bal-checkbox>\n        <bal-checkbox checked interface=\"switch\">Checked</bal-checkbox>\n        <bal-checkbox disabled interface=\"switch\">Disabled</bal-checkbox>\n      </section>\n\n      <h2 class=\"title is-size-2\">Inverted</h2>\n      <section>\n        <div class=\"has-background-info p-4\">\n          <bal-checkbox inverted>Label</bal-checkbox>\n          <bal-checkbox inverted checked>Checked</bal-checkbox>\n          <bal-checkbox inverted disabled>Disabled</bal-checkbox>\n        </div>\n      </section>\n\n      <h2 class=\"title is-size-2\">With Links</h2>\n      <section>\n        <bal-checkbox> Random text with a <a class=\"is-link\" target=\"_blank\" href=\"http://baloise.ch\">Link</a> in it. </bal-checkbox>\n      </section>\n\n      <h2 class=\"title is-size-2\">Events</h2>\n      <h3 class=\"title is-size-3\">Listen on Changes</h3>\n      <section>\n        <bal-checkbox id=\"cb-2\">Listen on changes</bal-checkbox>\n        <p class=\"help\" id=\"cb-2-result\">false</p>\n      </section>\n      <script>\n        var checkbox2 = document.getElementById('cb-2')\n        var checkbox2Result = document.getElementById('cb-2-result')\n        checkbox2.addEventListener('balChange', function (event) {\n          checkbox2Result.innerHTML = event.detail\n        })\n      </script>\n\n      <h3 class=\"title is-size-3\">Change value</h3>\n      <section>\n        <bal-checkbox id=\"cb-3\">Value</bal-checkbox>\n        <br />\n        <bal-button color=\"success\" id=\"cb-3-trigger-1\">Set to true</bal-button>\n        <bal-button color=\"danger\" id=\"cb-3-trigger-2\">Set to false</bal-button>\n      </section>\n      <script>\n        var checkbox3 = document.getElementById('cb-3')\n        var checkbox3Trigger1 = document.getElementById('cb-3-trigger-1')\n        var checkbox3Trigger2 = document.getElementById('cb-3-trigger-2')\n        checkbox3Trigger1.addEventListener('click', function (event) {\n          checkbox3.checked = true\n        })\n        checkbox3Trigger2.addEventListener('click', function (event) {\n          checkbox3.checked = false\n        })\n      </script>\n\n      <h2 class=\"title is-size-2\">Checkbox Boxes</h2>\n      <section>\n        <div class=\"columns\" style=\"max-width: 400px\">\n          <div class=\"column\">\n            <div class=\"is-flex px-4 py-2 is-flex-direction-column is-justify-content-center is-align-items-center has-border-blue has-border-radius\">\n              <img src=\"https://www.baloise.ch/dam/jcr:5d0376a5-53ef-40b9-a1d9-c6d7d0c56bf7/Haushalt.svg\" />\n              <p class=\"has-text-blue is-bold mb-0\">Title</p>\n              <p class=\"has-text-blue mb-3\">Subtitle</p>\n              <p class=\"has-text-blue-light-text is-size-6 mb-4\">More Description</p>\n              <bal-checkbox class=\"mb-3\">Add</bal-checkbox>\n            </div>\n          </div>\n          <div class=\"column\">\n            <div class=\"is-flex px-4 py-2 is-flex-direction-column is-justify-content-center is-align-items-center has-border-blue has-border-radius has-background-blue-light\">\n              <img src=\"https://www.baloise.ch/dam/jcr:3635255e-33e7-4adf-8b3e-99954faf6036/reiseversicherung.svg\" />\n              <p class=\"has-text-blue is-bold mb-0\">Title</p>\n              <p class=\"has-text-blue mb-3\">Subtitle</p>\n              <p class=\"has-text-blue-light-text is-size-6 mb-4\">More Description</p>\n              <bal-checkbox class=\"mb-3\" checked>Add</bal-checkbox>\n            </div>\n          </div>\n        </div>\n      </section>\n    </div>\n  </body>\n</html>\n"
    },
    {
      "filePath": "./src/components/bal-data/bal-data.tsx",
      "encapsulation": "none",
      "tag": "bal-data",
      "readme": "# Data\n",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "border",
          "type": "boolean",
          "mutable": false,
          "attr": "border",
          "reflectToAttr": false,
          "docs": "If `true` a bottom border is added to the data-item.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "horizontal",
          "type": "boolean",
          "mutable": false,
          "attr": "horizontal",
          "reflectToAttr": false,
          "docs": "If `true` the data list is horizontal instead of vertical.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {},
      "parent": null,
      "isChild": false,
      "childComponents": [
        "bal-data-item",
        "bal-data-label",
        "bal-data-value"
      ],
      "examples": "<!DOCTYPE html>\n<html dir=\"ltr\" lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, minimum-scale=1.0, maximum-scale=5.0\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n    <link rel=\"stylesheet\" href=\"/build/design-system-components.css\" />\n    <script type=\"module\" src=\"/build/design-system-components.esm.js\"></script>\n    <script nomodule src=\"/build/design-system-components.js\"></script>\n  </head>\n  <body class=\"bal-app\">\n    <div class=\"container\">\n      <h2 class=\"title is-size-2\">Basic</h2>\n      <section>\n        <bal-card>\n          <bal-card-content>\n            <bal-data border>\n              <bal-data-item>\n                <bal-data-label>Tony</bal-data-label>\n                <bal-data-value>Stark</bal-data-value>\n              </bal-data-item>\n              <bal-data-item>\n                <bal-data-label>Steve</bal-data-label>\n                <bal-data-value>Rogers</bal-data-value>\n              </bal-data-item>\n              <bal-data-item>\n                <bal-data-label>Maria</bal-data-label>\n                <bal-data-value editable>Hill</bal-data-value>\n              </bal-data-item>\n              <bal-data-item>\n                <bal-data-label>Natasha</bal-data-label>\n                <bal-data-value>\n                  <bal-input value=\"Romanoff\"></bal-input>\n                </bal-data-value>\n              </bal-data-item>\n              <bal-data-item>\n                <bal-data-label>Matt</bal-data-label>\n                <bal-data-value editable>\n                  <bal-input value=\"Murdock\"></bal-input>\n                </bal-data-value>\n              </bal-data-item>\n              <bal-data-item disabled>\n                <bal-data-label>Nick</bal-data-label>\n                <bal-data-value>Fury</bal-data-value>\n              </bal-data-item>\n              <bal-data-item>\n                <bal-data-label>\n                  Peter\n                  <bal-hint>\n                    <bal-hint-title>Spider-Man</bal-hint-title>\n                    <bal-hint-text>\n                      Spider-Man is a fictional superhero created by writer-editor Stan Lee and writer-artist Steve Ditko. He first appeared in the anthology comic book Amazing\n                      Fantasy #15 (August 1962) in the Silver Age of Comic Books. He appears in American comic books published by Marvel Comics, as well as in a number of movies,\n                      television shows, and video game adaptations set in the Marvel Universe.\n                    </bal-hint-text>\n                  </bal-hint>\n                </bal-data-label>\n                <bal-data-value>Parker</bal-data-value>\n              </bal-data-item>\n            </bal-data>\n          </bal-card-content>\n        </bal-card>\n      </section>\n\n      <h2 class=\"title is-size-2\">Horizontal</h2>\n      <section>\n        <bal-card>\n          <bal-card-content>\n            <bal-data horizontal>\n              <bal-data-item>\n                <bal-data-label>Tony</bal-data-label>\n                <bal-data-value>Stark</bal-data-value>\n              </bal-data-item>\n              <bal-data-item>\n                <bal-data-label>Steve</bal-data-label>\n                <bal-data-value>Rogers</bal-data-value>\n              </bal-data-item>\n              <bal-data-item>\n                <bal-data-label>Stephen</bal-data-label>\n                <bal-data-value>Strange</bal-data-value>\n              </bal-data-item>\n            </bal-data>\n          </bal-card-content>\n        </bal-card>\n      </section>\n    </div>\n  </body>\n</html>\n"
    },
    {
      "filePath": "./src/components/bal-data-item/bal-data-item.tsx",
      "encapsulation": "none",
      "tag": "bal-data-item",
      "readme": "\n# Data Item\n\n`bal-data-item` is a child component of `bal-data` that adds a new row item.\n",
      "docs": "<!-- docs:child of bal-data -->",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "disabled",
          "type": "boolean",
          "mutable": false,
          "attr": "disabled",
          "reflectToAttr": false,
          "docs": "If `true` the item gets a lighter font color.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {},
      "parent": "bal-data",
      "isChild": true,
      "childComponents": [],
      "examples": null
    },
    {
      "filePath": "./src/components/bal-data-label/bal-data-label.tsx",
      "encapsulation": "none",
      "tag": "bal-data-label",
      "readme": "\n# Data Item Label\n\n`bal-data-item` is a child component of `bal-data` that defines the label of the data.\n",
      "docs": "<!-- docs:child of bal-data -->",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "required",
          "type": "boolean",
          "mutable": false,
          "attr": "required",
          "reflectToAttr": false,
          "docs": "If `true` an asterix is added after the label.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {},
      "parent": "bal-data",
      "isChild": true,
      "childComponents": [],
      "examples": null
    },
    {
      "filePath": "./src/components/bal-data-value/bal-data-value.tsx",
      "encapsulation": "none",
      "tag": "bal-data-value",
      "readme": "\n# Data Item Value\n\n`bal-data-item` is a child component of `bal-data` that defines the value of the data.\n",
      "docs": "<!-- docs:child of bal-data -->",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "disabled",
          "type": "boolean",
          "mutable": false,
          "attr": "disabled",
          "reflectToAttr": false,
          "docs": "If `true` the button will get disabled.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "editable",
          "type": "boolean",
          "mutable": false,
          "attr": "editable",
          "reflectToAttr": false,
          "docs": "If `true` a small button with a edit icon will be shown on the right.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [
        {
          "event": "balBlur",
          "detail": "void",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Emitted when the edit button loses focus.",
          "docsTags": []
        },
        {
          "event": "balClick",
          "detail": "MouseEvent",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Emitted when the edit button has focus.",
          "docsTags": []
        },
        {
          "event": "balFocus",
          "detail": "void",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Emitted when the edit button has focus.",
          "docsTags": []
        }
      ],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [
        "bal-button",
        "bal-icon"
      ],
      "dependencyGraph": {
        "bal-data-value": [
          "bal-button",
          "bal-icon"
        ],
        "bal-button": [
          "bal-spinner",
          "bal-icon",
          "bal-text"
        ]
      },
      "parent": "bal-data",
      "isChild": true,
      "childComponents": [],
      "examples": null
    },
    {
      "filePath": "./src/components/bal-datepicker/bal-datepicker.tsx",
      "encapsulation": "scoped",
      "tag": "bal-datepicker",
      "readme": "# Datepicker <Badge text=\"Two-way binding\"/>\n\nTo set the date use the [date utils](/components/tooling/utils.html#dateutil).\n\n```javascript\nimport { newDateString, now } from '@baloise/design-system-components'\n\nconst datepickerDisabled = document.getElementById('datepicker-disabled')\ndatepickerDisabled.value = newDateString(now())\n// or\ndatepickerDisabled.value = newDateString(2020, 0, 13)\n// or\ndatepickerDisabled.value = newDateString(new Date(2020, 0, 13))\n```\n",
      "docs": "To set the date use the [date utils](/components/tooling/utils.html#dateutil).\n\n```javascript\nimport { newDateString, now } from '@baloise/design-system-components'\n\nconst datepickerDisabled = document.getElementById('datepicker-disabled')\ndatepickerDisabled.value = newDateString(now())\n// or\ndatepickerDisabled.value = newDateString(2020, 0, 13)\n// or\ndatepickerDisabled.value = newDateString(new Date(2020, 0, 13))\n```",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "allowedDates",
          "type": "((datestring: string) => boolean) | undefined",
          "mutable": false,
          "reflectToAttr": false,
          "docs": "Callback to determine which date in the datepicker should be selectable.",
          "docsTags": [],
          "default": "undefined",
          "values": [
            {
              "type": "((datestring: string) => boolean)"
            },
            {
              "type": "undefined"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "balTabindex",
          "type": "number",
          "mutable": false,
          "attr": "bal-tabindex",
          "reflectToAttr": false,
          "docs": "The tabindex of the control.",
          "docsTags": [],
          "default": "0",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "closeOnSelect",
          "type": "boolean",
          "mutable": false,
          "attr": "close-on-select",
          "reflectToAttr": false,
          "docs": "Closes the datepicker dropdown after selection",
          "docsTags": [],
          "default": "true",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "debounce",
          "type": "number",
          "mutable": false,
          "attr": "debounce",
          "reflectToAttr": false,
          "docs": "Set the amount of time, in milliseconds, to wait to trigger the `ionChange` event after each keystroke. This also impacts form bindings such as `ngModel` or `v-model`.",
          "docsTags": [],
          "default": "0",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "defaultDate",
          "type": "null | string | undefined",
          "mutable": false,
          "attr": "default-date",
          "reflectToAttr": false,
          "docs": "The date to defines where the datepicker popup starts. The prop accepts ISO 8601 date strings (YYYY-MM-DD).",
          "docsTags": [],
          "values": [
            {
              "type": "null"
            },
            {
              "type": "string"
            },
            {
              "type": "undefined"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "disabled",
          "type": "boolean",
          "mutable": false,
          "attr": "disabled",
          "reflectToAttr": false,
          "docs": "If `true` the component is diabled.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "expanded",
          "type": "boolean",
          "mutable": false,
          "attr": "expanded",
          "reflectToAttr": false,
          "docs": "If `true` the component uses the whole width.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "inverted",
          "type": "boolean",
          "mutable": false,
          "attr": "inverted",
          "reflectToAttr": false,
          "docs": "Set this to `true` when the component is placed on a dark background.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "locale",
          "type": "\"de\" | \"en\" | \"fr\" | \"it\"",
          "mutable": false,
          "attr": "locale",
          "reflectToAttr": false,
          "docs": "Define the locale of month and day names.",
          "docsTags": [],
          "default": "'en'",
          "values": [
            {
              "value": "de",
              "type": "string"
            },
            {
              "value": "en",
              "type": "string"
            },
            {
              "value": "fr",
              "type": "string"
            },
            {
              "value": "it",
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "max",
          "type": "string | undefined",
          "mutable": true,
          "attr": "max",
          "reflectToAttr": false,
          "docs": "The maximum datetime allowed. Value must be a date string\nfollowing the\n[ISO 8601 datetime format standard](https://www.w3.org/TR/NOTE-datetime),\n`1996-12-19`. The format does not have to be specific to an exact\ndatetime. For example, the maximum could just be the year, such as `1994`.\nDefaults to the end of this year.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            },
            {
              "type": "undefined"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "maxYearProp",
          "type": "number | undefined",
          "mutable": false,
          "attr": "max-year",
          "reflectToAttr": false,
          "docs": "Latest year available for selection",
          "docsTags": [],
          "default": "undefined",
          "values": [
            {
              "type": "number"
            },
            {
              "type": "undefined"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "min",
          "type": "string | undefined",
          "mutable": true,
          "attr": "min",
          "reflectToAttr": false,
          "docs": "The minimum datetime allowed. Value must be a date string\nfollowing the\n[ISO 8601 datetime format standard](https://www.w3.org/TR/NOTE-datetime),\nsuch as `1996-12-19`. The format does not have to be specific to an exact\ndatetime. For example, the minimum could just be the year, such as `1994`.\nDefaults to the beginning of the year, 100 years ago from today.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            },
            {
              "type": "undefined"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "minYearProp",
          "type": "number | undefined",
          "mutable": false,
          "attr": "min-year",
          "reflectToAttr": false,
          "docs": "Earliest year available for selection",
          "docsTags": [],
          "default": "undefined",
          "values": [
            {
              "type": "number"
            },
            {
              "type": "undefined"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "name",
          "type": "string",
          "mutable": false,
          "attr": "name",
          "reflectToAttr": false,
          "docs": "The name of the control, which is submitted with the form data.",
          "docsTags": [],
          "default": "this.inputId",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "placeholder",
          "type": "string | undefined",
          "mutable": false,
          "attr": "placeholder",
          "reflectToAttr": false,
          "docs": "The text to display when the select is empty.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            },
            {
              "type": "undefined"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "readonly",
          "type": "boolean",
          "mutable": false,
          "attr": "readonly",
          "reflectToAttr": false,
          "docs": "If `true` the use can only select a date.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "required",
          "type": "boolean",
          "mutable": false,
          "attr": "required",
          "reflectToAttr": false,
          "docs": "If `true` the attribute required is added to the native input.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "triggerIcon",
          "type": "boolean",
          "mutable": false,
          "attr": "trigger-icon",
          "reflectToAttr": false,
          "docs": "If `true` the datepicker only open on click of the icon",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "value",
          "type": "null | string | undefined",
          "mutable": true,
          "attr": "value",
          "reflectToAttr": false,
          "docs": "The value of the form field, which accepts ISO 8601 date strings (YYYY-MM-DD).",
          "docsTags": [],
          "values": [
            {
              "type": "null"
            },
            {
              "type": "string"
            },
            {
              "type": "undefined"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [
        {
          "name": "close",
          "returns": {
            "type": "Promise<void>",
            "docs": ""
          },
          "signature": "close() => Promise<void>",
          "parameters": [],
          "docs": "Closes the dropdown",
          "docsTags": []
        },
        {
          "name": "getInputElement",
          "returns": {
            "type": "Promise<HTMLInputElement>",
            "docs": ""
          },
          "signature": "getInputElement() => Promise<HTMLInputElement>",
          "parameters": [],
          "docs": "Returns the native `<input>` element used under the hood.",
          "docsTags": []
        },
        {
          "name": "open",
          "returns": {
            "type": "Promise<void>",
            "docs": ""
          },
          "signature": "open() => Promise<void>",
          "parameters": [],
          "docs": "Opens the dropdown",
          "docsTags": []
        },
        {
          "name": "select",
          "returns": {
            "type": "Promise<void>",
            "docs": ""
          },
          "signature": "select(datestring: string) => Promise<void>",
          "parameters": [],
          "docs": "Selects an option",
          "docsTags": []
        },
        {
          "name": "setFocus",
          "returns": {
            "type": "Promise<void>",
            "docs": ""
          },
          "signature": "setFocus() => Promise<void>",
          "parameters": [],
          "docs": "Sets the focus on the input element",
          "docsTags": []
        }
      ],
      "events": [
        {
          "event": "balBlur",
          "detail": "FocusEvent",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Emitted when the input loses focus.",
          "docsTags": []
        },
        {
          "event": "balChange",
          "detail": "null | string | undefined",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Emitted when a option got selected.",
          "docsTags": []
        },
        {
          "event": "balFocus",
          "detail": "FocusEvent",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Emitted when the input has focus.",
          "docsTags": []
        },
        {
          "event": "balInput",
          "detail": "string",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Emitted when a keyboard input occurred.",
          "docsTags": []
        }
      ],
      "listeners": [
        {
          "event": "click",
          "target": "document",
          "capture": true,
          "passive": false
        }
      ],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [
        "bal-dropdown",
        "bal-dropdown-trigger",
        "bal-dropdown-menu",
        "bal-icon"
      ],
      "dependencyGraph": {
        "bal-datepicker": [
          "bal-dropdown",
          "bal-dropdown-trigger",
          "bal-dropdown-menu",
          "bal-icon"
        ]
      },
      "parent": null,
      "isChild": false,
      "childComponents": [],
      "examples": "<!DOCTYPE html>\n<html dir=\"ltr\" lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, minimum-scale=1.0, maximum-scale=5.0\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n    <link rel=\"stylesheet\" href=\"/build/design-system-components.css\" />\n    <script type=\"module\" src=\"/build/design-system-components.esm.js\"></script>\n    <script nomodule src=\"/build/design-system-components.js\"></script>\n  </head>\n  <body class=\"bal-app\">\n    <div class=\"container\">\n      <h2 class=\"title is-size-2\">Basic</h2>\n      <p>In this example the user can only select a date. For that use the property `readonly`.</p>\n      <section>\n        <bal-datepicker id=\"datepicker\" data-test-id=\"datepicker\"></bal-datepicker>\n        <p id=\"datepicker-preview\"></p>\n      </section>\n      <script>\n        var datepicker = document.getElementById('datepicker')\n        var datepickerPreview = document.getElementById('datepicker-preview')\n        datepicker.addEventListener('balChange', event => {\n          datepickerPreview.innerHTML = event.detail\n        })\n      </script>\n\n      <h2 class=\"title is-size-2\">Disabled</h2>\n      <section>\n        <bal-datepicker readonly disabled id=\"datepicker-disabled\" data-test-id=\"datepicker-disabled\"></bal-datepicker>\n      </section>\n      <script>\n        var datepickerDisabled = document.getElementById('datepicker-disabled')\n        datepickerDisabled.value = '2021-01-01'\n      </script>\n\n      <h2 class=\"title is-size-2\">Manual Input</h2>\n      <p>\n        To enable manual input remove the property `readonly` and add the property `trigger-ico`. The `trigger-ico` property only opens the dropdown when the icon gets clicked.\n      </p>\n      <section>\n        <bal-datepicker placeholder=\"DD.MM.YYYY\" trigger-icon></bal-datepicker>\n      </section>\n\n      <h2 class=\"title is-size-2\">Inverted & Expanded</h2>\n      <section>\n        <div class=\"has-background-info p-4\">\n          <bal-datepicker inverted expanded placeholder=\"DD.MM.YYYY\"></bal-datepicker>\n        </div>\n      </section>\n\n      <h2 class=\"title is-size-2\">i18n</h2>\n      <section>\n        <bal-datepicker id=\"datepicker-i18n\" placeholder=\"TT.MM.YYYY\" locale=\"de\">\n          <bal-button expanded outlined color=\"info\" id=\"datepicker-i18n-toggle\">Toggle Locale</bal-button>\n        </bal-datepicker>\n      </section>\n      <script>\n        var datepickerI18n = document.getElementById('datepicker-i18n')\n        var datepickerI18nToggle = document.getElementById('datepicker-i18n-toggle')\n        var locale = 'de'\n        datepickerI18nToggle.addEventListener('click', () => {\n          locale = locale === 'de' ? 'fr' : 'de'\n          datepickerI18n.locale = locale\n        })\n      </script>\n\n      <h2 class=\"title is-size-2\">Footer</h2>\n      <section>\n        <bal-datepicker placeholder=\"DD.MM.YYYY\" readonly>\n          <p style=\"text-align: center\">Choose your arival date!</p>\n        </bal-datepicker>\n      </section>\n\n      <h2 class=\"title is-size-2\">Range Min & Max</h2>\n      <section>\n        <bal-datepicker id=\"datepicker-range\" placeholder=\"DD.MM.YYYY\" data-test-id=\"datepicker-range\"></bal-datepicker>\n      </section>\n      <script>\n        var datepickerRange = document.getElementById('datepicker-range')\n        var today = new Date()\n        datepickerRange.value = `${today.getFullYear()}-01-13`\n        datepickerRange.min = `${today.getFullYear()}-01-05`\n        datepickerRange.max = `${today.getFullYear()}-01-20`\n      </script>\n\n      <h2 class=\"title is-size-2\">Allow Dates</h2>\n      <p>You can specify allowed dates using a function.</p>\n      <section>\n        <bal-datepicker id=\"datepicker-allowed-dates\" placeholder=\"DD.MM.YYYY\"></bal-datepicker>\n      </section>\n      <script>\n        var datepickerAllowedDates = document.getElementById('datepicker-allowed-dates')\n        datepickerAllowedDates.allowedDates = function (datestring) {\n          return parseInt(datestring.split('-')[2], 10) % 2 === 0\n        }\n      </script>\n\n      <h2 class=\"title is-size-2\">Custom Start Date</h2>\n      <section>\n        <bal-datepicker default-date=\"2021-02-20\" placeholder=\"DD.MM.YYYY\"></bal-datepicker>\n      </section>\n    </div>\n  </body>\n</html>\n"
    },
    {
      "filePath": "./src/components/bal-dropdown/bal-dropdown.tsx",
      "encapsulation": "none",
      "tag": "bal-dropdown",
      "readme": "# Dropdown\n",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "expanded",
          "type": "boolean",
          "mutable": false,
          "attr": "expanded",
          "reflectToAttr": false,
          "docs": "If `true` the field spans over the whole width.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "fixedContentWidth",
          "type": "boolean",
          "mutable": false,
          "attr": "fixed-content-width",
          "reflectToAttr": false,
          "docs": "If `true` the dropdown content has a fixed width",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "isActive",
          "type": "boolean",
          "mutable": true,
          "attr": "is-active",
          "reflectToAttr": true,
          "docs": "If `true` the dropdown content is open.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [
        {
          "name": "close",
          "returns": {
            "type": "Promise<void>",
            "docs": ""
          },
          "signature": "close() => Promise<void>",
          "parameters": [],
          "docs": "Closes the dropdown menu.",
          "docsTags": []
        },
        {
          "name": "getContentElement",
          "returns": {
            "type": "Promise<HTMLElement | null>",
            "docs": ""
          },
          "signature": "getContentElement() => Promise<HTMLElement | null>",
          "parameters": [],
          "docs": "Returns the `HTMLDivElement` of the content element",
          "docsTags": []
        },
        {
          "name": "open",
          "returns": {
            "type": "Promise<void>",
            "docs": ""
          },
          "signature": "open() => Promise<void>",
          "parameters": [],
          "docs": "Open the dropdown menu.",
          "docsTags": []
        },
        {
          "name": "toggle",
          "returns": {
            "type": "Promise<void>",
            "docs": ""
          },
          "signature": "toggle() => Promise<void>",
          "parameters": [],
          "docs": "Open or closes the dropdown.",
          "docsTags": []
        }
      ],
      "events": [
        {
          "event": "balCollapse",
          "detail": "boolean",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Listen when the dropdown opens or closes. Returns the current `isActive` value.",
          "docsTags": []
        }
      ],
      "listeners": [
        {
          "event": "balDropdownPrepare",
          "target": "body",
          "capture": false,
          "passive": false
        },
        {
          "event": "keydown",
          "target": "window",
          "capture": false,
          "passive": false
        },
        {
          "event": "keyup",
          "target": "document",
          "capture": false,
          "passive": false
        },
        {
          "event": "click",
          "target": "document",
          "capture": false,
          "passive": false
        },
        {
          "event": "resize",
          "target": "window",
          "capture": false,
          "passive": true
        },
        {
          "event": "scroll",
          "target": "window",
          "capture": false,
          "passive": true
        }
      ],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [
        "bal-datepicker",
        "bal-select"
      ],
      "dependencies": [],
      "dependencyGraph": {
        "bal-datepicker": [
          "bal-dropdown"
        ],
        "bal-select": [
          "bal-dropdown"
        ]
      },
      "parent": null,
      "isChild": false,
      "childComponents": [
        "bal-dropdown-menu",
        "bal-dropdown-trigger"
      ],
      "examples": "<!DOCTYPE html>\n<html dir=\"ltr\" lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, minimum-scale=1.0, maximum-scale=5.0\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n    <link rel=\"stylesheet\" href=\"/build/design-system-components.css\" />\n    <script type=\"module\" src=\"/build/design-system-components.esm.js\"></script>\n    <script nomodule src=\"/build/design-system-components.js\"></script>\n  </head>\n  <body class=\"bal-app\">\n    <div class=\"container\">\n      <h2 class=\"title is-size-2\">Basic</h2>\n      <section>\n        <bal-dropdown id=\"bal-dropdown-1\" is-active=\"false\" data-test-id=\"dropdown\">\n          <bal-dropdown-trigger>\n            <bal-button id=\"bal-dropdown-1-trigger\" aria-haspopup=\"true\" aria-controls=\"dropdown-menu\" color=\"is-info\" outlined>\n              <span id=\"bal-dropdown-1-trigger-label\">Trigger</span>\n            </bal-button>\n          </bal-dropdown-trigger>\n          <bal-dropdown-menu scrollable=\"100\">\n            <div style=\"padding: 0 15px 15px\">\n              <h5 class=\"title is-size-3\" style=\"margin-top: 0px\">Title</h5>\n              <p>\n                Lorem ipsum dolor sit amet consectetur adipisicing elit. Quia nihil dolore nesciunt sed minus doloremque error quae excepturi molestiae molestias amet ab, explicabo\n                dolor aperiam perferendis mollitia facilis harum vero. Lorem ipsum dolor sit amet consectetur adipisicing elit. Quia nihil dolore nesciunt sed minus doloremque\n                error quae excepturi molestiae molestias amet ab, explicabo dolor aperiam perferendis mollitia facilis harum vero.\n              </p>\n            </div>\n          </bal-dropdown-menu>\n        </bal-dropdown>\n      </section>\n      <script>\n        var dropdown = document.getElementById('bal-dropdown-1')\n        var trigger = document.getElementById('bal-dropdown-1-trigger')\n\n        trigger.addEventListener('click', function (event) {\n          dropdown.toggle()\n        })\n      </script>\n\n      <h2 class=\"title is-size-2\">Input</h2>\n      <section>\n        <bal-dropdown id=\"bal-dropdown-2\" scrollable=\"200\" expanded>\n          <bal-dropdown-trigger>\n            <div class=\"control has-icons-right\">\n              <input type=\"text\" class=\"input clickable\" placeholder=\"Click me\" readonly id=\"bal-dropdown-2-trigger\" />\n              <bal-icon name=\"caret-down\" color=\"info\" size=\"xsmall\" />\n            </div>\n          </bal-dropdown-trigger>\n          <bal-dropdown-menu>\n            <div style=\"padding: 0 15px 15px\">\n              <h5 class=\"title is-size-3\" style=\"margin-top: 0px\">Some Content</h5>\n              <p>Some text</p>\n            </div>\n          </bal-dropdown-menu>\n        </bal-dropdown>\n      </section>\n      <script>\n        var dropdown2 = document.getElementById('bal-dropdown-2')\n        var trigger2 = document.getElementById('bal-dropdown-2-trigger')\n\n        trigger2.addEventListener('click', function (event) {\n          dropdown2.toggle()\n        })\n      </script>\n    </div>\n  </body>\n</html>\n"
    },
    {
      "filePath": "./src/components/bal-dropdown-menu/bal-dropdown-menu.tsx",
      "encapsulation": "none",
      "tag": "bal-dropdown-menu",
      "readme": "\n# Dropdown Menu\n\n`bal-dropdown-menu` is a child component of `bal-dropdown` that defines the value of the data.\n",
      "docs": "<!-- docs:child of bal-dropdown -->",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "scrollable",
          "type": "number",
          "mutable": false,
          "attr": "scrollable",
          "reflectToAttr": false,
          "docs": "Limit the height of the dropdown content. Pass the amount of pixel.",
          "docsTags": [],
          "default": "0",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [
        "bal-datepicker",
        "bal-select"
      ],
      "dependencies": [],
      "dependencyGraph": {
        "bal-datepicker": [
          "bal-dropdown-menu"
        ],
        "bal-select": [
          "bal-dropdown-menu"
        ]
      },
      "parent": "bal-dropdown",
      "isChild": true,
      "childComponents": [],
      "examples": null
    },
    {
      "filePath": "./src/components/bal-dropdown-trigger/bal-dropdown-trigger.tsx",
      "encapsulation": "none",
      "tag": "bal-dropdown-trigger",
      "readme": "\n# Dropdown Trigger\n\n`bal-dropdown-trigger` is a child component of `bal-dropdown` that defines the value of the data.\n",
      "docs": "<!-- docs:child of bal-dropdown -->",
      "docsTags": [],
      "usage": {},
      "props": [],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [
        "bal-datepicker",
        "bal-select"
      ],
      "dependencies": [],
      "dependencyGraph": {
        "bal-datepicker": [
          "bal-dropdown-trigger"
        ],
        "bal-select": [
          "bal-dropdown-trigger"
        ]
      },
      "parent": "bal-dropdown",
      "isChild": true,
      "childComponents": [],
      "examples": null
    },
    {
      "filePath": "./src/components/bal-field/bal-field.tsx",
      "encapsulation": "none",
      "tag": "bal-field",
      "readme": "# Field\n",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "disabled",
          "type": "boolean",
          "mutable": false,
          "attr": "disabled",
          "reflectToAttr": false,
          "docs": "If `true` the field loses opacity",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "expanded",
          "type": "boolean",
          "mutable": false,
          "attr": "expanded",
          "reflectToAttr": false,
          "docs": "If `true` the component takes the whole width",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "invalid",
          "type": "boolean",
          "mutable": false,
          "attr": "invalid",
          "reflectToAttr": false,
          "docs": "If `true` the component gets a invalid style. Only use this if there is no live validation.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "inverted",
          "type": "boolean",
          "mutable": false,
          "attr": "inverted",
          "reflectToAttr": false,
          "docs": "If `true` the field can be used on blue background.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "loading",
          "type": "boolean",
          "mutable": false,
          "attr": "loading",
          "reflectToAttr": false,
          "docs": "If `true` a loading spinner is visible at the end of the input",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {},
      "parent": null,
      "isChild": false,
      "childComponents": [
        "bal-field-control",
        "bal-field-hint",
        "bal-field-label",
        "bal-field-message"
      ],
      "examples": "<!DOCTYPE html>\n<html dir=\"ltr\" lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, minimum-scale=1.0, maximum-scale=5.0\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n    <link rel=\"stylesheet\" href=\"/build/design-system-components.css\" />\n    <script type=\"module\" src=\"/build/design-system-components.esm.js\"></script>\n    <script nomodule src=\"/build/design-system-components.js\"></script>\n  </head>\n  <body class=\"bal-app\">\n    <div class=\"container\">\n      <h2 class=\"title is-size-2\">Basic</h2>\n      <section>\n        <bal-card padding=\"form\">\n          <bal-card-content>\n            <div class=\"columns is-multiline\">\n              <bal-field class=\"column is-full py-0\" expanded>\n                <bal-field-label required>Firstname</bal-field-label>\n                <bal-field-hint subject=\"Spider-Man\"> Spider-Man is a fictional superhero created by writer-editor Stan Lee and writer-artist Steve Ditko. </bal-field-hint>\n                <bal-field-control>\n                  <bal-input id=\"bal-input-1\" name=\"firstName\" placeholder=\"Enter your firstname\"></bal-input>\n                </bal-field-control>\n                <bal-field-message color=\"danger\">Required Field</bal-field-message>\n              </bal-field>\n              <bal-field class=\"column is-full py-0\" expanded disabled loading>\n                <bal-field-label>Lastname</bal-field-label>\n                <bal-field-control>\n                  <bal-input name=\"lastname\" placeholder=\"Enter your lastname\" value=\"Parker\"></bal-input>\n                </bal-field-control>\n                <bal-field-message></bal-field-message>\n              </bal-field>\n              <bal-field class=\"column is-full py-0\" expanded>\n                <bal-field-label>Alias</bal-field-label>\n                <bal-field-control icon-left=\"account\" icon-right=\"check\">\n                  <bal-input name=\"alias\" placeholder=\"Enter your alias\" value=\"Spider-Man\"></bal-input>\n                </bal-field-control>\n                <bal-field-message color=\"success\">Correct</bal-field-message>\n              </bal-field>\n              <bal-field class=\"column is-full py-0\" expanded>\n                <bal-field-label>Comment</bal-field-label>\n                <bal-field-control>\n                  <bal-textarea name=\"comment\" placeholder=\"Enter your comment\"></bal-textarea>\n                </bal-field-control>\n                <bal-field-message>Some Message</bal-field-message>\n              </bal-field>\n            </div>\n          </bal-card-content>\n        </bal-card>\n      </section>\n\n      <h2 class=\"title is-size-2\">Inverted</h2>\n      <section>\n        <bal-card padding=\"form\" color=\"info\" inverted>\n          <bal-card-content>\n            <bal-field expanded inverted loading>\n              <bal-field-label required>Firstname</bal-field-label>\n              <bal-field-control>\n                <bal-input id=\"bal-input-1\" name=\"firstName\" placeholder=\"Enter your firstname\"></bal-input>\n              </bal-field-control>\n              <bal-field-message color=\"danger\">Required Field</bal-field-message>\n            </bal-field>\n\n            <bal-field expanded inverted disabled>\n              <bal-field-label>Alias</bal-field-label>\n              <bal-field-control icon-left=\"account\" icon-right=\"check\">\n                <bal-input name=\"alias\" placeholder=\"Enter your alias\" value=\"Spider-Man\"></bal-input>\n              </bal-field-control>\n              <bal-field-message>Some Message</bal-field-message>\n            </bal-field>\n          </bal-card-content>\n        </bal-card>\n      </section>\n\n      <h2 class=\"title is-size-2\">Addons</h2>\n      <section>\n        <bal-card padding=\"form\">\n          <bal-card-content>\n            <div class=\"columns is-multiline\">\n              <bal-field class=\"column is-half py-0\" expanded>\n                <bal-field-label required>Search</bal-field-label>\n                <bal-field-control>\n                  <bal-input name=\"search\" placeholder=\"Search...\"></bal-input>\n                  <bal-button size=\"small\" outlined color=\"info\">Search</bal-button>\n                </bal-field-control>\n              </bal-field>\n            </div>\n          </bal-card-content>\n        </bal-card>\n      </section>\n\n      <h2 class=\"title is-size-2\">Form</h2>\n      <section>\n        <bal-card padding=\"form\">\n          <bal-card-content>\n            <bal-field expanded>\n              <bal-field-label required>Firstname</bal-field-label>\n              <bal-field-control>\n                <bal-input name=\"firstName\" placeholder=\"Enter your firstname\"></bal-input>\n              </bal-field-control>\n              <bal-field-message></bal-field-message>\n            </bal-field>\n            <bal-field expanded>\n              <bal-field-label required>Year</bal-field-label>\n              <bal-field-control>\n                <bal-select id=\"bal-select-year\" placeholder=\"select a year\">\n                  <bal-select-option value=\"1995\" label=\"1995\">1995</bal-select-option>\n                  <bal-select-option value=\"1996\" label=\"1996\">1996</bal-select-option>\n                  <bal-select-option value=\"1997\" label=\"1997\">1997</bal-select-option>\n                  <bal-select-option value=\"1998\" label=\"1998\">1998</bal-select-option>\n                  <bal-select-option value=\"1999\" label=\"1999\">1999</bal-select-option>\n                  <bal-select-option value=\"2000\" label=\"2000\">2000</bal-select-option>\n                </bal-select>\n              </bal-field-control>\n              <bal-field-message></bal-field-message>\n            </bal-field>\n            <bal-field expanded>\n              <bal-field-label required>Birthdate</bal-field-label>\n              <bal-field-control>\n                <bal-datepicker placeholder=\"pick a date\"></bal-datepicker>\n              </bal-field-control>\n              <bal-field-message></bal-field-message>\n            </bal-field>\n            <bal-field expanded>\n              <bal-field-label required>Remember me?</bal-field-label>\n              <bal-field-control>\n                <bal-checkbox>Yes</bal-checkbox>\n              </bal-field-control>\n              <bal-field-message></bal-field-message>\n            </bal-field>\n            <bal-field expanded>\n              <bal-field-label required>How many cars do you have?</bal-field-label>\n              <bal-field-control>\n                <bal-radio-group value=\"2\" id=\"radio-example\">\n                  <bal-radio name=\"radio-example\" value=\"1\">Label 1</bal-radio>\n                  <bal-radio name=\"radio-example\" value=\"2\">Label 2</bal-radio>\n                  <bal-radio name=\"radio-example\" value=\"3\">Label 3</bal-radio>\n                  <bal-radio name=\"radio-example\" value=\"4\" disabled>Label Disabled</bal-radio>\n                </bal-radio-group>\n              </bal-field-control>\n              <bal-field-message></bal-field-message>\n            </bal-field>\n            <bal-field expanded>\n              <bal-field-label required>Are you sure?</bal-field-label>\n              <bal-field-control>\n                <bal-radio-group value=\"yes\" interface=\"select-button\">\n                  <bal-radio name=\"select-button-example-2\" value=\"yes\">Yes</bal-radio>\n                  <bal-radio name=\"select-button-example-2\" value=\"no\">No</bal-radio>\n                </bal-radio-group>\n              </bal-field-control>\n              <bal-field-message></bal-field-message>\n            </bal-field>\n          </bal-card-content>\n        </bal-card>\n      </section>\n\n      <h2 class=\"title is-size-2\">Validation for all fields</h2>\n      <p>This is not a recommanded validation style. Only use this style if you do not have the possibility to use live validation.</p>\n      <section>\n        <bal-card padding=\"form\">\n          <bal-card-content>\n            <bal-field expanded invalid>\n              <bal-field-label required>Firstname</bal-field-label>\n              <bal-field-control>\n                <bal-input name=\"firstName\" placeholder=\"Enter your firstname\"></bal-input>\n              </bal-field-control>\n              <bal-field-message></bal-field-message>\n            </bal-field>\n            <bal-field expanded invalid>\n              <bal-field-label required>Year</bal-field-label>\n              <bal-field-control>\n                <bal-select id=\"bal-select-year\" placeholder=\"select a year\">\n                  <bal-select-option value=\"1995\" label=\"1995\">1995</bal-select-option>\n                  <bal-select-option value=\"1996\" label=\"1996\">1996</bal-select-option>\n                  <bal-select-option value=\"1997\" label=\"1997\">1997</bal-select-option>\n                  <bal-select-option value=\"1998\" label=\"1998\">1998</bal-select-option>\n                  <bal-select-option value=\"1999\" label=\"1999\">1999</bal-select-option>\n                  <bal-select-option value=\"2000\" label=\"2000\">2000</bal-select-option>\n                </bal-select>\n              </bal-field-control>\n              <bal-field-message></bal-field-message>\n            </bal-field>\n            <bal-field expanded invalid>\n              <bal-field-label required>Birthdate</bal-field-label>\n              <bal-field-control>\n                <bal-datepicker placeholder=\"pick a date\"></bal-datepicker>\n              </bal-field-control>\n              <bal-field-message></bal-field-message>\n            </bal-field>\n            <bal-field expanded invalid>\n              <bal-field-label required>Remember me?</bal-field-label>\n              <bal-field-control>\n                <bal-checkbox>Yes</bal-checkbox>\n              </bal-field-control>\n              <bal-field-message></bal-field-message>\n            </bal-field>\n            <bal-field expanded invalid>\n              <bal-field-label required>How many cars do you have?</bal-field-label>\n              <bal-field-control>\n                <bal-radio-group value=\"2\" id=\"radio-example\">\n                  <bal-radio name=\"radio-example\" value=\"1\">Label 1</bal-radio>\n                  <bal-radio name=\"radio-example\" value=\"2\">Label 2</bal-radio>\n                  <bal-radio name=\"radio-example\" value=\"3\">Label 3</bal-radio>\n                  <bal-radio name=\"radio-example\" value=\"4\" disabled>Label Disabled</bal-radio>\n                </bal-radio-group>\n              </bal-field-control>\n              <bal-field-message></bal-field-message>\n            </bal-field>\n            <bal-field expanded invalid>\n              <bal-field-label required>Are you sure?</bal-field-label>\n              <bal-field-control>\n                <bal-radio-group value=\"yes\" interface=\"select-button\">\n                  <bal-radio name=\"select-button-example-2\" value=\"yes\">Yes</bal-radio>\n                  <bal-radio name=\"select-button-example-2\" value=\"no\">No</bal-radio>\n                </bal-radio-group>\n              </bal-field-control>\n              <bal-field-message></bal-field-message>\n            </bal-field>\n            <bal-notification color=\"danger\">\n              <span class=\"icon-text\">\n                <span class=\"icon\">\n                  <bal-icon inverted name=\"alert-circle\"></bal-icon>\n                </span>\n                <span style=\"margin-left: 10px\">\n                  <strong style=\"margin-right: 10px\"> Your Form is invalid. Please check your input and try it again. !</strong>\n                  <ul>\n                    <li>Your Name is required</li>\n                    <li>...</li>\n                  </ul>\n                </span>\n              </span>\n            </bal-notification>\n          </bal-card-content>\n        </bal-card>\n      </section>\n    </div>\n  </body>\n</html>\n"
    },
    {
      "filePath": "./src/components/bal-field-control/bal-field-control.tsx",
      "encapsulation": "scoped",
      "tag": "bal-field-control",
      "readme": "\n# Field Control\n\n`bal-field-control` is a child component of `bal-field`.\n",
      "docs": "<!-- docs:child of bal-field -->",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "iconLeft",
          "type": "string",
          "mutable": false,
          "attr": "icon-left",
          "reflectToAttr": false,
          "docs": "Baloise icon for the left side of the input",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "iconRight",
          "type": "string",
          "mutable": false,
          "attr": "icon-right",
          "reflectToAttr": false,
          "docs": "Baloise icon for the right side of the input",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "inverted",
          "type": "boolean",
          "mutable": false,
          "attr": "inverted",
          "reflectToAttr": false,
          "docs": "If `true` the field can be used on blue background.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "loading",
          "type": "boolean",
          "mutable": false,
          "attr": "loading",
          "reflectToAttr": false,
          "docs": "If `true` a loading spinner is visible at the end of the input",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [
        "bal-icon"
      ],
      "dependencyGraph": {
        "bal-field-control": [
          "bal-icon"
        ]
      },
      "parent": "bal-field",
      "isChild": true,
      "childComponents": [],
      "examples": null
    },
    {
      "filePath": "./src/components/bal-field-hint/bal-field-hint.tsx",
      "encapsulation": "scoped",
      "tag": "bal-field-hint",
      "readme": "\n# Field Hint\n\n`bal-field-hint` is a child component of `bal-field`.\n",
      "docs": "<!-- docs:child of bal-field -->",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "subject",
          "type": "string",
          "mutable": false,
          "attr": "subject",
          "reflectToAttr": false,
          "docs": "Text of the inputs label",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [
        "bal-hint",
        "bal-hint-title",
        "bal-hint-text"
      ],
      "dependencyGraph": {
        "bal-field-hint": [
          "bal-hint",
          "bal-hint-title",
          "bal-hint-text"
        ],
        "bal-hint": [
          "bal-icon",
          "bal-button"
        ],
        "bal-button": [
          "bal-spinner",
          "bal-icon",
          "bal-text"
        ]
      },
      "parent": "bal-field",
      "isChild": true,
      "childComponents": [],
      "examples": null
    },
    {
      "filePath": "./src/components/bal-field-label/bal-field-label.tsx",
      "encapsulation": "scoped",
      "tag": "bal-field-label",
      "readme": "\n# Field Label\n\n`bal-field-label` is a child component of `bal-field`.\n",
      "docs": "<!-- docs:child of bal-field -->",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "expanded",
          "type": "boolean",
          "mutable": false,
          "attr": "expanded",
          "reflectToAttr": false,
          "docs": "If `true` the component takes the whole width",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "required",
          "type": "boolean",
          "mutable": false,
          "attr": "required",
          "reflectToAttr": false,
          "docs": "If `true` a asterix (*) is added to the label text",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {},
      "parent": "bal-field",
      "isChild": true,
      "childComponents": [],
      "examples": null
    },
    {
      "filePath": "./src/components/bal-field-message/bal-field-message.tsx",
      "encapsulation": "none",
      "tag": "bal-field-message",
      "readme": "\n# Field Message\n\n`bal-field-message` is a child component of `bal-field`.\n",
      "docs": "<!-- docs:child of bal-field -->",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "color",
          "type": "\"\" | \"danger\" | \"success\" | \"warning\"",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "Defines the color of the message.",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "\"\""
            },
            {
              "value": "danger",
              "type": "string"
            },
            {
              "value": "success",
              "type": "string"
            },
            {
              "value": "warning",
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "expanded",
          "type": "boolean",
          "mutable": false,
          "attr": "expanded",
          "reflectToAttr": false,
          "docs": "If `true` the component takes the whole width",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {},
      "parent": "bal-field",
      "isChild": true,
      "childComponents": [],
      "examples": null
    },
    {
      "filePath": "./src/components/bal-file-upload/bal-file-upload.tsx",
      "encapsulation": "scoped",
      "tag": "bal-file-upload",
      "readme": "# File Upload\n",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accept",
          "type": "string",
          "mutable": false,
          "attr": "accept",
          "reflectToAttr": false,
          "docs": "Accepted MIME-Types like `image/png,image/jpeg`.",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "disabled",
          "type": "boolean",
          "mutable": false,
          "attr": "disabled",
          "reflectToAttr": false,
          "docs": "If `true` the button is disabled",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "label",
          "type": "string",
          "mutable": false,
          "attr": "label",
          "reflectToAttr": false,
          "docs": "Label of the drop area.",
          "docsTags": [],
          "default": "'Choose or drop a file...'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "maxBundleSize",
          "type": "number | undefined",
          "mutable": false,
          "attr": "max-bundle-size",
          "reflectToAttr": false,
          "docs": "Allowed max bundle size in bytes.",
          "docsTags": [],
          "default": "undefined",
          "values": [
            {
              "type": "number"
            },
            {
              "type": "undefined"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "maxFileSize",
          "type": "number | undefined",
          "mutable": false,
          "attr": "max-file-size",
          "reflectToAttr": false,
          "docs": "Allowed max file size in bytes.",
          "docsTags": [],
          "default": "undefined",
          "values": [
            {
              "type": "number"
            },
            {
              "type": "undefined"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "maxFiles",
          "type": "number | undefined",
          "mutable": false,
          "attr": "max-files",
          "reflectToAttr": false,
          "docs": "Allowed number of files in the bundle.",
          "docsTags": [],
          "default": "undefined",
          "values": [
            {
              "type": "number"
            },
            {
              "type": "undefined"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "multiple",
          "type": "boolean",
          "mutable": false,
          "attr": "multiple",
          "reflectToAttr": false,
          "docs": "If `true` multiple file upload is possible.",
          "docsTags": [],
          "default": "true",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "subTitle",
          "type": "((file: File) => string) | undefined",
          "mutable": false,
          "reflectToAttr": false,
          "docs": "Overrides the default subtitle filesize",
          "docsTags": [],
          "values": [
            {
              "type": "((file: File) => string)"
            },
            {
              "type": "undefined"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "value",
          "type": "File[]",
          "mutable": false,
          "reflectToAttr": false,
          "docs": "Input value.",
          "docsTags": [],
          "default": "[]",
          "values": [
            {
              "type": "File[]"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [
        {
          "name": "clear",
          "returns": {
            "type": "Promise<void>",
            "docs": ""
          },
          "signature": "clear() => Promise<void>",
          "parameters": [],
          "docs": "Sets the file list to an empty list",
          "docsTags": []
        }
      ],
      "events": [
        {
          "event": "balChange",
          "detail": "File[]",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Triggers when a file is added or removed.",
          "docsTags": []
        },
        {
          "event": "balRejectedFile",
          "detail": "FileUploadRejectedFile",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Triggers when a file is rejected due to not allowed MIME-Type and so on.",
          "docsTags": []
        }
      ],
      "listeners": [
        {
          "event": "dragenter",
          "capture": false,
          "passive": true
        },
        {
          "event": "dragover",
          "capture": false,
          "passive": true
        },
        {
          "event": "dragleave",
          "capture": false,
          "passive": true
        },
        {
          "event": "drop",
          "capture": false,
          "passive": true
        }
      ],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [
        "bal-icon",
        "bal-list",
        "bal-list-item",
        "bal-list-item-icon",
        "bal-list-item-content",
        "bal-list-item-title",
        "bal-list-item-subtitle"
      ],
      "dependencyGraph": {
        "bal-file-upload": [
          "bal-icon",
          "bal-list",
          "bal-list-item",
          "bal-list-item-icon",
          "bal-list-item-content",
          "bal-list-item-title",
          "bal-list-item-subtitle"
        ],
        "bal-list-item-title": [
          "bal-text"
        ],
        "bal-list-item-subtitle": [
          "bal-text"
        ]
      },
      "parent": null,
      "isChild": false,
      "childComponents": [],
      "examples": "<!DOCTYPE html>\n<html dir=\"ltr\" lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, minimum-scale=1.0, maximum-scale=5.0\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n    <link rel=\"stylesheet\" href=\"/build/design-system-components.css\" />\n    <script type=\"module\" src=\"/build/design-system-components.esm.js\"></script>\n    <script nomodule src=\"/build/design-system-components.js\"></script>\n  </head>\n  <body class=\"bal-app\">\n    <div class=\"container\">\n      <h2 class=\"title is-size-2\">Basic</h2>\n      <section>\n        <p id=\"bal-file-upload-messages\"></p>\n        <bal-file-upload id=\"bal-file-upload-example\" accept=\"image/png,image/jpeg\" max-files=\"3\" max-file-size=\"1000000\" max-bundle-size=\"1000000\"></bal-file-upload>\n        <bal-button class=\"mt-2\" id=\"bal-file-upload-clear\" color=\"danger\">Clear Upload</bal-button>\n      </section>\n      <script>\n        var messages = []\n        var fileUpload = document.getElementById('bal-file-upload-example')\n        var clearButton = document.getElementById('bal-file-upload-clear')\n\n        fileUpload.addEventListener('balRejectedFile', event => {\n          var div = document.createElement('div')\n          var text = document.createTextNode('The file \"' + event.detail.file.name + '\" could not be uploaded, because of \"' + event.detail.reasons.join(', ') + '\"')\n          div.appendChild(text)\n          div.setAttribute('class', 'notification is-warning mb-4')\n          document.getElementById('bal-file-upload-messages').appendChild(div)\n        })\n\n        clearButton.addEventListener('click', () => {\n          fileUpload.clear()\n        })\n      </script>\n    </div>\n  </body>\n</html>\n"
    },
    {
      "filePath": "./src/components/bal-footer/bal-footer.tsx",
      "encapsulation": "scoped",
      "tag": "bal-footer",
      "readme": "# Footer\n",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "hasTrackLine",
          "type": "boolean",
          "mutable": false,
          "attr": "has-track-line",
          "reflectToAttr": false,
          "docs": "If `true` the footer shows a track line at the bottom.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "hideLinks",
          "type": "boolean",
          "mutable": false,
          "attr": "hide-links",
          "reflectToAttr": false,
          "docs": "If `true` the default Baloise links will be hidden.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "locale",
          "type": "\"de\" | \"en\" | \"fr\" | \"it\"",
          "mutable": false,
          "attr": "locale",
          "reflectToAttr": false,
          "docs": "The languages in which the links will appear.",
          "docsTags": [],
          "default": "'en'",
          "values": [
            {
              "value": "de",
              "type": "string"
            },
            {
              "value": "en",
              "type": "string"
            },
            {
              "value": "fr",
              "type": "string"
            },
            {
              "value": "it",
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {},
      "parent": null,
      "isChild": false,
      "childComponents": [],
      "examples": "<!DOCTYPE html>\n<html dir=\"ltr\" lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, minimum-scale=1.0, maximum-scale=5.0\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n    <link rel=\"stylesheet\" href=\"/build/design-system-components.css\" />\n    <script type=\"module\" src=\"/build/design-system-components.esm.js\"></script>\n    <script nomodule src=\"/build/design-system-components.js\"></script>\n  </head>\n  <body class=\"bal-app\">\n    <div class=\"container\">\n      <h2 class=\"title is-size-2\">Basic</h2>\n      <section>\n        <bal-footer>\n          <div class=\"container\">Footer</div>\n        </bal-footer>\n      </section>\n\n      <h2 class=\"title is-size-2\">With Track Line</h2>\n      <section>\n        <bal-footer has-track-line>\n          <div class=\"container\">Footer</div>\n        </bal-footer>\n      </section>\n\n      <h2 class=\"title is-size-2\">Without Links</h2>\n      <section>\n        <bal-footer hide-links>\n          <div class=\"container\">Footer without Links</div>\n        </bal-footer>\n      </section>\n\n      <h2 class=\"title is-size-2\">Links in another language</h2>\n      <section>\n        <bal-footer locale=\"de\"></bal-footer>\n      </section>\n    </div>\n  </body>\n</html>\n"
    },
    {
      "filePath": "./src/components/bal-heading/bal-heading.tsx",
      "encapsulation": "none",
      "tag": "bal-heading",
      "readme": "# Heading\n",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "color",
          "type": "\"\" | \"danger\" | \"info\" | \"primary\" | \"success\" | \"warning\"",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "The theme type of the toast. Given by bulma our css framework.",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "\"\""
            },
            {
              "value": "danger",
              "type": "string"
            },
            {
              "value": "info",
              "type": "string"
            },
            {
              "value": "primary",
              "type": "string"
            },
            {
              "value": "success",
              "type": "string"
            },
            {
              "value": "warning",
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "inverted",
          "type": "boolean",
          "mutable": false,
          "attr": "inverted",
          "reflectToAttr": false,
          "docs": "If `true` the button is inverted",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "level",
          "type": "\"h1\" | \"h2\" | \"h3\" | \"h4\" | \"h5\" | \"h6\"",
          "mutable": false,
          "attr": "level",
          "reflectToAttr": false,
          "docs": "The actual heading level used in the HTML markup.",
          "docsTags": [],
          "default": "'h1'",
          "values": [
            {
              "value": "h1",
              "type": "string"
            },
            {
              "value": "h2",
              "type": "string"
            },
            {
              "value": "h3",
              "type": "string"
            },
            {
              "value": "h4",
              "type": "string"
            },
            {
              "value": "h5",
              "type": "string"
            },
            {
              "value": "h6",
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "space",
          "type": "\"all\" | \"bottom\" | \"none\" | \"top\"",
          "mutable": false,
          "attr": "space",
          "reflectToAttr": false,
          "docs": "Defines at which position the heading has spacing.",
          "docsTags": [],
          "default": "'all'",
          "values": [
            {
              "value": "all",
              "type": "string"
            },
            {
              "value": "bottom",
              "type": "string"
            },
            {
              "value": "none",
              "type": "string"
            },
            {
              "value": "top",
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "spaced",
          "type": "boolean",
          "mutable": false,
          "attr": "spaced",
          "reflectToAttr": false,
          "docs": "",
          "docsTags": [
            {
              "name": "deprecated",
              "text": "If 'false' the margin of the heading gets dropped."
            }
          ],
          "default": "true",
          "deprecation": "If 'false' the margin of the heading gets dropped.",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "subtitle",
          "type": "boolean",
          "mutable": false,
          "attr": "subtitle",
          "reflectToAttr": false,
          "docs": "If `true` the heading gets displayed slimmer.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "visualLevel",
          "type": "\"h1\" | \"h2\" | \"h3\" | \"h4\" | \"h5\" | \"h6\" | undefined",
          "mutable": false,
          "attr": "visual-level",
          "reflectToAttr": false,
          "docs": "Make the visual style mimic a specific heading level.\nThis option allows you to make e.g. h1 visually look like h3,\nbut still keep it h1 in the markup.",
          "docsTags": [],
          "default": "undefined",
          "values": [
            {
              "value": "h1",
              "type": "string"
            },
            {
              "value": "h2",
              "type": "string"
            },
            {
              "value": "h3",
              "type": "string"
            },
            {
              "value": "h4",
              "type": "string"
            },
            {
              "value": "h5",
              "type": "string"
            },
            {
              "value": "h6",
              "type": "string"
            },
            {
              "type": "undefined"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [
        "bal-snackbar"
      ],
      "dependencies": [],
      "dependencyGraph": {
        "bal-snackbar": [
          "bal-heading"
        ]
      },
      "parent": null,
      "isChild": false,
      "childComponents": [],
      "examples": "<!DOCTYPE html>\n<html dir=\"ltr\" lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, minimum-scale=1.0, maximum-scale=5.0\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n    <link rel=\"stylesheet\" href=\"/build/design-system-components.css\" />\n    <script type=\"module\" src=\"/build/design-system-components.esm.js\"></script>\n    <script nomodule src=\"/build/design-system-components.js\"></script>\n  </head>\n  <body class=\"bal-app\">\n    <div class=\"container\">\n      <h2 class=\"title is-size-2\">Sizes</h2>\n      <section>\n        <bal-heading level=\"h1\">H1 MetaPro Normal</bal-heading>\n        <bal-heading level=\"h2\">H2 MetaPro Normal</bal-heading>\n        <bal-heading level=\"h3\">H3 MetaPro Medium</bal-heading>\n        <bal-heading level=\"h3\" subtitle>H3 MetaPro Normal</bal-heading>\n        <bal-heading level=\"h4\">H4 MetaPro Medium</bal-heading>\n        <bal-heading level=\"h4\" subtitle>H4 MetaPro Normal</bal-heading>\n      </section>\n\n      <h2 class=\"title is-size-2\">Colors</h2>\n      <section>\n        <bal-heading level=\"h4\" space=\"none\">Default</bal-heading>\n        <bal-heading color=\"primary\" level=\"h4\" space=\"none\">Primary</bal-heading>\n        <bal-heading color=\"info\" level=\"h4\" space=\"none\">Info</bal-heading>\n        <bal-heading color=\"success\" level=\"h4\" space=\"none\">Success</bal-heading>\n        <bal-heading color=\"warning\" level=\"h4\" space=\"none\">Warning</bal-heading>\n        <bal-heading color=\"danger\" level=\"h4\" space=\"none\">Danger</bal-heading>\n      </section>\n\n      <h2 class=\"title is-size-2\">Spacing</h2>\n      <section>\n        <div class=\"has-background-blue-light is-flex mb-3\">\n          <bal-heading color=\"info\" level=\"h4\" space=\"none\">None</bal-heading>\n        </div>\n        <div class=\"has-background-blue-light is-flex mb-3\">\n          <bal-heading color=\"info\" level=\"h4\" space=\"top\">Top</bal-heading>\n        </div>\n        <div class=\"has-background-blue-light is-flex mb-3\">\n          <bal-heading color=\"info\" level=\"h4\" space=\"bottom\">Bottom</bal-heading>\n        </div>\n        <div class=\"has-background-blue-light is-flex\">\n          <bal-heading color=\"info\" level=\"h4\" space=\"all\">All</bal-heading>\n        </div>\n      </section>\n    </div>\n  </body>\n</html>\n"
    },
    {
      "filePath": "./src/components/bal-hint/bal-hint.tsx",
      "encapsulation": "scoped",
      "tag": "bal-hint",
      "readme": "# Hint\n",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "closeLabel",
          "type": "string",
          "mutable": false,
          "attr": "close-label",
          "reflectToAttr": false,
          "docs": "Text for the close button.",
          "docsTags": [],
          "default": "'Close'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "disabled",
          "type": "boolean",
          "mutable": false,
          "attr": "disabled",
          "reflectToAttr": false,
          "docs": "If `true`, the user cannot interact with the input.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [
        {
          "name": "close",
          "returns": {
            "type": "Promise<void>",
            "docs": ""
          },
          "signature": "close() => Promise<void>",
          "parameters": [],
          "docs": "Closes the hint box.",
          "docsTags": []
        },
        {
          "name": "open",
          "returns": {
            "type": "Promise<void>",
            "docs": ""
          },
          "signature": "open() => Promise<void>",
          "parameters": [],
          "docs": "Opens the hint box.",
          "docsTags": []
        },
        {
          "name": "toggle",
          "returns": {
            "type": "Promise<void>",
            "docs": ""
          },
          "signature": "toggle() => Promise<void>",
          "parameters": [],
          "docs": "Toggles the hint box.",
          "docsTags": []
        }
      ],
      "events": [],
      "listeners": [
        {
          "event": "keyup",
          "target": "document",
          "capture": false,
          "passive": false
        },
        {
          "event": "click",
          "target": "document",
          "capture": false,
          "passive": false
        },
        {
          "event": "resize",
          "target": "window",
          "capture": false,
          "passive": true
        },
        {
          "event": "scroll",
          "target": "window",
          "capture": false,
          "passive": true
        }
      ],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [
        "bal-field-hint"
      ],
      "dependencies": [
        "bal-icon",
        "bal-button"
      ],
      "dependencyGraph": {
        "bal-hint": [
          "bal-icon",
          "bal-button"
        ],
        "bal-button": [
          "bal-spinner",
          "bal-icon",
          "bal-text"
        ],
        "bal-field-hint": [
          "bal-hint"
        ]
      },
      "parent": null,
      "isChild": false,
      "childComponents": [
        "bal-hint-text",
        "bal-hint-title"
      ],
      "examples": "<!DOCTYPE html>\n<html dir=\"ltr\" lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, minimum-scale=1.0, maximum-scale=5.0\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n    <link rel=\"stylesheet\" href=\"/build/design-system-components.css\" />\n    <script type=\"module\" src=\"/build/design-system-components.esm.js\"></script>\n    <script nomodule src=\"/build/design-system-components.js\"></script>\n  </head>\n  <body class=\"bal-app\">\n    <div class=\"container\">\n      <h2 class=\"title is-size-2\">Basic</h2>\n      <section>\n        <bal-hint data-test-id=\"hint\">\n          <bal-hint-title>Spider-Man</bal-hint-title>\n          <bal-hint-text>\n            Spider-Man is a fictional superhero created by writer-editor Stan Lee and writer-artist Steve Ditko. He first appeared in the anthology comic book Amazing Fantasy #15\n            (August 1962) in the Silver Age of Comic Books. He appears in American comic books published by Marvel Comics, as well as in a number of movies, television shows, and\n            video game adaptations set in the Marvel Universe.\n          </bal-hint-text>\n        </bal-hint>\n      </section>\n\n      <h2 class=\"title is-size-2\">Field</h2>\n      <section>\n        <bal-field expanded>\n          <bal-field-label required>Firstname</bal-field-label>\n          <bal-field-hint subject=\"Spider-Man\"> Spider-Man is a fictional superhero created by writer-editor Stan Lee and writer-artist Steve Ditko. </bal-field-hint>\n          <bal-field-control>\n            <bal-input id=\"bal-input-1\" name=\"firstName\" placeholder=\"Enter your firstname\"></bal-input>\n          </bal-field-control>\n          <bal-field-message color=\"danger\">Required Field</bal-field-message>\n        </bal-field>\n      </section>\n    </div>\n  </body>\n</html>\n"
    },
    {
      "filePath": "./src/components/bal-hint-text/bal-hint-text.tsx",
      "encapsulation": "scoped",
      "tag": "bal-hint-text",
      "readme": "\n# Hint Text\n\n`bal-hint-text` is a child component of `bal-hint` that defines the text of the hint dialog.\n",
      "docs": "<!-- docs:child of bal-hint -->",
      "docsTags": [],
      "usage": {},
      "props": [],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [
        "bal-field-hint"
      ],
      "dependencies": [],
      "dependencyGraph": {
        "bal-field-hint": [
          "bal-hint-text"
        ]
      },
      "parent": "bal-hint",
      "isChild": true,
      "childComponents": [],
      "examples": null
    },
    {
      "filePath": "./src/components/bal-hint-title/bal-hint-title.tsx",
      "encapsulation": "scoped",
      "tag": "bal-hint-title",
      "readme": "\n# Hint Title\n\n`bal-hint-title` is a child component of `bal-hint` that defines the title of the hint dialog.\n",
      "docs": "<!-- docs:child of bal-hint -->",
      "docsTags": [],
      "usage": {},
      "props": [],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [
        "bal-field-hint"
      ],
      "dependencies": [],
      "dependencyGraph": {
        "bal-field-hint": [
          "bal-hint-title"
        ]
      },
      "parent": "bal-hint",
      "isChild": true,
      "childComponents": [],
      "examples": null
    },
    {
      "filePath": "./src/components/bal-icon/bal-icon.tsx",
      "encapsulation": "scoped",
      "tag": "bal-icon",
      "readme": "# Icon\n",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "color",
          "type": "\"danger\" | \"info\" | \"info-light\" | \"link\" | \"primary\" | \"primary-light\" | \"success\" | \"warning\"",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "The theme type of the button. Given by bulma our css framework.",
          "docsTags": [],
          "default": "'info'",
          "values": [
            {
              "value": "danger",
              "type": "string"
            },
            {
              "value": "info",
              "type": "string"
            },
            {
              "value": "info-light",
              "type": "string"
            },
            {
              "value": "link",
              "type": "string"
            },
            {
              "value": "primary",
              "type": "string"
            },
            {
              "value": "primary-light",
              "type": "string"
            },
            {
              "value": "success",
              "type": "string"
            },
            {
              "value": "warning",
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "inverted",
          "type": "boolean",
          "mutable": false,
          "attr": "inverted",
          "reflectToAttr": false,
          "docs": "If `true` the button is inverted",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "name",
          "type": "string",
          "mutable": false,
          "attr": "name",
          "reflectToAttr": false,
          "docs": "Name of the baloise icon.",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "rotate",
          "type": "boolean",
          "mutable": false,
          "attr": "rotate",
          "reflectToAttr": false,
          "docs": "If `true` the icon rotates like for a loading spinner",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "size",
          "type": "\"\" | \"large\" | \"medium\" | \"small\" | \"xsmall\"",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "Defines the size of the icon.",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "\"\""
            },
            {
              "value": "large",
              "type": "string"
            },
            {
              "value": "medium",
              "type": "string"
            },
            {
              "value": "small",
              "type": "string"
            },
            {
              "value": "xsmall",
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "svg",
          "type": "string",
          "mutable": false,
          "attr": "svg",
          "reflectToAttr": false,
          "docs": "Svg content.",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "turn",
          "type": "boolean",
          "mutable": false,
          "attr": "turn",
          "reflectToAttr": false,
          "docs": "If `true` the icon is rotated 180deg",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [
        "bal-button",
        "bal-data-value",
        "bal-datepicker",
        "bal-field-control",
        "bal-file-upload",
        "bal-hint",
        "bal-pagination",
        "bal-select",
        "bal-snackbar",
        "bal-toast"
      ],
      "dependencies": [],
      "dependencyGraph": {
        "bal-button": [
          "bal-icon"
        ],
        "bal-data-value": [
          "bal-icon"
        ],
        "bal-datepicker": [
          "bal-icon"
        ],
        "bal-field-control": [
          "bal-icon"
        ],
        "bal-file-upload": [
          "bal-icon"
        ],
        "bal-hint": [
          "bal-icon"
        ],
        "bal-pagination": [
          "bal-icon"
        ],
        "bal-select": [
          "bal-icon"
        ],
        "bal-snackbar": [
          "bal-icon"
        ],
        "bal-toast": [
          "bal-icon"
        ]
      },
      "parent": null,
      "isChild": false,
      "childComponents": [],
      "examples": "<!DOCTYPE html>\n<html dir=\"ltr\" lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, minimum-scale=1.0, maximum-scale=5.0\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n    <link rel=\"stylesheet\" href=\"/build/design-system-components.css\" />\n    <script type=\"module\" src=\"/build/design-system-components.esm.js\"></script>\n    <script nomodule src=\"/build/design-system-components.js\"></script>\n  </head>\n  <body class=\"bal-app\">\n    <div class=\"container\">\n      <h2 class=\"title is-size-2\">Basic</h2>\n      <section>\n        <span class=\"icon-text\">\n          <span class=\"icon\">\n            <bal-icon name=\"info-circle\"></bal-icon>\n          </span>\n          <span>info-circle</span>\n        </span>\n      </section>\n\n      <h2 class=\"title is-size-2\">Size</h2>\n      <p>Here is how you can change the size:</p>\n      <section>\n        <bal-icon name=\"date\" size=\"xsmall\"></bal-icon>\n        <bal-icon name=\"date\" size=\"small\"></bal-icon>\n        <bal-icon name=\"date\"></bal-icon>\n        <bal-icon name=\"date\" size=\"medium\"></bal-icon>\n        <bal-icon name=\"date\" size=\"large\"></bal-icon>\n        <bal-icon name=\"date\" size=\"xlarge\"></bal-icon>\n      </section>\n\n      <h2 class=\"title is-size-2\">Colors</h2>\n      <section>\n        <bal-icon color=\"primary\" name=\"github\"></bal-icon>\n        <bal-icon color=\"info\" name=\"github\"></bal-icon>\n        <bal-icon color=\"success\" name=\"github\"></bal-icon>\n        <bal-icon color=\"warning\" name=\"github\"></bal-icon>\n        <bal-icon color=\"danger\" name=\"github\"></bal-icon>\n      </section>\n\n      <h2 class=\"title is-size-2\">Custom Color</h2>\n      <p>Here is how you can change the color:</p>\n      <section>\n        <style type=\"text/css\" scoped>\n          .custom-color {\n            fill: green !important;\n          }\n        </style>\n\n        <bal-icon class=\"custom-color\" name=\"check-circle\"></bal-icon>\n      </section>\n    </div>\n  </body>\n</html>\n"
    },
    {
      "filePath": "./src/components/bal-input/bal-input.tsx",
      "encapsulation": "scoped",
      "tag": "bal-input",
      "readme": "# Input <Badge text=\"Two-way binding\"/>\n",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accept",
          "type": "string | undefined",
          "mutable": false,
          "attr": "accept",
          "reflectToAttr": false,
          "docs": "If the value of the type attribute is `\"file\"`, then this attribute will indicate the types of files that the server accepts, otherwise it will be ignored. The value must be a comma-separated list of unique content type specifiers.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            },
            {
              "type": "undefined"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "autoComplete",
          "type": "boolean",
          "mutable": false,
          "attr": "auto-complete",
          "reflectToAttr": false,
          "docs": "The autocomplete attribute specifies whether or not an input field should have autocomplete enabled.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "autocapitalize",
          "type": "string",
          "mutable": false,
          "attr": "autocapitalize",
          "reflectToAttr": false,
          "docs": "Indicates whether and how the text value should be automatically capitalized as it is entered/edited by the user.\nAvailable options: `\"off\"`, `\"none\"`, `\"on\"`, `\"sentences\"`, `\"words\"`, `\"characters\"`.",
          "docsTags": [],
          "default": "'off'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "autocomplete",
          "type": "\"email\" | \"tel\" | \"url\" | \"off\" | \"on\" | \"name\" | \"honorific-prefix\" | \"given-name\" | \"additional-name\" | \"family-name\" | \"honorific-suffix\" | \"nickname\" | \"username\" | \"new-password\" | \"current-password\" | \"one-time-code\" | \"organization-title\" | \"organization\" | \"street-address\" | \"address-line1\" | \"address-line2\" | \"address-line3\" | \"address-level4\" | \"address-level3\" | \"address-level2\" | \"address-level1\" | \"country\" | \"country-name\" | \"postal-code\" | \"cc-name\" | \"cc-given-name\" | \"cc-additional-name\" | \"cc-family-name\" | \"cc-number\" | \"cc-exp\" | \"cc-exp-month\" | \"cc-exp-year\" | \"cc-csc\" | \"cc-type\" | \"transaction-currency\" | \"transaction-amount\" | \"language\" | \"bday\" | \"bday-day\" | \"bday-month\" | \"bday-year\" | \"sex\" | \"tel-country-code\" | \"tel-national\" | \"tel-area-code\" | \"tel-local\" | \"tel-extension\" | \"impp\" | \"photo\"",
          "mutable": false,
          "attr": "autocomplete",
          "reflectToAttr": false,
          "docs": "Indicates whether the value of the control can be automatically completed by the browser.",
          "docsTags": [],
          "default": "'off'",
          "values": [
            {
              "value": "email",
              "type": "string"
            },
            {
              "value": "tel",
              "type": "string"
            },
            {
              "value": "url",
              "type": "string"
            },
            {
              "value": "off",
              "type": "string"
            },
            {
              "value": "on",
              "type": "string"
            },
            {
              "value": "name",
              "type": "string"
            },
            {
              "value": "honorific-prefix",
              "type": "string"
            },
            {
              "value": "given-name",
              "type": "string"
            },
            {
              "value": "additional-name",
              "type": "string"
            },
            {
              "value": "family-name",
              "type": "string"
            },
            {
              "value": "honorific-suffix",
              "type": "string"
            },
            {
              "value": "nickname",
              "type": "string"
            },
            {
              "value": "username",
              "type": "string"
            },
            {
              "value": "new-password",
              "type": "string"
            },
            {
              "value": "current-password",
              "type": "string"
            },
            {
              "value": "one-time-code",
              "type": "string"
            },
            {
              "value": "organization-title",
              "type": "string"
            },
            {
              "value": "organization",
              "type": "string"
            },
            {
              "value": "street-address",
              "type": "string"
            },
            {
              "value": "address-line1",
              "type": "string"
            },
            {
              "value": "address-line2",
              "type": "string"
            },
            {
              "value": "address-line3",
              "type": "string"
            },
            {
              "value": "address-level4",
              "type": "string"
            },
            {
              "value": "address-level3",
              "type": "string"
            },
            {
              "value": "address-level2",
              "type": "string"
            },
            {
              "value": "address-level1",
              "type": "string"
            },
            {
              "value": "country",
              "type": "string"
            },
            {
              "value": "country-name",
              "type": "string"
            },
            {
              "value": "postal-code",
              "type": "string"
            },
            {
              "value": "cc-name",
              "type": "string"
            },
            {
              "value": "cc-given-name",
              "type": "string"
            },
            {
              "value": "cc-additional-name",
              "type": "string"
            },
            {
              "value": "cc-family-name",
              "type": "string"
            },
            {
              "value": "cc-number",
              "type": "string"
            },
            {
              "value": "cc-exp",
              "type": "string"
            },
            {
              "value": "cc-exp-month",
              "type": "string"
            },
            {
              "value": "cc-exp-year",
              "type": "string"
            },
            {
              "value": "cc-csc",
              "type": "string"
            },
            {
              "value": "cc-type",
              "type": "string"
            },
            {
              "value": "transaction-currency",
              "type": "string"
            },
            {
              "value": "transaction-amount",
              "type": "string"
            },
            {
              "value": "language",
              "type": "string"
            },
            {
              "value": "bday",
              "type": "string"
            },
            {
              "value": "bday-day",
              "type": "string"
            },
            {
              "value": "bday-month",
              "type": "string"
            },
            {
              "value": "bday-year",
              "type": "string"
            },
            {
              "value": "sex",
              "type": "string"
            },
            {
              "value": "tel-country-code",
              "type": "string"
            },
            {
              "value": "tel-national",
              "type": "string"
            },
            {
              "value": "tel-area-code",
              "type": "string"
            },
            {
              "value": "tel-local",
              "type": "string"
            },
            {
              "value": "tel-extension",
              "type": "string"
            },
            {
              "value": "impp",
              "type": "string"
            },
            {
              "value": "photo",
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "autocorrect",
          "type": "\"off\" | \"on\"",
          "mutable": false,
          "attr": "autocorrect",
          "reflectToAttr": false,
          "docs": "Whether auto correction should be enabled when the user is entering/editing the text value.",
          "docsTags": [],
          "default": "'off'",
          "values": [
            {
              "value": "off",
              "type": "string"
            },
            {
              "value": "on",
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "autofocus",
          "type": "boolean",
          "mutable": false,
          "attr": "autofocus",
          "reflectToAttr": false,
          "docs": "This Boolean attribute lets you specify that a form control should have input focus when the page loads.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "balTabindex",
          "type": "number",
          "mutable": false,
          "attr": "bal-tabindex",
          "reflectToAttr": false,
          "docs": "The tabindex of the control.",
          "docsTags": [],
          "default": "0",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "clickable",
          "type": "boolean",
          "mutable": false,
          "attr": "clickable",
          "reflectToAttr": false,
          "docs": "If `true` the input gets a clickable cursor style",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "debounce",
          "type": "number",
          "mutable": false,
          "attr": "debounce",
          "reflectToAttr": false,
          "docs": "Set the amount of time, in milliseconds, to wait to trigger the `balChange` event after each keystroke. This also impacts form bindings such as `ngModel` or `v-model`.",
          "docsTags": [],
          "default": "0",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "decimal",
          "type": "number | undefined",
          "mutable": false,
          "attr": "decimal",
          "reflectToAttr": false,
          "docs": "Defins the allowed decimal points for the `number-input`.",
          "docsTags": [],
          "values": [
            {
              "type": "number"
            },
            {
              "type": "undefined"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "disabled",
          "type": "boolean",
          "mutable": false,
          "attr": "disabled",
          "reflectToAttr": false,
          "docs": "If `true` the input is disabled",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "inputmode",
          "type": "\"decimal\" | \"email\" | \"none\" | \"numeric\" | \"search\" | \"tel\" | \"text\" | \"url\" | undefined",
          "mutable": false,
          "attr": "inputmode",
          "reflectToAttr": false,
          "docs": "A hint to the browser for which keyboard to display.\nPossible values: `\"none\"`, `\"text\"`, `\"tel\"`, `\"url\"`,\n`\"email\"`, `\"numeric\"`, `\"decimal\"`, and `\"search\"`.",
          "docsTags": [],
          "values": [
            {
              "value": "decimal",
              "type": "string"
            },
            {
              "value": "email",
              "type": "string"
            },
            {
              "value": "none",
              "type": "string"
            },
            {
              "value": "numeric",
              "type": "string"
            },
            {
              "value": "search",
              "type": "string"
            },
            {
              "value": "tel",
              "type": "string"
            },
            {
              "value": "text",
              "type": "string"
            },
            {
              "value": "url",
              "type": "string"
            },
            {
              "type": "undefined"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "inverted",
          "type": "boolean",
          "mutable": false,
          "attr": "inverted",
          "reflectToAttr": false,
          "docs": "If `true` this component can be placed on dark background",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "max",
          "type": "string | undefined",
          "mutable": false,
          "attr": "max",
          "reflectToAttr": false,
          "docs": "The maximum value, which must not be less than its minimum (min attribute) value.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            },
            {
              "type": "undefined"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "maxLength",
          "type": "number | undefined",
          "mutable": false,
          "attr": "max-length",
          "reflectToAttr": false,
          "docs": "Defines the max length of the value.",
          "docsTags": [],
          "default": "undefined",
          "values": [
            {
              "type": "number"
            },
            {
              "type": "undefined"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "min",
          "type": "string | undefined",
          "mutable": false,
          "attr": "min",
          "reflectToAttr": false,
          "docs": "The minimum value, which must not be greater than its maximum (max attribute) value.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            },
            {
              "type": "undefined"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "minLength",
          "type": "number | undefined",
          "mutable": false,
          "attr": "min-length",
          "reflectToAttr": false,
          "docs": "Defines the min length of the value.",
          "docsTags": [],
          "default": "undefined",
          "values": [
            {
              "type": "number"
            },
            {
              "type": "undefined"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "multiple",
          "type": "boolean | undefined",
          "mutable": false,
          "attr": "multiple",
          "reflectToAttr": false,
          "docs": "If `true`, the user can enter more than one value. This attribute applies when the type attribute is set to `\"email\"` or `\"file\"`, otherwise it is ignored.",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            },
            {
              "type": "undefined"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "name",
          "type": "string",
          "mutable": false,
          "attr": "name",
          "reflectToAttr": false,
          "docs": "The name of the control, which is submitted with the form data.",
          "docsTags": [],
          "default": "this.inputId",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "numberInput",
          "type": "boolean",
          "mutable": false,
          "attr": "number-input",
          "reflectToAttr": false,
          "docs": "If `true` on mobile device the number keypad is active",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "pattern",
          "type": "string | undefined",
          "mutable": false,
          "attr": "pattern",
          "reflectToAttr": false,
          "docs": "A regular expression that the value is checked against. The pattern must match the entire value, not just some subset. Use the title attribute to describe the pattern to help the user. This attribute applies when the value of the type attribute is `\"text\"`, `\"search\"`, `\"tel\"`, `\"url\"`, `\"email\"`, `\"date\"`, or `\"password\"`, otherwise it is ignored. When the type attribute is `\"date\"`, `pattern` will only be used in browsers that do not support the `\"date\"` input type natively. See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/date for more information.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            },
            {
              "type": "undefined"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "placeholder",
          "type": "null | string | undefined",
          "mutable": false,
          "attr": "placeholder",
          "reflectToAttr": false,
          "docs": "Instructional text that shows before the input has a value.",
          "docsTags": [],
          "values": [
            {
              "type": "null"
            },
            {
              "type": "string"
            },
            {
              "type": "undefined"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "readonly",
          "type": "boolean",
          "mutable": false,
          "attr": "readonly",
          "reflectToAttr": false,
          "docs": "If `true`, the user cannot modify the value.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "required",
          "type": "boolean",
          "mutable": false,
          "attr": "required",
          "reflectToAttr": false,
          "docs": "If `true`, the user must fill in a value before submitting a form.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "spellcheck",
          "type": "boolean",
          "mutable": false,
          "attr": "spellcheck",
          "reflectToAttr": false,
          "docs": "If `true`, the element will have its spelling and grammar checked.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "suffix",
          "type": "string | undefined",
          "mutable": false,
          "attr": "suffix",
          "reflectToAttr": false,
          "docs": "Adds a suffix the the inputvalue after blur.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            },
            {
              "type": "undefined"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "type",
          "type": "\"button\" | \"checkbox\" | \"color\" | \"date\" | \"datetime-local\" | \"email\" | \"file\" | \"image\" | \"month\" | \"number\" | \"password\" | \"radio\" | \"range\" | \"search\" | \"tel\" | \"text\" | \"time\" | \"url\" | \"week\"",
          "mutable": false,
          "attr": "type",
          "reflectToAttr": false,
          "docs": "Defines the type of the input (text, number, email ...).",
          "docsTags": [],
          "default": "'text'",
          "values": [
            {
              "value": "button",
              "type": "string"
            },
            {
              "value": "checkbox",
              "type": "string"
            },
            {
              "value": "color",
              "type": "string"
            },
            {
              "value": "date",
              "type": "string"
            },
            {
              "value": "datetime-local",
              "type": "string"
            },
            {
              "value": "email",
              "type": "string"
            },
            {
              "value": "file",
              "type": "string"
            },
            {
              "value": "image",
              "type": "string"
            },
            {
              "value": "month",
              "type": "string"
            },
            {
              "value": "number",
              "type": "string"
            },
            {
              "value": "password",
              "type": "string"
            },
            {
              "value": "radio",
              "type": "string"
            },
            {
              "value": "range",
              "type": "string"
            },
            {
              "value": "search",
              "type": "string"
            },
            {
              "value": "tel",
              "type": "string"
            },
            {
              "value": "text",
              "type": "string"
            },
            {
              "value": "time",
              "type": "string"
            },
            {
              "value": "url",
              "type": "string"
            },
            {
              "value": "week",
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "value",
          "type": "number | string | undefined",
          "mutable": true,
          "attr": "value",
          "reflectToAttr": false,
          "docs": "The value of the input.",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "number"
            },
            {
              "type": "string"
            },
            {
              "type": "undefined"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [
        {
          "name": "getInputElement",
          "returns": {
            "type": "Promise<HTMLInputElement>",
            "docs": ""
          },
          "signature": "getInputElement() => Promise<HTMLInputElement>",
          "parameters": [],
          "docs": "Returns the native `<input>` element used under the hood.",
          "docsTags": []
        },
        {
          "name": "setFocus",
          "returns": {
            "type": "Promise<void>",
            "docs": ""
          },
          "signature": "setFocus() => Promise<void>",
          "parameters": [],
          "docs": "Sets focus on the native `input` in `bal-input`. Use this method instead of the global\n`input.focus()`.",
          "docsTags": []
        }
      ],
      "events": [
        {
          "event": "balBlur",
          "detail": "FocusEvent",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Emitted when a keyboard input occurred.",
          "docsTags": []
        },
        {
          "event": "balChange",
          "detail": "null | number | string",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Emitted when the input value has changed.",
          "docsTags": []
        },
        {
          "event": "balClick",
          "detail": "MouseEvent",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Emitted when the input has clicked.",
          "docsTags": []
        },
        {
          "event": "balFocus",
          "detail": "FocusEvent",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Emitted when the input has focus.",
          "docsTags": []
        },
        {
          "event": "balInput",
          "detail": "null | number | string",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Emitted when a keyboard input occurred.",
          "docsTags": []
        },
        {
          "event": "balKeyPress",
          "detail": "KeyboardEvent",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Emitted when a keyboard key has pressed.",
          "docsTags": []
        }
      ],
      "listeners": [
        {
          "event": "click",
          "target": "document",
          "capture": true,
          "passive": false
        }
      ],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {},
      "parent": null,
      "isChild": false,
      "childComponents": [],
      "examples": "<!DOCTYPE html>\n<html dir=\"ltr\" lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, minimum-scale=1.0, maximum-scale=5.0\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n    <link rel=\"stylesheet\" href=\"/build/design-system-components.css\" />\n    <script type=\"module\" src=\"/build/design-system-components.esm.js\"></script>\n    <script nomodule src=\"/build/design-system-components.js\"></script>\n  </head>\n  <body class=\"bal-app\">\n    <div class=\"container\">\n      <h2 class=\"title is-size-2\">Basic</h2>\n      <section>\n        <bal-input autofocus id=\"input-1\" name=\"firstName\" placeholder=\"Enter your firstname\" data-test-id=\"input\"></bal-input>\n        <bal-input id=\"input-1-preview\" disabled placeholder=\"Value after balInput event\" data-test-id=\"input-disabled\"></bal-input>\n        <bal-input id=\"input-1-change\" disabled placeholder=\"Value after balChange event\"></bal-input>\n      </section>\n\n      <script>\n        var input1 = document.getElementById('input-1')\n        var input1Preview = document.getElementById('input-1-preview')\n        var input1Change = document.getElementById('input-1-change')\n\n        input1.addEventListener('balInput', function (event) {\n          input1Preview.value = event.detail\n        })\n        input1.addEventListener('balChange', function (event) {\n          input1Change.value = event.detail\n        })\n      </script>\n\n      <h2 class=\"title is-size-2\">Inverted</h2>\n      <section>\n        <div class=\"has-background-info p-4\">\n          <bal-input inverted name=\"firstName\" placeholder=\"Enter your firstname\"></bal-input>\n          <bal-input inverted name=\"firstName\" placeholder=\"Enter your firstname\" disabled></bal-input>\n        </div>\n      </section>\n\n      <h2 class=\"title is-size-2\">Number Input</h2>\n      <p>With number-input property your can only enter valid numbers, if you start with dot (.) zero will be automatically added in front of it.</p>\n      <p>With decimal property you can set how many decimal places you want and number will be formatted accordingly.</p>\n      <section>\n        <bal-input data-test-id=\"input-number\" number-input placeholder=\"Enter a number without decimal\"></bal-input>\n        <bal-input data-test-id=\"input-decimal\" id=\"input-2\" number-input placeholder=\"Enter a number with two decimal points\" decimal=\"2\"></bal-input>\n        <bal-input suffix=\"CHF\" number-input placeholder=\"Enter a number with two decimal places and CHF suffix\" decimal=\"2\"></bal-input>\n        <bal-input id=\"input-2-preview\" disabled placeholder=\"Value after balInput event\"></bal-input>\n        <bal-input id=\"input-2-change\" disabled placeholder=\"Value after balChange event\"></bal-input>\n      </section>\n      <script>\n        var input2 = document.getElementById('input-2')\n        var input2Preview = document.getElementById('input-2-preview')\n        var input2Change = document.getElementById('input-2-change')\n\n        input2.addEventListener('balInput', function (event) {\n          input2Preview.value = event.detail\n        })\n        input2.addEventListener('balChange', function (event) {\n          input2Change.value = event.detail\n        })\n      </script>\n      <h2 class=\"title is-size-2\">Suffix</h2>\n      <section>\n        <bal-input data-test-id=\"input-suffix\" suffix=\"%\" name=\"percentage\" placeholder=\"Enter a percentage number\"></bal-input>\n      </section>\n      <h2 class=\"title is-size-2\">HTML input</h2>\n      <section>\n        <input class=\"input\" name=\"firstName\" placeholder=\"Enter your firstname\" />\n        <input class=\"input\" name=\"firstName\" disabled placeholder=\"Enter your firstname\" />\n      </section>\n    </div>\n  </body>\n</html>\n"
    },
    {
      "filePath": "./src/components/bal-list/bal-list.tsx",
      "encapsulation": "none",
      "tag": "bal-list",
      "readme": "# List\n",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "border",
          "type": "boolean",
          "mutable": false,
          "attr": "border",
          "reflectToAttr": false,
          "docs": "If `true` each list item has a bottom border",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "disabled",
          "type": "boolean",
          "mutable": false,
          "attr": "disabled",
          "reflectToAttr": false,
          "docs": "If `true` the list item can be hovered",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "inverted",
          "type": "boolean",
          "mutable": false,
          "attr": "inverted",
          "reflectToAttr": false,
          "docs": "If `true` the list can be used on a dark backround",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [
        "bal-file-upload"
      ],
      "dependencies": [],
      "dependencyGraph": {
        "bal-file-upload": [
          "bal-list"
        ]
      },
      "parent": null,
      "isChild": false,
      "childComponents": [
        "bal-list-item",
        "bal-list-item-content",
        "bal-list-item-icon",
        "bal-list-item-subtitle",
        "bal-list-item-title"
      ],
      "examples": "<!DOCTYPE html>\n<html dir=\"ltr\" lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, minimum-scale=1.0, maximum-scale=5.0\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n    <link rel=\"stylesheet\" href=\"/build/design-system-components.css\" />\n    <script type=\"module\" src=\"/build/design-system-components.esm.js\"></script>\n    <script nomodule src=\"/build/design-system-components.js\"></script>\n  </head>\n  <body class=\"bal-app\">\n    <div class=\"container\">\n      <h2 class=\"title is-size-2\">Basic</h2>\n      <section>\n        <bal-card>\n          <bal-card-content>\n            <bal-list disabled>\n              <bal-list-item>\n                <bal-list-item-content>\n                  <bal-list-item-title>Single-line item</bal-list-item-title>\n                </bal-list-item-content>\n              </bal-list-item>\n              <bal-list-item>\n                <bal-list-item-content>\n                  <bal-list-item-title>Two-line item</bal-list-item-title>\n                  <bal-list-item-subtitle>Secondary text</bal-list-item-subtitle>\n                </bal-list-item-content>\n              </bal-list-item>\n            </bal-list>\n          </bal-card-content>\n        </bal-card>\n      </section>\n\n      <h2 class=\"title is-size-2\">With borders</h2>\n      <section>\n        <bal-card>\n          <bal-card-content>\n            <bal-list border>\n              <bal-list-item clickable>\n                <bal-list-item-content>\n                  <bal-list-item-title>Single-line item</bal-list-item-title>\n                </bal-list-item-content>\n              </bal-list-item>\n              <bal-list-item clickable selected>\n                <bal-list-item-content>\n                  <bal-list-item-title>Selected item</bal-list-item-title>\n                </bal-list-item-content>\n              </bal-list-item>\n              <bal-list-item disabled>\n                <bal-list-item-content>\n                  <bal-list-item-title>Two-line item</bal-list-item-title>\n                  <bal-list-item-subtitle>Disabled item</bal-list-item-subtitle>\n                </bal-list-item-content>\n              </bal-list-item>\n            </bal-list>\n          </bal-card-content>\n        </bal-card>\n      </section>\n\n      <h2 class=\"title is-size-2\">Inverted</h2>\n      <section>\n        <bal-card inverted color=\"info\">\n          <bal-card-content>\n            <bal-list inverted border>\n              <bal-list-item>\n                <bal-list-item-content>\n                  <bal-list-item-title>Two-line item</bal-list-item-title>\n                  <bal-list-item-subtitle>Secondary text</bal-list-item-subtitle>\n                </bal-list-item-content>\n              </bal-list-item>\n              <bal-list-item>\n                <bal-list-item-content>\n                  <bal-list-item-title>Two-line item</bal-list-item-title>\n                  <bal-list-item-subtitle>Secondary text</bal-list-item-subtitle>\n                </bal-list-item-content>\n              </bal-list-item>\n            </bal-list>\n          </bal-card-content>\n        </bal-card>\n      </section>\n\n      <h2 class=\"title is-size-2\">With Icons</h2>\n      <section>\n        <bal-card>\n          <bal-card-content>\n            <bal-list>\n              <bal-list-item>\n                <bal-list-item-icon>\n                  <bal-icon name=\"account\"></bal-icon>\n                </bal-list-item-icon>\n                <bal-list-item-content>\n                  <bal-list-item-title>Tony Stark</bal-list-item-title>\n                  <bal-list-item-subtitle>Stark Industries</bal-list-item-subtitle>\n                </bal-list-item-content>\n              </bal-list-item>\n              <bal-list-item>\n                <bal-list-item-icon>\n                  <bal-icon name=\"check\"></bal-icon>\n                </bal-list-item-icon>\n                <bal-list-item-content>\n                  <bal-list-item-title class=\"has-text-black\">Avenger</bal-list-item-title>\n                </bal-list-item-content>\n              </bal-list-item>\n              <bal-list-item>\n                <bal-list-item-icon>\n                  <bal-icon name=\"document\"></bal-icon>\n                </bal-list-item-icon>\n                <bal-list-item-content>\n                  <bal-list-item-title>Document.pdf</bal-list-item-title>\n                  <bal-list-item-subtitle>20.03.1998</bal-list-item-subtitle>\n                </bal-list-item-content>\n                <bal-list-item-icon right>\n                  <bal-icon name=\"download\"></bal-icon>\n                </bal-list-item-icon>\n              </bal-list-item>\n            </bal-list>\n          </bal-card-content>\n        </bal-card>\n      </section>\n\n      <h2 class=\"title is-size-2\">Link</h2>\n      <section>\n        <bal-card>\n          <bal-card-content>\n            <bal-list>\n              <bal-list-item href=\"https://google.com\" target=\"_blank\">\n                <bal-list-item-content>\n                  <bal-list-item-title>Link A</bal-list-item-title>\n                </bal-list-item-content>\n                <bal-list-item-icon right>\n                  <bal-icon name=\"nav-go-right\" size=\"xsmall\"></bal-icon>\n                </bal-list-item-icon>\n              </bal-list-item>\n              <bal-list-item disabled>\n                <bal-list-item-content>\n                  <bal-list-item-title>Disabled Link B</bal-list-item-title>\n                </bal-list-item-content>\n                <bal-list-item-icon right>\n                  <bal-icon name=\"nav-go-right\" size=\"xsmall\"></bal-icon>\n                </bal-list-item-icon>\n              </bal-list-item>\n            </bal-list>\n          </bal-card-content>\n        </bal-card>\n      </section>\n    </div>\n  </body>\n</html>\n"
    },
    {
      "filePath": "./src/components/bal-list-item/bal-list-item.tsx",
      "encapsulation": "none",
      "tag": "bal-list-item",
      "readme": "\n# List item\n",
      "docs": "<!-- docs:child of bal-list -->",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "clickable",
          "type": "boolean",
          "mutable": false,
          "attr": "clickable",
          "reflectToAttr": false,
          "docs": "If `true` the list item shows that it is clickable",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "disabled",
          "type": "boolean",
          "mutable": false,
          "attr": "disabled",
          "reflectToAttr": false,
          "docs": "If `true` the list item can be hovered",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "href",
          "type": "string",
          "mutable": false,
          "attr": "href",
          "reflectToAttr": false,
          "docs": "Specifies the URL of the page the link goes to",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "If `true` the list item has a selected theme",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "target",
          "type": "\" _parent\" | \"_blank\" | \"_self\" | \"_top\"",
          "mutable": false,
          "attr": "target",
          "reflectToAttr": false,
          "docs": "Specifies where to open the linked document",
          "docsTags": [],
          "default": "'_self'",
          "values": [
            {
              "value": " _parent",
              "type": "string"
            },
            {
              "value": "_blank",
              "type": "string"
            },
            {
              "value": "_self",
              "type": "string"
            },
            {
              "value": "_top",
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [
        {
          "event": "balNavigate",
          "detail": "MouseEvent",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Emitted when the link element has clicked",
          "docsTags": []
        }
      ],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [
        "bal-file-upload"
      ],
      "dependencies": [],
      "dependencyGraph": {
        "bal-file-upload": [
          "bal-list-item"
        ]
      },
      "parent": "bal-list",
      "isChild": true,
      "childComponents": [],
      "examples": null
    },
    {
      "filePath": "./src/components/bal-list-item-content/bal-list-item-content.tsx",
      "encapsulation": "none",
      "tag": "bal-list-item-content",
      "readme": "\n# List Item Content\n",
      "docs": "<!-- docs:child of bal-list -->",
      "docsTags": [],
      "usage": {},
      "props": [],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [
        "bal-file-upload"
      ],
      "dependencies": [],
      "dependencyGraph": {
        "bal-file-upload": [
          "bal-list-item-content"
        ]
      },
      "parent": "bal-list",
      "isChild": true,
      "childComponents": [],
      "examples": null
    },
    {
      "filePath": "./src/components/bal-list-item-icon/bal-list-item-icon.tsx",
      "encapsulation": "none",
      "tag": "bal-list-item-icon",
      "readme": "\n# List Item Icon\n\n`bal-list-item-subtitle` is a child component of `bal-list` that defines the subtitle list row element.\n",
      "docs": "<!-- docs:child of bal-list -->",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "right",
          "type": "boolean",
          "mutable": false,
          "attr": "right",
          "reflectToAttr": false,
          "docs": "If `true` the icon is on the right side of the list item. Default is the left side.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [
        "bal-file-upload"
      ],
      "dependencies": [],
      "dependencyGraph": {
        "bal-file-upload": [
          "bal-list-item-icon"
        ]
      },
      "parent": "bal-list",
      "isChild": true,
      "childComponents": [],
      "examples": null
    },
    {
      "filePath": "./src/components/bal-list-item-subtitle/bal-list-item-subtitle.tsx",
      "encapsulation": "none",
      "tag": "bal-list-item-subtitle",
      "readme": "\n# List Item Subtitle\n\n`bal-list-item-subtitle` is a child component of `bal-list` that defines the subtitle list row element.\n",
      "docs": "<!-- docs:child of bal-list -->",
      "docsTags": [],
      "usage": {},
      "props": [],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [
        "bal-file-upload"
      ],
      "dependencies": [
        "bal-text"
      ],
      "dependencyGraph": {
        "bal-list-item-subtitle": [
          "bal-text"
        ],
        "bal-file-upload": [
          "bal-list-item-subtitle"
        ]
      },
      "parent": "bal-list",
      "isChild": true,
      "childComponents": [],
      "examples": null
    },
    {
      "filePath": "./src/components/bal-list-item-title/bal-list-item-title.tsx",
      "encapsulation": "none",
      "tag": "bal-list-item-title",
      "readme": "\n# List Item Title\n\n`bal-list-item-title` is a child component of `bal-list` that defines the title list row element.\n",
      "docs": "<!-- docs:child of bal-list -->",
      "docsTags": [],
      "usage": {},
      "props": [],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [
        "bal-file-upload"
      ],
      "dependencies": [
        "bal-text"
      ],
      "dependencyGraph": {
        "bal-list-item-title": [
          "bal-text"
        ],
        "bal-file-upload": [
          "bal-list-item-title"
        ]
      },
      "parent": "bal-list",
      "isChild": true,
      "childComponents": [],
      "examples": null
    },
    {
      "filePath": "./src/components/bal-modal/bal-modal.tsx",
      "encapsulation": "scoped",
      "tag": "bal-modal",
      "readme": "# Modal\n",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "component",
          "type": "Function | HTMLElement | null | string",
          "mutable": false,
          "attr": "component",
          "reflectToAttr": false,
          "docs": "The component to display inside of the modal.",
          "docsTags": [],
          "values": [
            {
              "type": "Function"
            },
            {
              "type": "HTMLElement"
            },
            {
              "type": "null"
            },
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": true
        },
        {
          "name": "componentProps",
          "type": "undefined | { [key: string]: any; }",
          "mutable": false,
          "reflectToAttr": false,
          "docs": "The data to pass to the modal component.",
          "docsTags": [],
          "values": [
            {
              "type": "undefined"
            },
            {
              "type": "{ [key: string]: any; }"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "cssClass",
          "type": "string | string[] | undefined",
          "mutable": false,
          "attr": "css-class",
          "reflectToAttr": false,
          "docs": "Additional classes to apply for custom CSS. If multiple classes are\nprovided they should be separated by spaces.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            },
            {
              "type": "string[]"
            },
            {
              "type": "undefined"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "hasBackdrop",
          "type": "boolean",
          "mutable": false,
          "attr": "has-backdrop",
          "reflectToAttr": false,
          "docs": "If `true`, a backdrop will be displayed behind the modal.",
          "docsTags": [],
          "default": "true",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "interface",
          "type": "\"card\" | \"light\"",
          "mutable": false,
          "attr": "interface",
          "reflectToAttr": false,
          "docs": "Defines the look of the modal. The card interface should be used for scrollable content in the modal.",
          "docsTags": [],
          "default": "'light'",
          "values": [
            {
              "value": "card",
              "type": "string"
            },
            {
              "value": "light",
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "isClosable",
          "type": "boolean",
          "mutable": false,
          "attr": "is-closable",
          "reflectToAttr": false,
          "docs": "If `true`, the modal can be closed with the escape key or the little close button.",
          "docsTags": [],
          "default": "true",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "modalWidth",
          "type": "number",
          "mutable": false,
          "attr": "modal-width",
          "reflectToAttr": false,
          "docs": "Defines the width of the modal body",
          "docsTags": [],
          "default": "640",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [
        {
          "name": "close",
          "returns": {
            "type": "Promise<void>",
            "docs": ""
          },
          "signature": "close() => Promise<void>",
          "parameters": [],
          "docs": "Closes the modal.",
          "docsTags": []
        },
        {
          "name": "dismiss",
          "returns": {
            "type": "Promise<boolean>",
            "docs": ""
          },
          "signature": "dismiss(data?: any, role?: string | undefined) => Promise<boolean>",
          "parameters": [],
          "docs": "Closes the presented modal with the modal controller",
          "docsTags": []
        },
        {
          "name": "onDidDismiss",
          "returns": {
            "type": "Promise<OverlayEventDetail<T>>",
            "docs": ""
          },
          "signature": "onDidDismiss<T = any>() => Promise<OverlayEventDetail<T>>",
          "parameters": [],
          "docs": "Returns a promise that resolves when the modal did dismiss.",
          "docsTags": []
        },
        {
          "name": "onWillDismiss",
          "returns": {
            "type": "Promise<OverlayEventDetail<T>>",
            "docs": ""
          },
          "signature": "onWillDismiss<T = any>() => Promise<OverlayEventDetail<T>>",
          "parameters": [],
          "docs": "Returns a promise that resolves when the modal will dismiss.",
          "docsTags": []
        },
        {
          "name": "open",
          "returns": {
            "type": "Promise<void>",
            "docs": ""
          },
          "signature": "open() => Promise<void>",
          "parameters": [],
          "docs": "Opens the modal.",
          "docsTags": []
        },
        {
          "name": "present",
          "returns": {
            "type": "Promise<void>",
            "docs": ""
          },
          "signature": "present() => Promise<void>",
          "parameters": [],
          "docs": "Presents the modal through the modal controller",
          "docsTags": []
        }
      ],
      "events": [
        {
          "event": "balModalDidDismiss",
          "detail": "OverlayEventDetail<any>",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Emitted after the modal has dismissed.",
          "docsTags": []
        },
        {
          "event": "balModalDidPresent",
          "detail": "void",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Emitted after the modal has presented.",
          "docsTags": []
        },
        {
          "event": "balModalWillDismiss",
          "detail": "OverlayEventDetail<any>",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Emitted before the modal has dismissed.",
          "docsTags": []
        },
        {
          "event": "balModalWillPresent",
          "detail": "void",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Emitted before the modal has presented.",
          "docsTags": []
        }
      ],
      "listeners": [
        {
          "event": "click",
          "capture": false,
          "passive": false
        },
        {
          "event": "keyup",
          "target": "body",
          "capture": false,
          "passive": false
        }
      ],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {},
      "parent": null,
      "isChild": false,
      "childComponents": [
        "bal-modal-actions",
        "bal-modal-body",
        "bal-modal-footer",
        "bal-modal-header"
      ],
      "examples": "<!DOCTYPE html>\n<html dir=\"ltr\" lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, minimum-scale=1.0, maximum-scale=5.0\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n    <link rel=\"stylesheet\" href=\"/build/design-system-components.css\" />\n    <script type=\"module\" src=\"/build/design-system-components.esm.js\"></script>\n    <script nomodule src=\"/build/design-system-components.js\"></script>\n    <script type=\"module\">\n      import { balModalController, deepReady } from '/build/index.esm.js'\n\n      window.balModalController = balModalController\n      window.deepReady = deepReady\n    </script>\n  </head>\n  <body class=\"bal-app\">\n    <div class=\"container\">\n      <h2 class=\"title is-size-2\">Basic</h2>\n\n      <!-- <section>\n        <bal-button id=\"bal-modal-trigger-example\" data-test-id=\"open-modal-button\">Launch Modal</bal-button>\n      </section>\n      <script type=\"text/javascript\">\n        customElements.define(\n          'modal-page',\n          class extends HTMLElement {\n            connectedCallback() {\n              this.innerHTML = `\n              <bal-modal-header>Modal Title</bal-modal-header>\n              <bal-modal-body>\n                  Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud\n                  exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\n              </bal-modal-body>\n              <bal-modal-footer>\n                <bal-modal-actions>\n                  <bal-button color=\"primary\" modal-close>Okay</bal-button>\n                  <bal-button color=\"link\" modal-close data-test-id=\"open-modal-close\">Cancel</bal-button>\n                </bal-modal-actions>\n              </bal-modal-footer>`\n            }\n          },\n        )\n\n        async function presentModal() {\n          const modalElement = document.createElement('bal-modal')\n          modalElement.component = 'modal-page'\n          modalElement.cssClass = 'my-custom-class'\n          modalElement.setAttribute('data-test-id', 'modal')\n\n          // Define the with of the modal.\n          modalElement.modalWidth = 640 // default\n\n          // Define to have backdrop and that it is closable\n          modalElement.hasBackdrop = true // default\n          modalElement.isClosable = true // default\n\n          // attach the modal to the dom\n          document.body.appendChild(modalElement)\n          await deepReady(modalElement)\n\n          // present the modal for the user\n          return modalElement.present()\n        }\n\n        const triggerElementBasic = document.getElementById('bal-modal-trigger-example')\n        triggerElementBasic.onclick = async function () {\n          await presentModal()\n        }\n      </script> -->\n\n      <section>\n        <bal-modal id=\"bal-modal-example-width\" data-test-id=\"modal\">\n          <bal-modal-header>Modal Title</bal-modal-header>\n          <bal-modal-body>\n            <p>\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud\n              exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\n            </p>\n          </bal-modal-body>\n          <bal-modal-footer>\n            <bal-modal-actions>\n              <bal-button color=\"link\" id=\"bal-modal-close-4\" data-test-id=\"open-modal-close\">Cancel</bal-button>\n              <bal-button color=\"primary\" id=\"bal-modal-close-3\">Okay</bal-button>\n            </bal-modal-actions>\n          </bal-modal-footer>\n        </bal-modal>\n\n        <bal-button id=\"bal-modal-trigger-example-width\" data-test-id=\"open-modal-button\">Launch Modal</bal-button>\n      </section>\n      <script type=\"text/javascript\">\n        const modalElementCustomWidth = document.getElementById('bal-modal-example-width')\n        const triggerElementCustomWidth = document.getElementById('bal-modal-trigger-example-width')\n        const okayElementCustomWidth = document.getElementById('bal-modal-close-3')\n        const cancelElementCustomWidth = document.getElementById('bal-modal-close-4')\n        triggerElementCustomWidth.onclick = function () {\n          modalElementCustomWidth.open()\n        }\n        okayElementCustomWidth.onclick = function () {\n          modalElementCustomWidth.close()\n        }\n        cancelElementCustomWidth.onclick = function () {\n          modalElementCustomWidth.close()\n        }\n      </script>\n    </div>\n  </body>\n</html>\n"
    },
    {
      "filePath": "./src/components/bal-modal-actions/bal-modal-actions.tsx",
      "encapsulation": "scoped",
      "tag": "bal-modal-actions",
      "readme": "\n# Modal Actions\n\n`bal-modal-actions` is a child component of `bal-modal` that defines the area for the action button at the bottom of the modal.\n",
      "docs": "<!-- docs:child of bal-modal -->",
      "docsTags": [],
      "usage": {},
      "props": [],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {},
      "parent": "bal-modal",
      "isChild": true,
      "childComponents": [],
      "examples": null
    },
    {
      "filePath": "./src/components/bal-modal-body/bal-modal-body.tsx",
      "encapsulation": "none",
      "tag": "bal-modal-body",
      "readme": "\n# Modal Body\n\n`bal-modal-body` is a child component of `bal-modal` that contains the main content of the modal.\n",
      "docs": "<!-- docs:child of bal-modal -->",
      "docsTags": [],
      "usage": {},
      "props": [],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {},
      "parent": "bal-modal",
      "isChild": true,
      "childComponents": [],
      "examples": null
    },
    {
      "filePath": "./src/components/bal-modal-footer/bal-modal-footer.tsx",
      "encapsulation": "none",
      "tag": "bal-modal-footer",
      "readme": "\n# Modal Footer\n\n`bal-modal-footer` is a child component of `bal-modal` that normally contains some buttons for that please also use the `bal-modal-actions` component.\n",
      "docs": "<!-- docs:child of bal-modal -->",
      "docsTags": [],
      "usage": {},
      "props": [],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {},
      "parent": "bal-modal",
      "isChild": true,
      "childComponents": [],
      "examples": null
    },
    {
      "filePath": "./src/components/bal-modal-header/bal-modal-header.tsx",
      "encapsulation": "none",
      "tag": "bal-modal-header",
      "readme": "\n# Modal Header\n\n`bal-modal-header` is a child component of `bal-modal` that has the title of the modal.\n",
      "docs": "<!-- docs:child of bal-modal -->",
      "docsTags": [],
      "usage": {},
      "props": [],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {},
      "parent": "bal-modal",
      "isChild": true,
      "childComponents": [],
      "examples": null
    },
    {
      "filePath": "./src/components/bal-navbar/bal-navbar.tsx",
      "encapsulation": "none",
      "tag": "bal-navbar",
      "readme": "# Navbar\n",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "expanded",
          "type": "boolean",
          "mutable": false,
          "attr": "expanded",
          "reflectToAttr": false,
          "docs": "It `true` the component uses the whole width",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "light",
          "type": "boolean",
          "mutable": false,
          "attr": "light",
          "reflectToAttr": false,
          "docs": "It `true` the navbar has a white background",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "noBurger",
          "type": "boolean",
          "mutable": false,
          "attr": "no-burger",
          "reflectToAttr": false,
          "docs": "It `true` the burger button is hidden",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {},
      "parent": null,
      "isChild": false,
      "childComponents": [
        "bal-navbar-brand",
        "bal-navbar-menu",
        "bal-navbar-menu-end",
        "bal-navbar-menu-start"
      ],
      "examples": "<!DOCTYPE html>\n<html dir=\"ltr\" lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, minimum-scale=1.0, maximum-scale=5.0\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n    <link rel=\"stylesheet\" href=\"/build/design-system-components.css\" />\n    <script type=\"module\" src=\"/build/design-system-components.esm.js\"></script>\n    <script nomodule src=\"/build/design-system-components.js\"></script>\n  </head>\n  <body class=\"bal-app\">\n    <div class=\"container\">\n      <h2 class=\"title is-size-2\">Basic</h2>\n      <section>\n        <bal-navbar>\n          <bal-navbar-brand>\n            <bal-icon name=\"logo\" inverted size=\"large\"></bal-icon>\n            <bal-text style=\"margin-left: 15px\"><strong>App</strong> Title</bal-text>\n          </bal-navbar-brand>\n          <bal-navbar-menu>\n            <bal-navbar-menu-start>\n              <a class=\"navbar-item\"><bal-text>Home</bal-text></a>\n              <div class=\"navbar-item has-dropdown is-hoverable\">\n                <a class=\"navbar-link\"><bal-text>Language</bal-text></a>\n                <div class=\"navbar-dropdown\">\n                  <a class=\"navbar-item\"><bal-text>English</bal-text></a>\n                  <a class=\"navbar-item\"><bal-text>German</bal-text></a>\n                  <a class=\"navbar-item\"><bal-text>French</bal-text></a>\n                  <hr class=\"navbar-divider\" />\n                  <a class=\"navbar-item\"><bal-text>Support</bal-text></a>\n                </div>\n              </div>\n            </bal-navbar-menu-start>\n            <bal-navbar-menu-end>\n              <bal-button inverted>Logout</bal-button>\n            </bal-navbar-menu-end>\n          </bal-navbar-menu>\n        </bal-navbar>\n      </section>\n\n      <h2 class=\"title is-size-2\">Light</h2>\n      <section>\n        <bal-navbar light>\n          <bal-navbar-brand>\n            <bal-icon name=\"logo\" size=\"large\"></bal-icon>\n            <bal-text style=\"margin-left: 15px\"><strong>App</strong> Title</bal-text>\n          </bal-navbar-brand>\n          <bal-navbar-menu>\n            <bal-navbar-menu-start>\n              <a class=\"navbar-item\"><bal-text>Home</bal-text></a>\n              <div class=\"navbar-item has-dropdown is-hoverable\">\n                <a class=\"navbar-link\"><bal-text>Language</bal-text></a>\n                <div class=\"navbar-dropdown\">\n                  <a class=\"navbar-item\"><bal-text>English</bal-text></a>\n                  <a class=\"navbar-item\"><bal-text>German</bal-text></a>\n                  <a class=\"navbar-item\"><bal-text>French</bal-text></a>\n                  <hr class=\"navbar-divider\" />\n                  <a class=\"navbar-item\"><bal-text>Support</bal-text></a>\n                </div>\n              </div>\n            </bal-navbar-menu-start>\n            <bal-navbar-menu-end>\n              <bal-button>Logout</bal-button>\n            </bal-navbar-menu-end>\n          </bal-navbar-menu>\n        </bal-navbar>\n      </section>\n    </div>\n  </body>\n</html>\n"
    },
    {
      "filePath": "./src/components/bal-navbar-brand/bal-navbar-brand.tsx",
      "encapsulation": "none",
      "tag": "bal-navbar-brand",
      "readme": "\n# Navbar Brand\n\n`bal-navbar-brand` is a child component of `bal-navbar` that defines the area in the navbar where the logo or the title of the applications is.\n",
      "docs": "<!-- docs:child of bal-navbar -->",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "href",
          "type": "string",
          "mutable": false,
          "attr": "href",
          "reflectToAttr": false,
          "docs": "Link of the logo / title.",
          "docsTags": [],
          "default": "'/'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [
        {
          "event": "balNavigate",
          "detail": "MouseEvent",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Emitted when the link element has clicked",
          "docsTags": []
        }
      ],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {},
      "parent": "bal-navbar",
      "isChild": true,
      "childComponents": [],
      "examples": null
    },
    {
      "filePath": "./src/components/bal-navbar-menu/bal-navbar-menu.tsx",
      "encapsulation": "none",
      "tag": "bal-navbar-menu",
      "readme": "\n# Navbar Menu\n\n`bal-navbar-menu` is a child component of `bal-navbar` that defines the area in the navbar where links and actions are.\n",
      "docs": "<!-- docs:child of bal-navbar -->",
      "docsTags": [],
      "usage": {},
      "props": [],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {},
      "parent": "bal-navbar",
      "isChild": true,
      "childComponents": [],
      "examples": null
    },
    {
      "filePath": "./src/components/bal-navbar-menu-end/bal-navbar-menu-end.tsx",
      "encapsulation": "none",
      "tag": "bal-navbar-menu-end",
      "readme": "\n# Navbar Menu Start\n\n`bal-navbar-menu-start` is a child component of `bal-navbar` which is the left side of the navbar.\n",
      "docs": "<!-- docs:child of bal-navbar -->",
      "docsTags": [],
      "usage": {},
      "props": [],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {},
      "parent": "bal-navbar",
      "isChild": true,
      "childComponents": [],
      "examples": null
    },
    {
      "filePath": "./src/components/bal-navbar-menu-start/bal-navbar-menu-start.tsx",
      "encapsulation": "none",
      "tag": "bal-navbar-menu-start",
      "readme": "\n# Navbar Menu End\n\n`bal-navbar-menu-end` is a child component of `bal-navbar` which is the right side of the navbar.\n",
      "docs": "<!-- docs:child of bal-navbar -->",
      "docsTags": [],
      "usage": {},
      "props": [],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {},
      "parent": "bal-navbar",
      "isChild": true,
      "childComponents": [],
      "examples": null
    },
    {
      "filePath": "./src/components/bal-notification/bal-notification.tsx",
      "encapsulation": "scoped",
      "tag": "bal-notification",
      "readme": "# Notification\n",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "color",
          "type": "\"\" | \"danger\" | \"info\" | \"primary\" | \"success\" | \"warning\"",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "Defines the color of the element",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "\"\""
            },
            {
              "value": "danger",
              "type": "string"
            },
            {
              "value": "info",
              "type": "string"
            },
            {
              "value": "primary",
              "type": "string"
            },
            {
              "value": "success",
              "type": "string"
            },
            {
              "value": "warning",
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {},
      "parent": null,
      "isChild": false,
      "childComponents": [],
      "examples": "<!DOCTYPE html>\n<html dir=\"ltr\" lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, minimum-scale=1.0, maximum-scale=5.0\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n    <link rel=\"stylesheet\" href=\"/build/design-system-components.css\" />\n    <script type=\"module\" src=\"/build/design-system-components.esm.js\"></script>\n    <script nomodule src=\"/build/design-system-components.js\"></script>\n  </head>\n  <body class=\"bal-app\">\n    <div class=\"container\">\n      <h2 class=\"title is-size-2\">Basic</h2>\n      <section>\n        <bal-notification color=\"primary\"\n          >Lorem ipsum dolor sit, amet consectetur adipisicing elit. At, assumenda in ducimus modi animi enim velit molestiae rerum natus, ad culpa explicabo blanditiis architecto\n          quo expedita incidunt officiis quaerat delectus.</bal-notification\n        >\n      </section>\n\n      <h2 class=\"title is-size-2\">Types</h2>\n      <section>\n        <bal-notification>Default</bal-notification>\n        <br />\n        <bal-notification color=\"primary\">Primary</bal-notification>\n        <br />\n        <bal-notification color=\"info\">Info</bal-notification>\n        <br />\n        <bal-notification color=\"success\">Success</bal-notification>\n        <br />\n        <bal-notification color=\"warning\">Warning</bal-notification>\n        <br />\n        <bal-notification color=\"danger\">Danger</bal-notification>\n      </section>\n\n      <h2 class=\"title is-size-2\">Box</h2>\n      <section>\n        <bal-notification color=\"info\" class=\"has-text-centered\" style=\"max-width: 400px\">\n          <h3 class=\"title is-size-3 has-text-white\" style=\"margin-top: 0\">Title</h3>\n          <bal-button color=\"info\" outlined inverted>Action</bal-button>\n        </bal-notification>\n      </section>\n\n      <h2 class=\"title is-size-2\">Error</h2>\n      <section>\n        <bal-notification>\n          <span class=\"icon-text\">\n            <span class=\"icon\">\n              <bal-icon color=\"danger\" name=\"alert-circle\"></bal-icon>\n            </span>\n            <span style=\"margin-left: 10px\">\n              <strong style=\"margin-right: 10px\">Error!</strong>\n              Lorem ipsum, dolor sit amet consectetur adipisicing elit.\n            </span>\n          </span>\n        </bal-notification>\n      </section>\n    </div>\n  </body>\n</html>\n"
    },
    {
      "filePath": "./src/components/bal-pagination/bal-pagination.tsx",
      "encapsulation": "scoped",
      "tag": "bal-pagination",
      "readme": "# Pagination\n",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "disabled",
          "type": "boolean",
          "mutable": false,
          "attr": "disabled",
          "reflectToAttr": false,
          "docs": "Disables component",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "pageRange",
          "type": "number",
          "mutable": false,
          "attr": "page-range",
          "reflectToAttr": false,
          "docs": "Specify the max visible pages before and after the selected page",
          "docsTags": [],
          "default": "2",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "totalPages",
          "type": "number",
          "mutable": false,
          "attr": "total-pages",
          "reflectToAttr": false,
          "docs": "The total amount of pages",
          "docsTags": [],
          "default": "1",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "value",
          "type": "number",
          "mutable": false,
          "attr": "value",
          "reflectToAttr": false,
          "docs": "Current selected page",
          "docsTags": [],
          "default": "1",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [
        {
          "name": "next",
          "returns": {
            "type": "Promise<void>",
            "docs": ""
          },
          "signature": "next() => Promise<void>",
          "parameters": [],
          "docs": "Go to the next page",
          "docsTags": []
        },
        {
          "name": "previous",
          "returns": {
            "type": "Promise<void>",
            "docs": ""
          },
          "signature": "previous() => Promise<void>",
          "parameters": [],
          "docs": "Go to the prvious page",
          "docsTags": []
        }
      ],
      "events": [
        {
          "event": "balChange",
          "detail": "number",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Triggers when a page change happens",
          "docsTags": []
        }
      ],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [
        "bal-text",
        "bal-icon"
      ],
      "dependencyGraph": {
        "bal-pagination": [
          "bal-text",
          "bal-icon"
        ]
      },
      "parent": null,
      "isChild": false,
      "childComponents": [],
      "examples": "<!DOCTYPE html>\n<html dir=\"ltr\" lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, minimum-scale=1.0, maximum-scale=5.0\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n    <link rel=\"stylesheet\" href=\"/build/design-system-components.css\" />\n    <script type=\"module\" src=\"/build/design-system-components.esm.js\"></script>\n    <script nomodule src=\"/build/design-system-components.js\"></script>\n  </head>\n  <body class=\"bal-app\">\n    <div class=\"container\">\n      <h2 class=\"title is-size-2\">Basic</h2>\n      <p>\n        Generally, pagination is used if there are more than 25 items displayed in one view. <br />\n        The default number displayed will vary depending on the context.\n      </p>\n      <section>\n        <bal-pagination value=\"2\" page-range=\"3\" total-pages=\"20\" data-test-id=\"pagination\"></bal-pagination>\n      </section>\n    </div>\n  </body>\n</html>\n"
    },
    {
      "filePath": "./src/components/bal-radio/bal-radio.tsx",
      "encapsulation": "scoped",
      "tag": "bal-radio",
      "readme": "# Radio <Badge text=\"Two-way binding\"/>\n",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "balTabindex",
          "type": "number",
          "mutable": false,
          "attr": "bal-tabindex",
          "reflectToAttr": false,
          "docs": "The tabindex of the control.",
          "docsTags": [],
          "default": "0",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "checked",
          "type": "boolean",
          "mutable": true,
          "attr": "checked",
          "reflectToAttr": true,
          "docs": "If `true`, the radio is selected.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "disabled",
          "type": "boolean",
          "mutable": false,
          "attr": "disabled",
          "reflectToAttr": false,
          "docs": "If `true`, the user cannot interact with the checkbox.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "interface",
          "type": "\"radio\" | \"select-button\"",
          "mutable": false,
          "attr": "interface",
          "reflectToAttr": false,
          "docs": "Defines the layout of the radio button",
          "docsTags": [],
          "default": "'radio'",
          "values": [
            {
              "value": "radio",
              "type": "string"
            },
            {
              "value": "select-button",
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "inverted",
          "type": "boolean",
          "mutable": false,
          "attr": "inverted",
          "reflectToAttr": false,
          "docs": "If `true`, the control works on dark background.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "isEmpty",
          "type": "boolean",
          "mutable": false,
          "attr": "is-empty",
          "reflectToAttr": false,
          "docs": "If `true` the radio has no label",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "name",
          "type": "string",
          "mutable": false,
          "attr": "name",
          "reflectToAttr": false,
          "docs": "The name of the control, which is submitted with the form data.",
          "docsTags": [],
          "default": "this.inputId",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "value",
          "type": "string",
          "mutable": false,
          "attr": "value",
          "reflectToAttr": false,
          "docs": "The value of the control.",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [
        {
          "name": "setFocus",
          "returns": {
            "type": "Promise<void>",
            "docs": ""
          },
          "signature": "setFocus() => Promise<void>",
          "parameters": [],
          "docs": "Sets the focus on the input element.",
          "docsTags": []
        }
      ],
      "events": [
        {
          "event": "balBlur",
          "detail": "FocusEvent",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Emitted when the toggle loses focus.",
          "docsTags": []
        },
        {
          "event": "balFocus",
          "detail": "FocusEvent",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Emitted when the toggle has focus.",
          "docsTags": []
        }
      ],
      "listeners": [
        {
          "event": "click",
          "target": "document",
          "capture": true,
          "passive": false
        }
      ],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [
        "bal-text"
      ],
      "dependencyGraph": {
        "bal-radio": [
          "bal-text"
        ]
      },
      "parent": null,
      "isChild": false,
      "childComponents": [
        "bal-radio-group"
      ],
      "examples": "<!DOCTYPE html>\n<html dir=\"ltr\" lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, minimum-scale=1.0, maximum-scale=5.0\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n    <link rel=\"stylesheet\" href=\"/build/design-system-components.css\" />\n    <script type=\"module\" src=\"/build/design-system-components.esm.js\"></script>\n    <script nomodule src=\"/build/design-system-components.js\"></script>\n  </head>\n  <body class=\"bal-app\">\n    <div class=\"container\">\n      <h2 class=\"title is-size-2\">Basic</h2>\n      <section>\n        <bal-radio-group value=\"2\" id=\"radio-example\" data-test-id=\"radio\">\n          <bal-radio name=\"radio-example\" value=\"1\">Label 1</bal-radio>\n          <bal-radio name=\"radio-example\" value=\"2\">Label 2</bal-radio>\n          <bal-radio name=\"radio-example\" value=\"3\">Label 3</bal-radio>\n          <bal-radio name=\"radio-example\" value=\"4\" disabled>Label Disabled</bal-radio>\n        </bal-radio-group>\n        <p class=\"help\" id=\"radio-example-result\">2</p>\n        <bal-button id=\"radio-example-action\">Go to 3</bal-button>\n      </section>\n      <script>\n        var radioGroup = document.getElementById('radio-example')\n        var radioResult = document.getElementById('radio-example-result')\n        var radioAction = document.getElementById('radio-example-action')\n        radioGroup.addEventListener('balChange', function (event) {\n          radioResult.innerHTML = event.detail\n        })\n        radioAction.addEventListener('click', function () {\n          radioGroup.value = 3\n        })\n      </script>\n\n      <h2 class=\"title is-size-2\">Inverted</h2>\n      <section>\n        <div class=\"has-background-blue p-4\">\n          <bal-radio-group value=\"3\" inverted>\n            <bal-radio inverted name=\"radio-example-inverted\" value=\"1\">Label 1</bal-radio>\n            <bal-radio inverted name=\"radio-example-inverted\" value=\"2\">Label 2</bal-radio>\n            <bal-radio inverted name=\"radio-example-inverted\" value=\"3\">Label 3</bal-radio>\n            <bal-radio inverted name=\"radio-example-inverted\" value=\"4\" disabled>Label Disabled</bal-radio>\n          </bal-radio-group>\n        </div>\n      </section>\n\n      <h2 class=\"title is-size-2\">With Links</h2>\n      <section>\n        <bal-radio-group value=\"1\">\n          <bal-radio name=\"link-example\" value=\"1\">Random text with a <a class=\"is-link\" target=\"_blank\" href=\"http://baloise.ch\">Link</a> in it</bal-radio>\n          <bal-radio name=\"link-example\" value=\"2\">Label 2 without a link</bal-radio>\n        </bal-radio-group>\n      </section>\n\n      <h2 class=\"title is-size-2\">Radio Boxes</h2>\n      <section>\n        <bal-radio-group value=\"1\">\n          <div class=\"columns\" style=\"max-width: 400px\">\n            <div class=\"column\">\n              <div class=\"is-flex px-4 py-3 is-flex-direction-column is-justify-content-center is-align-items-center has-border-blue has-border-radius has-background-blue-light\">\n                <img src=\"https://www.baloise.ch/dam/jcr:5d0376a5-53ef-40b9-a1d9-c6d7d0c56bf7/Haushalt.svg\" />\n                <p class=\"has-text-blue mb-2\">Selected Label</p>\n                <bal-radio class=\"p-0\" name=\"box-example\" value=\"1\" is-empty></bal-radio>\n              </div>\n            </div>\n            <div class=\"column\">\n              <div class=\"is-flex px-4 py-3 is-flex-direction-column is-justify-content-center is-align-items-center has-border-blue has-border-radius\">\n                <img src=\"https://www.baloise.ch/dam/jcr:3635255e-33e7-4adf-8b3e-99954faf6036/reiseversicherung.svg\" />\n                <p class=\"has-text-blue mb-2\">Other Label</p>\n                <bal-radio class=\"p-0\" name=\"box-example\" value=\"2\" is-empty></bal-radio>\n              </div>\n            </div>\n          </div>\n        </bal-radio-group>\n      </section>\n\n      <h2 class=\"title is-size-2\">Radio List</h2>\n      <section>\n        <bal-radio-group value=\"1\">\n          <div class=\"is-flex px-4 py-3 mb-2 is-flex-direction-row is-justify-content-start is-align-items-center has-border-blue has-border-radius has-background-blue-light\">\n            <bal-radio name=\"list-example\" value=\"1\">\n              <span class=\"pl-2\"><b>Year 1</b> (CHF 66.00)</span>\n            </bal-radio>\n          </div>\n\n          <div class=\"is-flex px-4 py-3 mb-2 is-flex-direction-row is-justify-content-start is-align-items-center has-border-blue has-border-radius\">\n            <bal-radio name=\"list-example\" class=\"mr-3\" value=\"2\">\n              <div class=\"pl-2\"><b>Year 2</b> (CHF 86.00)</div>\n            </bal-radio>\n          </div>\n        </bal-radio-group>\n      </section>\n\n      <h2 class=\"title is-size-2\">Select Button</h2>\n      <section>\n        <bal-radio-group value=\"1\" interface=\"select-button\" data-test-id=\"select-button\">\n          <bal-radio name=\"select-button-example\" value=\"1\">Label 1</bal-radio>\n          <bal-radio name=\"select-button-example\" value=\"2\">Label 2</bal-radio>\n          <bal-radio name=\"select-button-example\" value=\"3\" disabled>Label Disabled</bal-radio>\n        </bal-radio-group>\n      </section>\n\n      <h3 class=\"title is-size-3\">Inverted</h3>\n      <section>\n        <div class=\"has-background-blue p-4\">\n          <bal-radio-group value=\"yes\" interface=\"select-button\" inverted>\n            <bal-radio name=\"select-button-example-2\" value=\"yes\">Yes</bal-radio>\n            <bal-radio name=\"select-button-example-2\" value=\"no\">No</bal-radio>\n          </bal-radio-group>\n        </div>\n      </section>\n    </div>\n  </body>\n</html>\n"
    },
    {
      "filePath": "./src/components/bal-radio-group/bal-radio-group.tsx",
      "encapsulation": "scoped",
      "tag": "bal-radio-group",
      "readme": "\n# Radio Group\n",
      "docs": "<!-- docs:child of bal-radio -->",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "disabled",
          "type": "boolean | undefined",
          "mutable": false,
          "attr": "disabled",
          "reflectToAttr": false,
          "docs": "If `true`, the user cannot interact with the radios.",
          "docsTags": [],
          "default": "undefined",
          "values": [
            {
              "type": "boolean"
            },
            {
              "type": "undefined"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "interface",
          "type": "\"radio\" | \"select-button\"",
          "mutable": false,
          "attr": "interface",
          "reflectToAttr": false,
          "docs": "Defines the layout of the radio button",
          "docsTags": [],
          "default": "'radio'",
          "values": [
            {
              "value": "radio",
              "type": "string"
            },
            {
              "value": "select-button",
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "inverted",
          "type": "boolean",
          "mutable": false,
          "attr": "inverted",
          "reflectToAttr": false,
          "docs": "If `true` the component can be used on dark background",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "name",
          "type": "string",
          "mutable": false,
          "attr": "name",
          "reflectToAttr": false,
          "docs": "The name of the control, which is submitted with the form data.",
          "docsTags": [],
          "default": "this.inputId",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "value",
          "type": "string",
          "mutable": true,
          "attr": "value",
          "reflectToAttr": false,
          "docs": "The value of the control.",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [
        {
          "event": "balChange",
          "detail": "string",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Emitted when the checked property has changed.",
          "docsTags": []
        }
      ],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {},
      "parent": "bal-radio",
      "isChild": true,
      "childComponents": [],
      "examples": null
    },
    {
      "filePath": "./src/components/bal-select/bal-select.tsx",
      "encapsulation": "scoped",
      "tag": "bal-select",
      "readme": "# Select <Badge text=\"Two-way binding\"/>\n\nFor creating a list of options use the `BalOptionValue` interface and the functions `NewBalOptionValue` or `NewBalSingleOptionValue`.\n\n```typescript\nimport { BalOptionValue, NewBalOptionValue } from '@baloise/design-system-components'\n\nexport interface BalOptionValue<T> {\n  value: string\n  label: string\n  disabled?: boolean // default false\n  data?: T\n}\n\nconst option = NewBalOptionValue('value', 'label')\n```\n",
      "docs": "For creating a list of options use the `BalOptionValue` interface and the functions `NewBalOptionValue` or `NewBalSingleOptionValue`.\n\n```typescript\nimport { BalOptionValue, NewBalOptionValue } from '@baloise/design-system-components'\n\nexport interface BalOptionValue<T> {\n  value: string\n  label: string\n  disabled?: boolean // default false\n  data?: T\n}\n\nconst option = NewBalOptionValue('value', 'label')\n```",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "balTabindex",
          "type": "number",
          "mutable": false,
          "attr": "bal-tabindex",
          "reflectToAttr": false,
          "docs": "The tabindex of the control.",
          "docsTags": [],
          "default": "0",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "disabled",
          "type": "boolean",
          "mutable": false,
          "attr": "disabled",
          "reflectToAttr": false,
          "docs": "If `true` the component is diabled.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "expanded",
          "type": "boolean",
          "mutable": false,
          "attr": "expanded",
          "reflectToAttr": false,
          "docs": "If `true` the component uses the whole width.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "hasMovement",
          "type": "boolean",
          "mutable": false,
          "attr": "has-movement",
          "reflectToAttr": false,
          "docs": "Enables the slide in animation for the option items.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "inverted",
          "type": "boolean",
          "mutable": false,
          "attr": "inverted",
          "reflectToAttr": false,
          "docs": "Set this to `true` when the component is placed on a dark background.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "loading",
          "type": "boolean",
          "mutable": false,
          "attr": "loading",
          "reflectToAttr": false,
          "docs": "Defines if the select is in a loading state.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "multiple",
          "type": "boolean",
          "mutable": false,
          "attr": "multiple",
          "reflectToAttr": false,
          "docs": "If `true` multiple option can be selected",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "name",
          "type": "string",
          "mutable": false,
          "attr": "name",
          "reflectToAttr": false,
          "docs": "The name of the control, which is submitted with the form data.",
          "docsTags": [],
          "default": "this.inputId",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "noBorder",
          "type": "boolean",
          "mutable": false,
          "attr": "no-border",
          "reflectToAttr": false,
          "docs": "Removes the border of the input.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "noDataLabel",
          "type": "string | undefined",
          "mutable": false,
          "attr": "no-data-label",
          "reflectToAttr": false,
          "docs": "This label is shown if typeahead is active and all the options are filtered out.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            },
            {
              "type": "undefined"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "placeholder",
          "type": "string | undefined",
          "mutable": false,
          "attr": "placeholder",
          "reflectToAttr": false,
          "docs": "The text to display when the select is empty.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            },
            {
              "type": "undefined"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "scrollable",
          "type": "number",
          "mutable": false,
          "attr": "scrollable",
          "reflectToAttr": false,
          "docs": "Defines the height of the dropdown list.",
          "docsTags": [],
          "default": "250",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "typeahead",
          "type": "boolean",
          "mutable": false,
          "attr": "typeahead",
          "reflectToAttr": false,
          "docs": "If `true` the user can search by typing into the input field.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "value",
          "type": "string | string[] | undefined",
          "mutable": true,
          "attr": "value",
          "reflectToAttr": false,
          "docs": "Selected option values. Could also be passed as a string, which gets transformed.",
          "docsTags": [],
          "default": "[]",
          "values": [
            {
              "type": "string"
            },
            {
              "type": "string[]"
            },
            {
              "type": "undefined"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [
        {
          "name": "cancel",
          "returns": {
            "type": "Promise<void>",
            "docs": ""
          },
          "signature": "cancel() => Promise<void>",
          "parameters": [],
          "docs": "Cancel the dropdown",
          "docsTags": []
        },
        {
          "name": "clear",
          "returns": {
            "type": "Promise<void>",
            "docs": ""
          },
          "signature": "clear() => Promise<void>",
          "parameters": [],
          "docs": "Sets the value to `[]`, the input value to ´''´ and the focus index to ´0´.",
          "docsTags": []
        },
        {
          "name": "close",
          "returns": {
            "type": "Promise<void>",
            "docs": ""
          },
          "signature": "close() => Promise<void>",
          "parameters": [],
          "docs": "Closes the dropdown",
          "docsTags": []
        },
        {
          "name": "getValue",
          "returns": {
            "type": "Promise<string[] | undefined>",
            "docs": ""
          },
          "signature": "getValue() => Promise<string[] | undefined>",
          "parameters": [],
          "docs": "Sets the focus on the input element",
          "docsTags": []
        },
        {
          "name": "open",
          "returns": {
            "type": "Promise<void>",
            "docs": ""
          },
          "signature": "open() => Promise<void>",
          "parameters": [],
          "docs": "Opens the dropdown",
          "docsTags": []
        },
        {
          "name": "select",
          "returns": {
            "type": "Promise<void>",
            "docs": ""
          },
          "signature": "select(value: string) => Promise<void>",
          "parameters": [],
          "docs": "Select option by passed value",
          "docsTags": []
        },
        {
          "name": "setFocus",
          "returns": {
            "type": "Promise<void>",
            "docs": ""
          },
          "signature": "setFocus() => Promise<void>",
          "parameters": [],
          "docs": "Sets the focus on the input element",
          "docsTags": []
        }
      ],
      "events": [
        {
          "event": "balBlur",
          "detail": "FocusEvent",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Emitted when the input loses focus.",
          "docsTags": []
        },
        {
          "event": "balCancel",
          "detail": "KeyboardEvent",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Emitted when the user cancels the input.",
          "docsTags": []
        },
        {
          "event": "balChange",
          "detail": "string | string[] | undefined",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Emitted when a option got selected.",
          "docsTags": []
        },
        {
          "event": "balClick",
          "detail": "MouseEvent",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Emitted when the input got clicked.",
          "docsTags": []
        },
        {
          "event": "balFocus",
          "detail": "FocusEvent",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Emitted when the input has focus.",
          "docsTags": []
        },
        {
          "event": "balInput",
          "detail": "string",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Emitted when a keyboard input occurred.",
          "docsTags": []
        },
        {
          "event": "balKeyPress",
          "detail": "KeyboardEvent",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Emitted when the input has focus and key from the keyboard go hit.",
          "docsTags": []
        }
      ],
      "listeners": [
        {
          "event": "click",
          "target": "document",
          "capture": true,
          "passive": false
        },
        {
          "event": "keydown",
          "target": "window",
          "capture": false,
          "passive": false
        }
      ],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [
        "bal-tag",
        "bal-dropdown",
        "bal-dropdown-trigger",
        "bal-icon",
        "bal-dropdown-menu",
        "bal-checkbox"
      ],
      "dependencyGraph": {
        "bal-select": [
          "bal-tag",
          "bal-dropdown",
          "bal-dropdown-trigger",
          "bal-icon",
          "bal-dropdown-menu",
          "bal-checkbox"
        ],
        "bal-tag": [
          "bal-text"
        ],
        "bal-checkbox": [
          "bal-text"
        ]
      },
      "parent": null,
      "isChild": false,
      "childComponents": [
        "bal-select-option"
      ],
      "examples": "<!DOCTYPE html>\n<html dir=\"ltr\" lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, minimum-scale=1.0, maximum-scale=5.0\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n    <link rel=\"stylesheet\" href=\"/build/design-system-components.css\" />\n    <script type=\"module\" src=\"/build/design-system-components.esm.js\"></script>\n    <script nomodule src=\"/build/design-system-components.js\"></script>\n  </head>\n  <body class=\"bal-app\">\n    <div class=\"container\">\n      <h2 class=\"title is-size-2\">Basic</h2>\n      <section>\n        <bal-select has-movement expanded id=\"bal-select-year\" placeholder=\"Try finding a year\" data-test-id=\"select\">\n          <bal-select-option value=\"v1995\" label=\"1995\">1995</bal-select-option>\n          <bal-select-option value=\"v1996\" label=\"1996\">1996</bal-select-option>\n          <bal-select-option value=\"v1997\" label=\"1997\">1997</bal-select-option>\n          <bal-select-option value=\"v1998\" label=\"1998\">1998</bal-select-option>\n          <bal-select-option value=\"v1999\" label=\"1999\">1999</bal-select-option>\n          <bal-select-option value=\"v2000\" label=\"2000\">2000</bal-select-option>\n        </bal-select>\n        <br />\n        <bal-select expanded disabled data-test-id=\"select-disabled\" placeholder=\"Disabled\"></bal-select>\n        <br />\n        <p id=\"bal-select-year-preview\"></p>\n        <bal-button color=\"success\" id=\"bal-select-year-add\">Add Option</bal-button>\n        <bal-button color=\"danger\" id=\"bal-select-year-remove\">Remove Last Option</bal-button>\n      </section>\n      <script>\n        var year = 2001\n        var selectYear = document.getElementById('bal-select-year')\n        var selectYearPreview = document.getElementById('bal-select-year-preview')\n        var btnYearAdd = document.getElementById('bal-select-year-add')\n        var btnYearRemove = document.getElementById('bal-select-year-remove')\n\n        btnYearAdd.addEventListener('click', function () {\n          let element = document.createElement('bal-select-option')\n          element.innerHTML = year\n          element.setAttribute('label', year)\n          element.setAttribute('value', `v${year}`)\n          selectYear.appendChild(element)\n          year = year + 1\n        })\n\n        btnYearRemove.addEventListener('click', function () {\n          year = year - 1\n          let element = document.querySelector(`bal-select-option[label=\"${year}\"]`)\n          if (element) {\n            element.remove()\n          }\n        })\n\n        selectYear.addEventListener('balChange', function (event) {\n          selectYearPreview.innerHTML = JSON.stringify(event.detail)\n        })\n      </script>\n\n      <h2>Typeahead</h2>\n      <section>\n        <div class=\"has-background-blue p-4\">\n          <bal-select id=\"bal-select-typeahaed\" typeahead inverted expanded placeholder=\"Try finding your hero\" no-data-label=\"No option available\" data-test-id=\"typeahead\">\n            <bal-select-option value=\"BlackWidow\" label=\"Black Widow\">\n              <b style=\"display: block\">Black Widow</b>\n              <span>S.H.I.E.L.D.</span>\n            </bal-select-option>\n            <bal-select-option value=\"BlackPanter\" label=\"Black Panter\">\n              <b style=\"display: block\">Black Panter</b>\n              <span>Wakanda</span>\n            </bal-select-option>\n            <bal-select-option value=\"IronMan\" label=\"Iron Man\">\n              <b style=\"display: block\">Iron Man</b>\n              <span>Malibu</span>\n            </bal-select-option>\n            <bal-select-option value=\"SpiderMan\" label=\"Spider Man\">\n              <b style=\"display: block\">Spider Man</b>\n              <span>Queens</span>\n            </bal-select-option>\n            <bal-select-option value=\"CaptainAmerica\" label=\"Captain America\">\n              <b style=\"display: block\">Captain America</b>\n              <span>Broklyn</span>\n            </bal-select-option>\n            <bal-select-option value=\"Thor\" label=\"Thor God of Thunder\">\n              <b style=\"display: block\">Thor God of Thunder</b>\n              <span>Asgard</span>\n            </bal-select-option>\n          </bal-select>\n          <br />\n          <p id=\"bal-select-typeahead-preview\" class=\"has-text-white\"></p>\n          <bal-button id=\"bal-select-typeahead-trigger\" inverted color=\"primary\">Select Spider Man</bal-button>\n          <bal-button id=\"bal-select-typeahead-clear\" inverted outlined color=\"info\">Clear & Focus</bal-button>\n        </div>\n      </section>\n      <script>\n        var selectTypeahead = document.getElementById('bal-select-typeahaed')\n        var selectTypeaheadPreview = document.getElementById('bal-select-typeahead-preview')\n        var selectTypeaheadTrigger = document.getElementById('bal-select-typeahead-trigger')\n        var selectTypeaheadClear = document.getElementById('bal-select-typeahead-clear')\n        selectTypeahead.addEventListener('balChange', function (event) {\n          selectTypeaheadPreview.innerHTML = JSON.stringify(event.detail)\n        })\n        selectTypeaheadTrigger.addEventListener('click', function () {\n          selectTypeahead.value = 'SpiderMan'\n        })\n        selectTypeaheadClear.addEventListener('click', function () {\n          selectTypeahead.clear(true)\n          selectTypeahead.setFocus()\n        })\n        selectTypeahead.value = 'CaptainAmerica'\n        selectTypeaheadPreview.innerHTML = JSON.stringify(selectTypeahead.value)\n      </script>\n\n      <h2>Multi-Select</h2>\n      <section>\n        <bal-select multiple expanded placeholder=\"Try finding your hero\" data-test-id=\"multiple\">\n          <bal-select-option checkbox value=\"BlackWidow\" label=\"Black Widow\">\n            <b style=\"display: block\">Black Widow</b>\n            <span>S.H.I.E.L.D.</span>\n          </bal-select-option>\n          <bal-select-option checkbox value=\"BlackPanter\" label=\"Black Panter\">\n            <b style=\"display: block\">Black Panter</b>\n            <span>Wakanda</span>\n          </bal-select-option>\n          <bal-select-option checkbox value=\"IronMan\" label=\"Iron Man\">\n            <b style=\"display: block\">Iron Man</b>\n            <span>Malibu</span>\n          </bal-select-option>\n          <bal-select-option checkbox value=\"SpiderMan\" label=\"Spider Man\">\n            <b style=\"display: block\">Spider Man</b>\n            <span>Queens</span>\n          </bal-select-option>\n          <bal-select-option checkbox value=\"CaptainAmerica\" label=\"Captain America\">\n            <b style=\"display: block\">Captain America</b>\n            <span>Broklyn</span>\n          </bal-select-option>\n          <bal-select-option checkbox value=\"Thor\" label=\"Thor God of Thunder\">\n            <b style=\"display: block\">Thor God of Thunder</b>\n            <span>Asgard</span>\n          </bal-select-option>\n        </bal-select>\n      </section>\n\n      <h2>Multi-Select with typeahead</h2>\n      <section>\n        <bal-select multiple typeahead expanded placeholder=\"Try finding your hero\" no-data-label=\"No option available\">\n          <bal-select-option checkbox value=\"BlackWidow\" label=\"Black Widow\">\n            <b style=\"display: block\">Black Widow</b>\n            <span>S.H.I.E.L.D.</span>\n          </bal-select-option>\n          <bal-select-option checkbox value=\"BlackPanter\" label=\"Black Panter\">\n            <b style=\"display: block\">Black Panter</b>\n            <span>Wakanda</span>\n          </bal-select-option>\n          <bal-select-option checkbox value=\"IronMan\" label=\"Iron Man\">\n            <b style=\"display: block\">Iron Man</b>\n            <span>Malibu</span>\n          </bal-select-option>\n          <bal-select-option checkbox value=\"SpiderMan\" label=\"Spider Man\">\n            <b style=\"display: block\">Spider Man</b>\n            <span>Queens</span>\n          </bal-select-option>\n          <bal-select-option checkbox value=\"CaptainAmerica\" label=\"Captain America\">\n            <b style=\"display: block\">Captain America</b>\n            <span>Broklyn</span>\n          </bal-select-option>\n          <bal-select-option checkbox value=\"Thor\" label=\"Thor God of Thunder\">\n            <b style=\"display: block\">Thor God of Thunder</b>\n            <span>Asgard</span>\n          </bal-select-option>\n        </bal-select>\n      </section>\n\n      <h2>Remote Typeahead</h2>\n      <section>\n        <bal-field id=\"bal-field-remote\" expanded>\n          <bal-field-label>Canton</bal-field-label>\n          <bal-field-control>\n            <bal-select id=\"bal-select-remote\" typeahead expanded placeholder=\"Try finding your canton\"></bal-select>\n          </bal-field-control>\n          <bal-field-message id=\"bal-select-remote-preview\"></bal-field-message>\n        </bal-field>\n      </section>\n      <script>\n        var fieldRemote = document.getElementById('bal-field-remote')\n        var selectRemote = document.getElementById('bal-select-remote')\n        var selectRemotePreview = document.getElementById('bal-select-remote-preview')\n\n        var cantons = [\n          'Zürich',\n          'Bern/Berne',\n          'Luzern',\n          'Uri',\n          'Schwyz',\n          'Unterwalden',\n          'Glarus',\n          'Zug',\n          'Freiburg/Fribourg',\n          'Solothurn',\n          'Basel-Stadt',\n          'Basel-Land',\n          'Schaffhausen',\n          'Appenzell',\n          'SanktGallen',\n          'Graubünden',\n          'Aargau',\n          'Thurgau',\n          'Ticino',\n          'Vaud',\n          'Wallis',\n          'Neuchâtel',\n          'Genève',\n          'Jura',\n        ]\n\n        selectRemote.addEventListener('balChange', function (event) {\n          selectRemotePreview.innerHTML = JSON.stringify(event.detail)\n        })\n\n        function querySelections(value) {\n          fieldRemote.loading = true\n          selectRemote.loading = true\n          // Simulated ajax query\n          setTimeout(() => {\n            var options = selectRemote.querySelectorAll('bal-select-option')\n            if (options) {\n              options.forEach(o => o.remove())\n            }\n\n            var filteredResults = cantons.filter(e => {\n              return (e || '').toLowerCase().indexOf((value || '').toLowerCase()) > -1\n            })\n\n            for (let index = 0; index < filteredResults.length; index++) {\n              const option = filteredResults[index]\n              let element = document.createElement('bal-select-option')\n              element.innerHTML = option\n              element.setAttribute('label', option)\n              element.setAttribute('value', option)\n              selectRemote.appendChild(element)\n            }\n\n            fieldRemote.loading = false\n            selectRemote.loading = false\n          }, 1000)\n        }\n\n        selectRemote.addEventListener('balInput', function (event) {\n          querySelections(event.detail)\n        })\n      </script>\n    </div>\n  </body>\n</html>\n"
    },
    {
      "filePath": "./src/components/bal-select-option/bal-select-option.tsx",
      "encapsulation": "none",
      "tag": "bal-select-option",
      "readme": "\n# Select Option\n",
      "docs": "<!-- docs:child of bal-select -->",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "disabled",
          "type": "boolean",
          "mutable": false,
          "attr": "disabled",
          "reflectToAttr": false,
          "docs": "If `true`, the user cannot interact with the option.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "label",
          "type": "string | undefined",
          "mutable": false,
          "attr": "label",
          "reflectToAttr": false,
          "docs": "Label will be shown in the input element when it got selected",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            },
            {
              "type": "undefined"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "value",
          "type": "string | undefined",
          "mutable": false,
          "attr": "value",
          "reflectToAttr": false,
          "docs": "The value of the select option. This value will be returned by the parent `<bal-select>` element.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            },
            {
              "type": "undefined"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {},
      "parent": "bal-select",
      "isChild": true,
      "childComponents": [],
      "examples": null
    },
    {
      "filePath": "./src/components/bal-sheet/bal-sheet.tsx",
      "encapsulation": "none",
      "tag": "bal-sheet",
      "readme": "# Sheet\n",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {},
      "parent": null,
      "isChild": false,
      "childComponents": [],
      "examples": "<!DOCTYPE html>\n<html dir=\"ltr\" lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, minimum-scale=1.0, maximum-scale=5.0\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n    <link rel=\"stylesheet\" href=\"/build/design-system-components.css\" />\n    <script type=\"module\" src=\"/build/design-system-components.esm.js\"></script>\n    <script nomodule src=\"/build/design-system-components.js\"></script>\n  </head>\n  <body class=\"bal-app\">\n    <div class=\"container\">\n      <h2 class=\"title is-size-2\">Basic</h2>\n      <section>\n        <bal-sheet>\n          <div class=\"is-hidden-desktop\">\n            <bal-button expanded>Continue with 1'234 CHF</bal-button>\n            <bal-button expanded color=\"link\">Back</bal-button>\n          </div>\n          <div class=\"is-hidden-touch\">\n            <div class=\"columns\">\n              <div class=\"column is-flex is-align-items-center is-justify-content-center\">\n                <h2 class=\"title is-size-2 has-no-margin has-text-right\">1'234 CHF</h2>\n              </div>\n              <div class=\"column is-flex is-align-items-center\">\n                <p class=\"has-no-margin has-text-blue-light-text\">Lorem, ipsum dolor sit amet consectetur adipisicing elit.</p>\n              </div>\n              <div class=\"column is-2 is-flex is-align-items-center\">\n                <bal-button expanded color=\"link\">Back</bal-button>\n              </div>\n              <div class=\"column is-2 is-flex is-align-items-center\">\n                <bal-button expanded>Next</bal-button>\n              </div>\n            </div>\n          </div>\n        </bal-sheet>\n      </section>\n    </div>\n  </body>\n</html>\n"
    },
    {
      "filePath": "./src/components/bal-slider/bal-slider.tsx",
      "encapsulation": "scoped",
      "tag": "bal-slider",
      "readme": "# Slider\n",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "balTabindex",
          "type": "number",
          "mutable": false,
          "attr": "bal-tabindex",
          "reflectToAttr": false,
          "docs": "The tabindex of the control.",
          "docsTags": [],
          "default": "0",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "debounce",
          "type": "number",
          "mutable": false,
          "attr": "debounce",
          "reflectToAttr": false,
          "docs": "Set the amount of time, in milliseconds, to wait to trigger the `balChange` event after each keystroke. This also impacts form bindings such as `ngModel` or `v-model`.",
          "docsTags": [],
          "default": "0",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "disabled",
          "type": "boolean",
          "mutable": false,
          "attr": "disabled",
          "reflectToAttr": false,
          "docs": "If `true` the input is disabled",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "hasTicks",
          "type": "boolean",
          "mutable": false,
          "attr": "has-ticks",
          "reflectToAttr": false,
          "docs": "If `true`, small ticks for the steps are shown.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "max",
          "type": "number",
          "mutable": false,
          "attr": "max",
          "reflectToAttr": false,
          "docs": "Max value of the model.",
          "docsTags": [],
          "default": "100",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "min",
          "type": "number",
          "mutable": false,
          "attr": "min",
          "reflectToAttr": false,
          "docs": "Min value of the model.",
          "docsTags": [],
          "default": "0",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "name",
          "type": "string",
          "mutable": false,
          "attr": "name",
          "reflectToAttr": false,
          "docs": "The name of the control, which is submitted with the form data.",
          "docsTags": [],
          "default": "this.inputId",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "readonly",
          "type": "boolean",
          "mutable": false,
          "attr": "readonly",
          "reflectToAttr": false,
          "docs": "If `true`, the user cannot modify the value.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "required",
          "type": "boolean",
          "mutable": false,
          "attr": "required",
          "reflectToAttr": false,
          "docs": "If `true`, the user must fill in a value before submitting a form.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "step",
          "type": "number",
          "mutable": false,
          "attr": "step",
          "reflectToAttr": false,
          "docs": "The step size. 0 means no steps.",
          "docsTags": [],
          "default": "0",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "value",
          "type": "number | string | undefined",
          "mutable": true,
          "attr": "value",
          "reflectToAttr": false,
          "docs": "The value of the input.",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "number"
            },
            {
              "type": "string"
            },
            {
              "type": "undefined"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [
        {
          "name": "getInputElement",
          "returns": {
            "type": "Promise<HTMLInputElement>",
            "docs": ""
          },
          "signature": "getInputElement() => Promise<HTMLInputElement>",
          "parameters": [],
          "docs": "Returns the native `<input>` element used under the hood.",
          "docsTags": []
        },
        {
          "name": "setFocus",
          "returns": {
            "type": "Promise<void>",
            "docs": ""
          },
          "signature": "setFocus() => Promise<void>",
          "parameters": [],
          "docs": "Sets focus on the native `input` in `bal-input`. Use this method instead of the global\n`input.focus()`.",
          "docsTags": []
        }
      ],
      "events": [
        {
          "event": "balBlur",
          "detail": "FocusEvent",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Emitted when a keyboard input occurred.",
          "docsTags": []
        },
        {
          "event": "balChange",
          "detail": "null | number | string",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Emitted when the input value has changed.",
          "docsTags": []
        },
        {
          "event": "balClick",
          "detail": "MouseEvent",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Emitted when the input has clicked.",
          "docsTags": []
        },
        {
          "event": "balFocus",
          "detail": "FocusEvent",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Emitted when the input has focus.",
          "docsTags": []
        },
        {
          "event": "balInput",
          "detail": "null | number | string",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Emitted when a keyboard input occurred.",
          "docsTags": []
        },
        {
          "event": "balKeyPress",
          "detail": "KeyboardEvent",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Emitted when a keyboard key has pressed.",
          "docsTags": []
        }
      ],
      "listeners": [
        {
          "event": "click",
          "target": "document",
          "capture": true,
          "passive": false
        }
      ],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {},
      "parent": null,
      "isChild": false,
      "childComponents": [],
      "examples": "<!DOCTYPE html>\n<html dir=\"ltr\" lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, minimum-scale=1.0, maximum-scale=5.0\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n    <link rel=\"stylesheet\" href=\"/build/design-system-components.css\" />\n    <script type=\"module\" src=\"/build/design-system-components.esm.js\"></script>\n    <script nomodule src=\"/build/design-system-components.js\"></script>\n  </head>\n  <body class=\"bal-app\">\n    <div class=\"container\">\n      <h2 class=\"title is-size-2\">Basic</h2>\n      <section>\n        <bal-slider value=\"20\" data-test-id=\"slider\"></bal-slider>\n        <bal-slider disabled value=\"30\" data-test-id=\"slider-disabled\"></bal-slider>\n      </section>\n\n      <h2 class=\"title is-size-2\">With Steps</h2>\n      <section>\n        <bal-slider has-ticks step=\"20\" min=\"0\" max=\"100\" value=\"40\"></bal-slider>\n      </section>\n\n      <h2 class=\"title is-size-2\">With Field</h2>\n      <section>\n        <bal-field expanded>\n          <bal-field-label expanded>\n            <span class=\"is-flex-grow-1\">Employees</span>\n            <span class=\"is-flex-grow-1 has-text-right\">Pensioners</span>\n          </bal-field-label>\n          <bal-field-control>\n            <bal-slider step=\"20\" min=\"0\" max=\"100\" value=\"40\"></bal-slider>\n          </bal-field-control>\n          <bal-field-message expanded>\n            <span class=\"is-flex-grow-1\">40%</span>\n            <span class=\"is-flex-grow-1 has-text-right\">60%</span>\n          </bal-field-message>\n        </bal-field>\n      </section>\n    </div>\n  </body>\n</html>\n"
    },
    {
      "filePath": "./src/components/bal-snackbar/bal-snackbar.tsx",
      "encapsulation": "scoped",
      "tag": "bal-snackbar",
      "readme": "# Snackbar\n",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "action",
          "type": "string",
          "mutable": false,
          "attr": "action",
          "reflectToAttr": false,
          "docs": "Label text for the action button",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "color",
          "type": "\"\" | \"danger\" | \"info\" | \"primary\" | \"success\" | \"warning\"",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "The theme type of the snackbar. Given by bulma our css framework.",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "\"\""
            },
            {
              "value": "danger",
              "type": "string"
            },
            {
              "value": "info",
              "type": "string"
            },
            {
              "value": "primary",
              "type": "string"
            },
            {
              "value": "success",
              "type": "string"
            },
            {
              "value": "warning",
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "duration",
          "type": "number",
          "mutable": false,
          "attr": "duration",
          "reflectToAttr": false,
          "docs": "The duration of the snackbar",
          "docsTags": [],
          "default": "0",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "icon",
          "type": "string",
          "mutable": false,
          "attr": "icon",
          "reflectToAttr": false,
          "docs": "The icon of the snackbar header",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "message",
          "type": "string",
          "mutable": false,
          "attr": "message",
          "reflectToAttr": false,
          "docs": "The message of the snackbar",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "subject",
          "type": "string",
          "mutable": false,
          "attr": "subject",
          "reflectToAttr": false,
          "docs": "The subject of the snackbar header",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [
        {
          "name": "close",
          "returns": {
            "type": "Promise<void>",
            "docs": ""
          },
          "signature": "close() => Promise<void>",
          "parameters": [],
          "docs": "Closes this snackbar",
          "docsTags": []
        },
        {
          "name": "closeIn",
          "returns": {
            "type": "Promise<void>",
            "docs": ""
          },
          "signature": "closeIn(duration: number) => Promise<void>",
          "parameters": [],
          "docs": "Closes the snackbar after the given duration in ms",
          "docsTags": []
        }
      ],
      "events": [
        {
          "event": "balAction",
          "detail": "string",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Emitted when the action button is clicked",
          "docsTags": []
        },
        {
          "event": "balClose",
          "detail": "string",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Emitted when snackbar is closed",
          "docsTags": []
        }
      ],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [
        "bal-icon",
        "bal-heading",
        "bal-text",
        "bal-button"
      ],
      "dependencyGraph": {
        "bal-snackbar": [
          "bal-icon",
          "bal-heading",
          "bal-text",
          "bal-button"
        ],
        "bal-button": [
          "bal-spinner",
          "bal-icon",
          "bal-text"
        ]
      },
      "parent": null,
      "isChild": false,
      "childComponents": [],
      "examples": "<!DOCTYPE html>\n<html dir=\"ltr\" lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, minimum-scale=1.0, maximum-scale=5.0\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n    <link rel=\"stylesheet\" href=\"/build/design-system-components.css\" />\n    <script type=\"module\" src=\"/build/design-system-components.esm.js\"></script>\n    <script nomodule src=\"/build/design-system-components.js\"></script>\n    <script type=\"module\">\n      import { balSnackbarController } from '/build/index.esm.js'\n\n      window.balSnackbarController = balSnackbarController\n    </script>\n  </head>\n  <body class=\"bal-app\">\n    <div class=\"container\">\n      <h2 class=\"title is-size-2\">Basic</h2>\n      <section>\n        <bal-button id=\"snack-default\" color=\"success\" data-test-id=\"snack\">Show success Snack</bal-button>\n        <bal-button id=\"snack-warning\" color=\"warning\" data-test-id=\"snack-warning\">Show warning Snack</bal-button>\n        <bal-button id=\"snack-danger\" color=\"danger\">Show error Snack</bal-button>\n        <br />\n        <br />\n        <bal-button id=\"snackbar-clear-all\" color=\"info\" outlined>Clear all snackbars</bal-button>\n      </section>\n      <script>\n        document.getElementById('snack-default').onclick = function () {\n          balSnackbarController.create({\n            message: 'Hi I am a default Snack!',\n            subject: 'Subject',\n            color: 'success',\n            icon: 'info-circle',\n            duration: 1000,\n          })\n        }\n        document.getElementById('snack-warning').onclick = function () {\n          balSnackbarController.create({\n            message: 'Warning!',\n            color: 'warning',\n            subject: 'Subject',\n            icon: 'info-circle',\n          })\n        }\n        document.getElementById('snack-danger').onclick = function () {\n          const snack = balSnackbarController.create({\n            message: 'Danger zone!',\n            color: 'danger',\n            subject: 'Subject',\n            action: 'More',\n            icon: 'info-circle',\n            actionHandler: function () {\n              alert('Action was clicked')\n              snack.close()\n            },\n            closeHandler: function () {\n              alert('Snackbar closed')\n            },\n          })\n        }\n        document.getElementById('snackbar-clear-all').onclick = function () {\n          balSnackbarController.clearAll()\n        }\n      </script>\n\n      <h2 class=\"title is-size-2\">Colors</h2>\n      <section>\n        <bal-snackbar subject=\"Default\" icon=\"info-circle\" action=\"More\"> Lorem ipsum dolor sit amet, consectetur adipisicing elit. </bal-snackbar>\n        <bal-snackbar subject=\"Primary\" icon=\"info-circle\" color=\"primary\" action=\"More\"> Lorem ipsum dolor sit amet, consectetur adipisicing elit. </bal-snackbar>\n        <bal-snackbar subject=\"Info\" icon=\"info-circle\" color=\"info\" action=\"More\"> Lorem ipsum dolor sit amet, consectetur adipisicing elit. </bal-snackbar>\n        <bal-snackbar subject=\"Success\" icon=\"info-circle\" color=\"success\" action=\"More\"> Lorem ipsum dolor sit amet, consectetur adipisicing elit. </bal-snackbar>\n        <bal-snackbar subject=\"Warning\" icon=\"info-circle\" color=\"warning\" action=\"More\"> Lorem ipsum dolor sit amet, consectetur adipisicing elit. </bal-snackbar>\n        <bal-snackbar subject=\"Danger\" icon=\"info-circle\" color=\"danger\" action=\"More\"> Lorem ipsum dolor sit amet, consectetur adipisicing elit. </bal-snackbar>\n      </section>\n    </div>\n  </body>\n</html>\n"
    },
    {
      "filePath": "./src/components/bal-spinner/bal-spinner.tsx",
      "encapsulation": "scoped",
      "tag": "bal-spinner",
      "readme": "# Spinner\n",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "inverted",
          "type": "boolean",
          "mutable": false,
          "attr": "inverted",
          "reflectToAttr": false,
          "docs": "If `true` the component can be used on dark background",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "small",
          "type": "boolean",
          "mutable": false,
          "attr": "small",
          "reflectToAttr": false,
          "docs": "If `true` the component is smaller",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [
        "bal-button"
      ],
      "dependencies": [],
      "dependencyGraph": {
        "bal-button": [
          "bal-spinner"
        ]
      },
      "parent": null,
      "isChild": false,
      "childComponents": [],
      "examples": "<!DOCTYPE html>\n<html dir=\"ltr\" lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, minimum-scale=1.0, maximum-scale=5.0\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n    <link rel=\"stylesheet\" href=\"/build/design-system-components.css\" />\n    <script type=\"module\" src=\"/build/design-system-components.esm.js\"></script>\n    <script nomodule src=\"/build/design-system-components.js\"></script>\n  </head>\n  <body class=\"bal-app\">\n    <div class=\"container\">\n      <h2 class=\"title is-size-2\">Basic</h2>\n      <section>\n        <bal-spinner></bal-spinner>\n      </section>\n\n      <h2 class=\"title is-size-2\">Small</h2>\n      <section>\n        <bal-spinner small></bal-spinner>\n      </section>\n\n      <h2 class=\"title is-size-2\">Inverted</h2>\n      <section>\n        <div class=\"has-background-info p-4\">\n          <bal-spinner inverted></bal-spinner>\n        </div>\n      </section>\n    </div>\n  </body>\n</html>\n"
    },
    {
      "filePath": "./src/components/bal-tab-item/bal-tab-item.tsx",
      "encapsulation": "scoped",
      "tag": "bal-tab-item",
      "readme": "\n# Tab Item\n\n`bal-tab-item` is a child component of `bal-tabs`.\n",
      "docs": "<!-- docs:child of bal-tabs -->",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "active",
          "type": "boolean",
          "mutable": true,
          "attr": "active",
          "reflectToAttr": false,
          "docs": "Tell's if the tab is active and the content is visible.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "bubble",
          "type": "boolean",
          "mutable": false,
          "attr": "bubble",
          "reflectToAttr": false,
          "docs": "If `true` a small red bubble is added to the tab.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "disabled",
          "type": "boolean",
          "mutable": false,
          "attr": "disabled",
          "reflectToAttr": false,
          "docs": "If `true` the tab is disabled.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "done",
          "type": "boolean",
          "mutable": false,
          "attr": "done",
          "reflectToAttr": false,
          "docs": "If `true` the step is marked as done.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "failed",
          "type": "boolean",
          "mutable": false,
          "attr": "failed",
          "reflectToAttr": false,
          "docs": "If `true` the step is marked as failed.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "href",
          "type": "string",
          "mutable": false,
          "attr": "href",
          "reflectToAttr": false,
          "docs": "Link to path.",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "label",
          "type": "string",
          "mutable": false,
          "attr": "label",
          "reflectToAttr": false,
          "docs": "Label for the tab.",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "prevent",
          "type": "boolean",
          "mutable": false,
          "attr": "prevent",
          "reflectToAttr": false,
          "docs": "Tell's if the linking is done by a router.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "value",
          "type": "string",
          "mutable": false,
          "attr": "value",
          "reflectToAttr": false,
          "docs": "This is the key of the tab.",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [
        {
          "name": "getOptions",
          "returns": {
            "type": "Promise<BalTabOption>",
            "docs": ""
          },
          "signature": "getOptions() => Promise<BalTabOption>",
          "parameters": [],
          "docs": "Options of the tab like label, value etc.",
          "docsTags": []
        },
        {
          "name": "setActive",
          "returns": {
            "type": "Promise<void>",
            "docs": ""
          },
          "signature": "setActive(active: boolean) => Promise<void>",
          "parameters": [],
          "docs": "Sets the tab active.",
          "docsTags": []
        }
      ],
      "events": [
        {
          "event": "balNavigate",
          "detail": "MouseEvent",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Emitted when the link element has clicked",
          "docsTags": []
        }
      ],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {},
      "parent": "bal-tabs",
      "isChild": true,
      "childComponents": [],
      "examples": null
    },
    {
      "filePath": "./src/components/bal-table/bal-table.tsx",
      "encapsulation": "none",
      "tag": "bal-table",
      "readme": "# Table\n",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "expanded",
          "type": "boolean",
          "mutable": false,
          "attr": "expanded",
          "reflectToAttr": false,
          "docs": "If `true` the table has a full width",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {},
      "parent": null,
      "isChild": false,
      "childComponents": [],
      "examples": "<!DOCTYPE html>\n<html dir=\"ltr\" lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, minimum-scale=1.0, maximum-scale=5.0\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n    <link rel=\"stylesheet\" href=\"/build/design-system-components.css\" />\n    <script type=\"module\" src=\"/build/design-system-components.esm.js\"></script>\n    <script nomodule src=\"/build/design-system-components.js\"></script>\n    <script type=\"module\">\n      import { BalTableTagRenderer, BalTableTextRenderer, BalTableButtonRenderer } from 'https://unpkg.com/@baloise/design-system-components-table@1.11.0/dist/index.js'\n      window.BalTableTagRenderer = BalTableTagRenderer\n      window.BalTableTextRenderer = BalTableTextRenderer\n      window.BalTableButtonRenderer = BalTableButtonRenderer\n    </script>\n    <script src=\"https://unpkg.com/ag-grid-community/dist/ag-grid-community.noStyle\"></script>\n  </head>\n  <body class=\"bal-app\">\n    <div class=\"container\">\n      <h2 class=\"title is-size-2\">Basic</h2>\n      <p>The basic table is only css and html provided by the bulma framework.</p>\n      <p>[Go to the Bulma documentation](https://bulma.io/documentation/elements/table/)</p>\n      <section>\n        <bal-card>\n          <table class=\"table is-fullwidth is-striped is-hoverable p-0\">\n            <thead>\n              <th>Selected</th>\n              <th>Name</th>\n              <th>Status</th>\n              <th></th>\n            </thead>\n            <tbody>\n              <tr>\n                <td>\n                  <bal-checkbox id=\"checkbox1\"></bal-checkbox>\n                </td>\n                <td>Tony Stark</td>\n                <td><bal-tag size=\"small\" color=\"success\">Ready</bal-tag></td>\n                <td class=\"has-buttons\">\n                  <bal-button color=\"info\" size=\"small\" icon=\"edit\" square outlined></bal-button>\n                  <bal-button color=\"info\" size=\"small\" icon=\"trash\" square outlined></bal-button>\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <bal-checkbox id=\"checkbox2\"></bal-checkbox>\n                </td>\n                <td>Steve Rogers</td>\n                <td><bal-tag size=\"small\" color=\"danger\">Injured</bal-tag></td>\n                <td class=\"has-buttons\">\n                  <bal-button color=\"info\" size=\"small\" icon=\"edit\" square outlined></bal-button>\n                  <bal-button color=\"info\" size=\"small\" icon=\"trash\" square outlined></bal-button>\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <bal-checkbox id=\"checkbox3\"></bal-checkbox>\n                </td>\n                <td>Peter Parker</td>\n                <td><bal-tag size=\"small\" color=\"warning\">In school</bal-tag></td>\n                <td class=\"has-buttons\">\n                  <bal-button color=\"info\" size=\"small\" icon=\"edit\" square outlined></bal-button>\n                  <bal-button color=\"info\" size=\"small\" icon=\"trash\" square outlined></bal-button>\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <bal-checkbox id=\"checkbox4\"></bal-checkbox>\n                </td>\n                <td>John Doe</td>\n                <td><bal-tag size=\"small\">Unknown</bal-tag></td>\n                <td class=\"has-buttons\">\n                  <bal-button color=\"info\" size=\"small\" icon=\"edit\" square outlined></bal-button>\n                  <bal-button color=\"info\" size=\"small\" icon=\"trash\" square outlined></bal-button>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </bal-card>\n      </section>\n      <h2 class=\"title is-size-2\">Advanced with AG-Grid</h2>\n      <content slot-key=\"bal-table-ag-grid\" />\n      <section>\n        <bal-card>\n          <bal-table class=\"p-0\" id=\"myGrid\" style=\"height: 250px; width: 100%\"></bal-table>\n        </bal-card>\n      </section>\n      <script>\n        setTimeout(() => {\n          const columnDefs = [\n            { field: '', sortable: true, filter: true, checkboxSelection: true },\n            { field: 'number', sortable: true, filter: true },\n            {\n              field: 'textWithIcon',\n              sortable: true,\n              filter: true,\n              cellRenderer: BalTableTextRenderer({\n                icon: params => 'github',\n                iconColor: params => 'primary',\n              }),\n            },\n            {\n              field: 'tag',\n              sortable: true,\n              filter: true,\n              cellRenderer: BalTableTagRenderer({\n                color: params => (params.value === 'Invalid' ? 'danger' : 'success'),\n              }),\n            },\n            {\n              field: 'button',\n              sortable: true,\n              filter: true,\n              cellRenderer: BalTableButtonRenderer({\n                expanded: true,\n                icon: 'github',\n              }),\n            },\n          ]\n\n          // specify the data\n          const rowData = [\n            {\n              number: '1',\n              textWithIcon: 'Base Text',\n              tag: 'OK',\n              button: 'Action',\n            },\n            {\n              number: '2',\n              textWithIcon: 'Base Text',\n              tag: 'Invalid',\n              button: 'Action',\n            },\n            {\n              number: '3',\n              textWithIcon: 'Base Text',\n              tag: 'OK',\n              button: 'Action',\n            },\n          ]\n\n          function onFirstDataRendered(params) {\n            params.api.sizeColumnsToFit()\n          }\n\n          // let the grid know which columns and what data to use\n          const gridOptions = {\n            columnDefs: columnDefs,\n            rowData: rowData,\n            rowSelection: 'multiple',\n            onFirstDataRendered: onFirstDataRendered,\n            onGridReady: function (params) {\n              params.api.sizeColumnsToFit()\n\n              window.addEventListener('resize', function () {\n                setTimeout(function () {\n                  params.api.sizeColumnsToFit()\n                })\n              })\n            },\n          }\n\n          // setup the grid after the page has finished loading\n\n          const gridDiv = document.querySelector('#myGrid')\n          gridDiv.componentOnReady().then(() => {\n            new agGrid.Grid(gridDiv, gridOptions)\n            gridOptions.api.sizeColumnsToFit()\n          })\n        })\n      </script>\n    </div>\n  </body>\n</html>\n"
    },
    {
      "filePath": "./src/components/bal-tabs/bal-tabs.tsx",
      "encapsulation": "scoped",
      "tag": "bal-tabs",
      "readme": "# Tabs\n",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "action",
          "type": "boolean",
          "mutable": false,
          "attr": "action",
          "reflectToAttr": false,
          "docs": "If `true` a acation button is added to the right",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "actionLabel",
          "type": "string",
          "mutable": false,
          "attr": "action-label",
          "reflectToAttr": false,
          "docs": "Label for the action button",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "clickable",
          "type": "boolean",
          "mutable": false,
          "attr": "clickable",
          "reflectToAttr": false,
          "docs": "If `true` the tabs or steps can be clicked.",
          "docsTags": [],
          "default": "true",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "expanded",
          "type": "boolean",
          "mutable": false,
          "attr": "expanded",
          "reflectToAttr": false,
          "docs": "If `true` the field expands over the whole width.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "interface",
          "type": "\"o-steps\" | \"steps\" | \"tabs\"",
          "mutable": false,
          "attr": "interface",
          "reflectToAttr": false,
          "docs": "Defines the layout of the tabs.",
          "docsTags": [],
          "default": "'tabs'",
          "values": [
            {
              "value": "o-steps",
              "type": "string"
            },
            {
              "value": "steps",
              "type": "string"
            },
            {
              "value": "tabs",
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "rounded",
          "type": "boolean",
          "mutable": false,
          "attr": "rounded",
          "reflectToAttr": false,
          "docs": "If you want the rounded tab style.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [
        {
          "name": "select",
          "returns": {
            "type": "Promise<void>",
            "docs": ""
          },
          "signature": "select(tab: BalTabOption) => Promise<void>",
          "parameters": [],
          "docs": "Go to tab with the given value",
          "docsTags": []
        }
      ],
      "events": [
        {
          "event": "balActionClick",
          "detail": "MouseEvent",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Emitted when the action button has clicked",
          "docsTags": []
        },
        {
          "event": "balTabChange",
          "detail": "BalTabOption",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Emitted when the changes has finished.",
          "docsTags": []
        }
      ],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [
        "bal-button"
      ],
      "dependencyGraph": {
        "bal-tabs": [
          "bal-button"
        ],
        "bal-button": [
          "bal-spinner",
          "bal-icon",
          "bal-text"
        ]
      },
      "parent": null,
      "isChild": false,
      "childComponents": [
        "bal-tab-item"
      ],
      "examples": "<!DOCTYPE html>\n<html dir=\"ltr\" lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, minimum-scale=1.0, maximum-scale=5.0\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n    <link rel=\"stylesheet\" href=\"/build/design-system-components.css\" />\n    <script type=\"module\" src=\"/build/design-system-components.esm.js\"></script>\n    <script nomodule src=\"/build/design-system-components.js\"></script>\n  </head>\n  <body class=\"bal-app\">\n    <div class=\"container\">\n      <h2 class=\"title is-size-2\">Main Navigation</h2>\n      <section>\n        <bal-tabs action action-label=\"Action\" data-test-id=\"tabs\">\n          <bal-tab-item value=\"tab-a\" label=\"Tab A\" active=\"true\">Content of Tab A</bal-tab-item>\n          <bal-tab-item value=\"tab-b\" label=\"Tab B\">Content of Tab B</bal-tab-item>\n          <bal-tab-item bubble value=\"tab-c\" label=\"Tab C\">Content of Tab C</bal-tab-item>\n          <bal-tab-item disabled value=\"tab-d\" label=\"Tab D\">Content of Tab D</bal-tab-item>\n        </bal-tabs>\n      </section>\n\n      <h2 class=\"title is-size-2\">Sub Navigation</h2>\n      <section>\n        <bal-tabs rounded>\n          <bal-tab-item value=\"tab-a\" label=\"Tab A\" active=\"true\">Content of Tab A</bal-tab-item>\n          <bal-tab-item value=\"tab-b\" label=\"Tab B\">Content of Tab B</bal-tab-item>\n          <bal-tab-item value=\"tab-c\" label=\"Tab C\">Content of Tab C</bal-tab-item>\n        </bal-tabs>\n      </section>\n\n      <h2 class=\"title is-size-2\">Expanded</h2>\n      <section>\n        <bal-tabs rounded expanded>\n          <bal-tab-item value=\"tab-a\" label=\"Tab A\" active=\"true\">Content of Tab A</bal-tab-item>\n          <bal-tab-item value=\"tab-b\" label=\"Tab B\">Content of Tab B</bal-tab-item>\n          <bal-tab-item value=\"tab-c\" label=\"Tab C\">Content of Tab C</bal-tab-item>\n        </bal-tabs>\n      </section>\n\n      <h2 class=\"title is-size-2\">Steps (Stepper)</h2>\n      <section>\n        <bal-tabs interface=\"steps\">\n          <bal-tab-item value=\"step-a\" label=\"Lorem ipsum dolor sit amet consectetur\" done> Step A Content </bal-tab-item>\n          <bal-tab-item value=\"step-b\" label=\"Step B\" active>Step B Content</bal-tab-item>\n          <bal-tab-item value=\"step-c\" label=\"Step C\" failed>Step C Content</bal-tab-item>\n          <bal-tab-item value=\"step-d\" label=\"Step D\" disabled>Step D Content</bal-tab-item>\n        </bal-tabs>\n      </section>\n\n      <h2 class=\"title is-size-2\">O-Steps (Stepper)</h2>\n      <section>\n        <bal-tabs interface=\"o-steps\" data-test-id=\"steps\">\n          <bal-tab-item value=\"step-a\" label=\"Lorem ipsum dolor sit amet consectetur\" done> Step A Content </bal-tab-item>\n          <bal-tab-item value=\"step-b\" label=\"Step B\" active>Step B Content</bal-tab-item>\n          <bal-tab-item value=\"step-c\" label=\"Step C\" failed>Step C Content</bal-tab-item>\n          <bal-tab-item value=\"step-d\" label=\"Step D\">Step D Content</bal-tab-item>\n          <bal-tab-item value=\"step-d\" label=\"Step D\" disabled>Step D Content</bal-tab-item>\n        </bal-tabs>\n      </section>\n    </div>\n  </body>\n</html>\n"
    },
    {
      "filePath": "./src/components/bal-tag/bal-tag.tsx",
      "encapsulation": "none",
      "tag": "bal-tag",
      "readme": "# Tag\n",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "closable",
          "type": "boolean",
          "mutable": false,
          "attr": "closable",
          "reflectToAttr": false,
          "docs": "The theme type of the tag. Given by bulma our css framework.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "color",
          "type": "\"\" | \"danger\" | \"info\" | \"primary\" | \"success\" | \"warning\"",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "The theme type of the tag. Given by bulma our css framework.",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "\"\""
            },
            {
              "value": "danger",
              "type": "string"
            },
            {
              "value": "info",
              "type": "string"
            },
            {
              "value": "primary",
              "type": "string"
            },
            {
              "value": "success",
              "type": "string"
            },
            {
              "value": "warning",
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "size",
          "type": "\"\" | \"large\" | \"medium\" | \"small\"",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "The size of the tag element",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "\"\""
            },
            {
              "value": "large",
              "type": "string"
            },
            {
              "value": "medium",
              "type": "string"
            },
            {
              "value": "small",
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [
        {
          "event": "balCloseClick",
          "detail": "MouseEvent",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Emitted when the input got clicked.",
          "docsTags": []
        }
      ],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [
        "bal-select"
      ],
      "dependencies": [
        "bal-text"
      ],
      "dependencyGraph": {
        "bal-tag": [
          "bal-text"
        ],
        "bal-select": [
          "bal-tag"
        ]
      },
      "parent": null,
      "isChild": false,
      "childComponents": [],
      "examples": "<!DOCTYPE html>\n<html dir=\"ltr\" lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, minimum-scale=1.0, maximum-scale=5.0\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n    <link rel=\"stylesheet\" href=\"/build/design-system-components.css\" />\n    <script type=\"module\" src=\"/build/design-system-components.esm.js\"></script>\n    <script nomodule src=\"/build/design-system-components.js\"></script>\n  </head>\n  <body class=\"bal-app\">\n    <div class=\"container\">\n      <h2 class=\"title is-size-2\">Basic</h2>\n      <section>\n        <bal-tag>Default</bal-tag>\n        <bal-tag color=\"primary\">Primary</bal-tag>\n        <bal-tag color=\"info\">Info</bal-tag>\n        <bal-tag color=\"success\">Success</bal-tag>\n        <bal-tag color=\"warning\">Warning</bal-tag>\n        <bal-tag color=\"danger\">Danger</bal-tag>\n      </section>\n\n      <h2 class=\"title is-size-2\">Size</h2>\n      <section>\n        <bal-tag color=\"primary\" size=\"small\">Small</bal-tag>\n        <bal-tag color=\"info\" size=\"medium\">Medium</bal-tag>\n        <bal-tag color=\"success\" size=\"large\">Large</bal-tag>\n      </section>\n\n      <h2 class=\"title is-size-2\">Closable</h2>\n      <section>\n        <bal-tag color=\"primary\" size=\"small\" closable>Small</bal-tag>\n        <bal-tag color=\"info\" size=\"medium\" closable>Medium</bal-tag>\n        <bal-tag color=\"success\" size=\"large\" closable>Large</bal-tag>\n      </section>\n\n      <h2 class=\"title is-size-2\">Dense</h2>\n      <section>\n        <bal-tag color=\"primary\" size=\"small\" dense closable>Small</bal-tag>\n        <bal-tag color=\"info\" size=\"medium\" dense closable>Medium</bal-tag>\n        <bal-tag color=\"success\" size=\"large\" dense closable>Large</bal-tag>\n      </section>\n    </div>\n  </body>\n</html>\n"
    },
    {
      "filePath": "./src/components/bal-text/bal-text.tsx",
      "encapsulation": "none",
      "tag": "bal-text",
      "readme": "# Text\n",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "bold",
          "type": "boolean",
          "mutable": false,
          "attr": "bold",
          "reflectToAttr": false,
          "docs": "If `true` the text is bold",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "color",
          "type": "\"\" | \"danger\" | \"hint\" | \"info\" | \"primary\" | \"success\" | \"warning\"",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "Defines the color of the text.",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "\"\""
            },
            {
              "value": "danger",
              "type": "string"
            },
            {
              "value": "hint",
              "type": "string"
            },
            {
              "value": "info",
              "type": "string"
            },
            {
              "value": "primary",
              "type": "string"
            },
            {
              "value": "success",
              "type": "string"
            },
            {
              "value": "warning",
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "small",
          "type": "boolean",
          "mutable": false,
          "attr": "small",
          "reflectToAttr": false,
          "docs": "If `true` the text has a small size",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [
        "bal-button",
        "bal-checkbox",
        "bal-list-item-subtitle",
        "bal-list-item-title",
        "bal-pagination",
        "bal-radio",
        "bal-snackbar",
        "bal-tag",
        "bal-toast"
      ],
      "dependencies": [],
      "dependencyGraph": {
        "bal-button": [
          "bal-text"
        ],
        "bal-checkbox": [
          "bal-text"
        ],
        "bal-list-item-subtitle": [
          "bal-text"
        ],
        "bal-list-item-title": [
          "bal-text"
        ],
        "bal-pagination": [
          "bal-text"
        ],
        "bal-radio": [
          "bal-text"
        ],
        "bal-snackbar": [
          "bal-text"
        ],
        "bal-tag": [
          "bal-text"
        ],
        "bal-toast": [
          "bal-text"
        ]
      },
      "parent": null,
      "isChild": false,
      "childComponents": [],
      "examples": "<!DOCTYPE html>\n<html dir=\"ltr\" lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, minimum-scale=1.0, maximum-scale=5.0\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n    <link rel=\"stylesheet\" href=\"/build/design-system-components.css\" />\n    <script type=\"module\" src=\"/build/design-system-components.esm.js\"></script>\n    <script nomodule src=\"/build/design-system-components.js\"></script>\n  </head>\n  <body class=\"bal-app\">\n    <div class=\"container\">\n      <h2 class=\"title is-size-2\">Basic</h2>\n      <section>\n        <bal-text>Lorem ipsum dolor sit amet consectetur adipisicing elit.</bal-text>\n      </section>\n\n      <h2 class=\"title is-size-2\">Small</h2>\n      <section>\n        <bal-text small>Lorem ipsum dolor sit amet consectetur adipisicing elit.</bal-text>\n      </section>\n\n      <h2 class=\"title is-size-2\">Bold</h2>\n      <section>\n        <bal-text bold>Lorem ipsum dolor sit amet consectetur adipisicing elit.</bal-text>\n      </section>\n\n      <h2 class=\"title is-size-2\">Colors</h2>\n      <section>\n        <bal-text color=\"primary\"><strong>Primary</strong> Lorem ipsum dolor sit amet consectetur adipisicing elit.</bal-text>\n        <br />\n        <bal-text color=\"info\"><strong>Info</strong> Lorem ipsum dolor sit amet consectetur adipisicing elit.</bal-text>\n        <br />\n        <bal-text color=\"hint\"><strong>Hint</strong> Lorem ipsum dolor sit amet consectetur adipisicing elit.</bal-text>\n        <br />\n        <bal-text color=\"success\"><strong>Success</strong> Lorem ipsum dolor sit amet consectetur adipisicing elit.</bal-text>\n        <br />\n        <bal-text color=\"warning\"><strong>Warning</strong> Lorem ipsum dolor sit amet consectetur adipisicing elit.</bal-text>\n        <br />\n        <bal-text color=\"danger\"><strong>Danger</strong> Lorem ipsum dolor sit amet consectetur adipisicing elit.</bal-text>\n      </section>\n    </div>\n  </body>\n</html>\n"
    },
    {
      "filePath": "./src/components/bal-textarea/bal-textarea.tsx",
      "encapsulation": "scoped",
      "tag": "bal-textarea",
      "readme": "# Textarea <Badge text=\"Two-way binding\"/>\n",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "autocapitalize",
          "type": "string",
          "mutable": false,
          "attr": "autocapitalize",
          "reflectToAttr": false,
          "docs": "Indicates whether and how the text value should be automatically capitalized as it is entered/edited by the user.",
          "docsTags": [],
          "default": "'none'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "autofocus",
          "type": "boolean",
          "mutable": false,
          "attr": "autofocus",
          "reflectToAttr": false,
          "docs": "This Boolean attribute lets you specify that a form control should have input focus when the page loads.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "balTabindex",
          "type": "number",
          "mutable": false,
          "attr": "bal-tabindex",
          "reflectToAttr": false,
          "docs": "The tabindex of the control.",
          "docsTags": [],
          "default": "0",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "clickable",
          "type": "boolean",
          "mutable": false,
          "attr": "clickable",
          "reflectToAttr": false,
          "docs": "If `true` the input gets a clickable cursor style",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "cols",
          "type": "number | undefined",
          "mutable": false,
          "attr": "cols",
          "reflectToAttr": false,
          "docs": "The visible width of the text control, in average character widths. If it is specified, it must be a positive integer.",
          "docsTags": [],
          "values": [
            {
              "type": "number"
            },
            {
              "type": "undefined"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "debounce",
          "type": "number",
          "mutable": false,
          "attr": "debounce",
          "reflectToAttr": false,
          "docs": "Set the amount of time, in milliseconds, to wait to trigger the `ionChange` event after each keystroke. This also impacts form bindings such as `ngModel` or `v-model`.",
          "docsTags": [],
          "default": "0",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "disabled",
          "type": "boolean",
          "mutable": false,
          "attr": "disabled",
          "reflectToAttr": false,
          "docs": "If `true`, the user cannot interact with the textarea.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "inputmode",
          "type": "\"decimal\" | \"email\" | \"none\" | \"numeric\" | \"search\" | \"tel\" | \"text\" | \"url\" | undefined",
          "mutable": false,
          "attr": "inputmode",
          "reflectToAttr": false,
          "docs": "A hint to the browser for which keyboard to display.\nPossible values: `\"none\"`, `\"text\"`, `\"tel\"`, `\"url\"`,\n`\"email\"`, `\"numeric\"`, `\"decimal\"`, and `\"search\"`.",
          "docsTags": [],
          "values": [
            {
              "value": "decimal",
              "type": "string"
            },
            {
              "value": "email",
              "type": "string"
            },
            {
              "value": "none",
              "type": "string"
            },
            {
              "value": "numeric",
              "type": "string"
            },
            {
              "value": "search",
              "type": "string"
            },
            {
              "value": "tel",
              "type": "string"
            },
            {
              "value": "text",
              "type": "string"
            },
            {
              "value": "url",
              "type": "string"
            },
            {
              "type": "undefined"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "inverted",
          "type": "boolean",
          "mutable": false,
          "attr": "inverted",
          "reflectToAttr": false,
          "docs": "If `true` this component can be placed on dark background",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "maxLength",
          "type": "number | undefined",
          "mutable": false,
          "attr": "max-length",
          "reflectToAttr": false,
          "docs": "If the value of the type attribute is `text`, `email`, `search`, `password`, `tel`, or `url`, this attribute specifies the maximum number of characters that the user can enter.",
          "docsTags": [],
          "values": [
            {
              "type": "number"
            },
            {
              "type": "undefined"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "minLength",
          "type": "number | undefined",
          "mutable": false,
          "attr": "min-length",
          "reflectToAttr": false,
          "docs": "If the value of the type attribute is `text`, `email`, `search`, `password`, `tel`, or `url`, this attribute specifies the minimum number of characters that the user can enter.",
          "docsTags": [],
          "values": [
            {
              "type": "number"
            },
            {
              "type": "undefined"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "name",
          "type": "string",
          "mutable": false,
          "attr": "name",
          "reflectToAttr": false,
          "docs": "The name of the control, which is submitted with the form data.",
          "docsTags": [],
          "default": "this.inputId",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "placeholder",
          "type": "string | undefined",
          "mutable": false,
          "attr": "placeholder",
          "reflectToAttr": false,
          "docs": "Instructional text that shows before the input has a value.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            },
            {
              "type": "undefined"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "readonly",
          "type": "boolean",
          "mutable": false,
          "attr": "readonly",
          "reflectToAttr": false,
          "docs": "If `true`, the user cannot modify the value.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "required",
          "type": "boolean",
          "mutable": false,
          "attr": "required",
          "reflectToAttr": false,
          "docs": "If `true`, the user must fill in a value before submitting a form.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "rows",
          "type": "number | undefined",
          "mutable": false,
          "attr": "rows",
          "reflectToAttr": false,
          "docs": "The number of visible text lines for the control.",
          "docsTags": [],
          "values": [
            {
              "type": "number"
            },
            {
              "type": "undefined"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "value",
          "type": "string | undefined",
          "mutable": true,
          "attr": "value",
          "reflectToAttr": false,
          "docs": "The value of the textarea.",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "string"
            },
            {
              "type": "undefined"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "wrap",
          "type": "\"hard\" | \"off\" | \"soft\" | undefined",
          "mutable": false,
          "attr": "wrap",
          "reflectToAttr": false,
          "docs": "Indicates how the control wraps text.",
          "docsTags": [],
          "values": [
            {
              "value": "hard",
              "type": "string"
            },
            {
              "value": "off",
              "type": "string"
            },
            {
              "value": "soft",
              "type": "string"
            },
            {
              "type": "undefined"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [
        {
          "name": "getInputElement",
          "returns": {
            "type": "Promise<HTMLTextAreaElement>",
            "docs": ""
          },
          "signature": "getInputElement() => Promise<HTMLTextAreaElement>",
          "parameters": [],
          "docs": "Returns the native `<textarea>` element used under the hood.",
          "docsTags": []
        },
        {
          "name": "setFocus",
          "returns": {
            "type": "Promise<void>",
            "docs": ""
          },
          "signature": "setFocus() => Promise<void>",
          "parameters": [],
          "docs": "Sets focus on the native `textarea` in `ion-textarea`. Use this method instead of the global\n`textarea.focus()`.",
          "docsTags": []
        }
      ],
      "events": [
        {
          "event": "balBlur",
          "detail": "FocusEvent",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Emitted when a keyboard input occurred.",
          "docsTags": []
        },
        {
          "event": "balChange",
          "detail": "string",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Emitted when the input value has changed..",
          "docsTags": []
        },
        {
          "event": "balClick",
          "detail": "MouseEvent",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Emitted when the input has clicked.",
          "docsTags": []
        },
        {
          "event": "balFocus",
          "detail": "FocusEvent",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Emitted when the input has focus.",
          "docsTags": []
        },
        {
          "event": "balInput",
          "detail": "string",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Emitted when a keyboard input occurred.",
          "docsTags": []
        },
        {
          "event": "balKeyPress",
          "detail": "KeyboardEvent",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Emitted when a keyboard key has pressed.",
          "docsTags": []
        }
      ],
      "listeners": [
        {
          "event": "click",
          "target": "document",
          "capture": true,
          "passive": false
        }
      ],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {},
      "parent": null,
      "isChild": false,
      "childComponents": [],
      "examples": "<!DOCTYPE html>\n<html dir=\"ltr\" lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, minimum-scale=1.0, maximum-scale=5.0\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n    <link rel=\"stylesheet\" href=\"/build/design-system-components.css\" />\n    <script type=\"module\" src=\"/build/design-system-components.esm.js\"></script>\n    <script nomodule src=\"/build/design-system-components.js\"></script>\n  </head>\n  <body class=\"bal-app\">\n    <div class=\"container\">\n      <h2 class=\"title is-size-2\">Basic</h2>\n      <section>\n        <bal-textarea data-test-id=\"textarea\" name=\"comment\" placeholder=\"Enter your comment\"></bal-textarea>\n      </section>\n      <h2 class=\"title is-size-2\">Disabled</h2>\n      <section>\n        <bal-textarea data-test-id=\"textarea-disabled\" name=\"comment\" disabled placeholder=\"Disabled Textarea\"></bal-textarea>\n      </section>\n    </div>\n  </body>\n</html>\n"
    },
    {
      "filePath": "./src/components/bal-timeinput/bal-timeinput.tsx",
      "encapsulation": "scoped",
      "tag": "bal-timeinput",
      "readme": "# Timeinput\n",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "disabled",
          "type": "boolean",
          "mutable": false,
          "attr": "disabled",
          "reflectToAttr": false,
          "docs": "If `true` the button is disabled",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "inverted",
          "type": "boolean",
          "mutable": false,
          "attr": "inverted",
          "reflectToAttr": false,
          "docs": "If `true` the timeinput can be used on blue background.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "maxTime",
          "type": "string",
          "mutable": false,
          "attr": "max-time",
          "reflectToAttr": false,
          "docs": "Latest date available for selection",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "minTime",
          "type": "string",
          "mutable": false,
          "attr": "min-time",
          "reflectToAttr": false,
          "docs": "Earliest date available for selection",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "value",
          "type": "string",
          "mutable": true,
          "attr": "value",
          "reflectToAttr": false,
          "docs": "The value of the datepicker with the format `hh:mm`.",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [
        {
          "event": "balBlur",
          "detail": "FocusEvent",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Emitted when either the hour or minute input field loses focus.",
          "docsTags": []
        },
        {
          "event": "balChange",
          "detail": "string",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Emitted when either the hour or the minute input has changed.\nIt will not be triggert if either hour or time input has never been set (i.e. \"--\" is selected).",
          "docsTags": []
        }
      ],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {},
      "parent": null,
      "isChild": false,
      "childComponents": [],
      "examples": "<!DOCTYPE html>\n<html dir=\"ltr\" lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, minimum-scale=1.0, maximum-scale=5.0\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n    <link rel=\"stylesheet\" href=\"/build/design-system-components.css\" />\n    <script type=\"module\" src=\"/build/design-system-components.esm.js\"></script>\n    <script nomodule src=\"/build/design-system-components.js\"></script>\n  </head>\n  <body class=\"bal-app\">\n    <div class=\"container\">\n      <h2 class=\"title is-size-2\">Basic</h2>\n\n      <section>\n        <bal-timeinput id=\"bal-timeinput-example\" value=\"12:30\"></bal-timeinput>\n      </section>\n\n      <h2 class=\"title is-size-2\">Inverted style</h2>\n\n      <section class=\"has-background-info has-padding\">\n        <bal-timeinput id=\"bal-timeinput-example\" value=\"12:30\" inverted></bal-timeinput>\n      </section>\n\n      <h2 class=\"title is-size-2\">Min and max time</h2>\n\n      <section>\n        <bal-timeinput value=\"12:30\" min-time=\"09:30\" max-time=\"18:00\"></bal-timeinput>\n      </section>\n\n      <h2 class=\"title is-size-2\">Disabled</h2>\n\n      <section>\n        <bal-timeinput value=\"23:10\" disabled></bal-timeinput>\n      </section>\n    </div>\n  </body>\n</html>\n"
    },
    {
      "filePath": "./src/components/bal-toast/bal-toast.tsx",
      "encapsulation": "scoped",
      "tag": "bal-toast",
      "readme": "# bal-toast\n\n\n",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "color",
          "type": "\"\" | \"danger\" | \"info\" | \"primary\" | \"success\" | \"warning\"",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "The theme type of the toast. Given by bulma our css framework.",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "\"\""
            },
            {
              "value": "danger",
              "type": "string"
            },
            {
              "value": "info",
              "type": "string"
            },
            {
              "value": "primary",
              "type": "string"
            },
            {
              "value": "success",
              "type": "string"
            },
            {
              "value": "warning",
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "duration",
          "type": "number",
          "mutable": false,
          "attr": "duration",
          "reflectToAttr": false,
          "docs": "The duration of the toast in milliseconds.",
          "docsTags": [],
          "default": "0",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "message",
          "type": "string",
          "mutable": false,
          "attr": "message",
          "reflectToAttr": false,
          "docs": "Content message",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [
        {
          "name": "close",
          "returns": {
            "type": "Promise<void>",
            "docs": ""
          },
          "signature": "close() => Promise<void>",
          "parameters": [],
          "docs": "Closes this toast",
          "docsTags": []
        },
        {
          "name": "closeIn",
          "returns": {
            "type": "Promise<void>",
            "docs": ""
          },
          "signature": "closeIn(duration: number) => Promise<void>",
          "parameters": [],
          "docs": "Closes the toast after the given duration in ms",
          "docsTags": []
        }
      ],
      "events": [
        {
          "event": "balClose",
          "detail": "string",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Emitted when toast is closed",
          "docsTags": []
        }
      ],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [
        "bal-text",
        "bal-icon"
      ],
      "dependencyGraph": {
        "bal-toast": [
          "bal-text",
          "bal-icon"
        ]
      },
      "parent": null,
      "isChild": false,
      "childComponents": [],
      "examples": "<!DOCTYPE html>\n<html dir=\"ltr\" lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, minimum-scale=1.0, maximum-scale=5.0\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n    <link rel=\"stylesheet\" href=\"/build/design-system-components.css\" />\n    <script type=\"module\" src=\"/build/design-system-components.esm.js\"></script>\n    <script nomodule src=\"/build/design-system-components.js\"></script>\n    <script type=\"module\">\n      import { balToastController } from '/build/index.esm.js'\n\n      window.balToastController = balToastController\n    </script>\n  </head>\n  <body class=\"bal-app\">\n    <div class=\"container\">\n      <h2 class=\"title is-size-2\">Basic</h2>\n      <section>\n        <bal-button id=\"toast-default\" color=\"success\" data-test-id=\"toast\">Show success Toast</bal-button>\n        <bal-button id=\"toast-warning\" color=\"warning\" data-test-id=\"toast-warning\">Show warning Toast</bal-button>\n        <bal-button id=\"toast-danger\" color=\"danger\">Show error Toast</bal-button>\n        <br />\n        <br />\n        <bal-button id=\"toast-clear-all\" color=\"info\" outlined>Clear all toasts</bal-button>\n      </section>\n      <script>\n        document.getElementById('toast-default').onclick = function () {\n          balToastController.create({\n            message: 'Hi I am a default Toast! Hi I am a default Toast!',\n            color: 'success',\n            duration: 1000,\n          })\n        }\n        document.getElementById('toast-warning').onclick = function () {\n          const toast = balToastController.create({ message: 'Warning!', color: 'warning' })\n          setTimeout(() => toast.close, 2000)\n        }\n        document.getElementById('toast-danger').onclick = function () {\n          balToastController.create({\n            message: 'Danger zone!',\n            color: 'danger',\n            closeHandler: function () {\n              alert('Toast closed')\n            },\n          })\n        }\n        document.getElementById('toast-clear-all').onclick = function () {\n          balToastController.clearAll()\n        }\n      </script>\n\n      <h2 class=\"title is-size-2\">Colors</h2>\n      <section>\n        <bal-toast>\n          <strong>Default</strong>\n          Lorem ipsum dolor sit amet, consectetur adipisicing elit.\n        </bal-toast>\n        <bal-toast color=\"primary\">\n          <strong>Primary</strong>\n          Lorem ipsum dolor sit amet, consectetur adipisicing elit.\n        </bal-toast>\n        <bal-toast color=\"info\">\n          <strong>Info</strong>\n          Lorem ipsum dolor sit amet, consectetur adipisicing elit.\n        </bal-toast>\n        <bal-toast color=\"success\">\n          <strong>Success</strong>\n          Lorem ipsum dolor sit amet, consectetur adipisicing elit.\n        </bal-toast>\n        <bal-toast color=\"warning\">\n          <strong>Warning</strong>\n          Lorem ipsum dolor sit amet, consectetur adipisicing elit.\n        </bal-toast>\n        <bal-toast color=\"danger\">\n          <strong>Danger</strong>\n          Lorem ipsum dolor sit amet, consectetur adipisicing elit.\n        </bal-toast>\n      </section>\n    </div>\n  </body>\n</html>\n"
    }
  ]
}
